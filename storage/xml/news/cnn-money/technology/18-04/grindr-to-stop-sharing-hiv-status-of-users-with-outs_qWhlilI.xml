<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Heather Kelly, ('CNN Money',)
 </author>
 <date>
  2018-04-02T09:11:15+01:00
 </date>
 <article>
<t>
 Grindr to stop sharing HIV status of users with outside companies
</t>
<d>
 Grindr at first defended its practice of sharing user profile information with other companies.
</d>
<p>
 The gay dating app Grindr says it will stop sharing the HIV status of its users with other companies.
</p>
<p>
 Grindr made the decision late Monday after first defending the practice, which involved sending user profile information — including HIV status and test dates — to two companies called Apptimize and Localytics. They test the performance of Grindr's products.
</p>
<p>
 Grindr said earlier Monday that the HIV data is not sold to third parties or used to target advertisers, and Localytics said that it does not share the information it receives from customers like Grindr. Apptimize did not respond to a request for comment.
</p>
<p>
 Grindr has more than 3.5 million users who check the service daily. Individual profiles, which are visible to other people using the app, can include a large amount of personal information.
</p>
<p>
 HIV status is an optional field on the dating app that users can choose to fill out or skip. According to SINTEF's research, data included in that field was being sent to Apptimize and Localytics, though it was encrypted.
</p>
<p>
 The two companies were also receiving other, less-sensitive data — including location, gender, age and physical type — though that data was not always encrypted, according to SINTEF. Third-party advertisers were receiving some of that data, too, the nonprofit said.
</p>
<p>
 "The inclusion of HIV status information within our platform is always regarded carefully with our users' privacy in mind, but like any other mobile app company, we too must operate with industry standard practices to help make sure Grindr continues to improve for our community," said Grindr's chief technology officer Scott Chen.
</p>
<p>
 He added, though, that the app is still a public forum.
</p>
<p>
 "We make it clear in our privacy policy that if you chose to include this information in your profile, the information will also become public," Chen said in that statement. "As a result, you should carefully consider what information to include in your profile."
</p>
<p>
 Localytics, meanwhile, said that it does not "automatically" collect a Grindr user's personal information. The app-marketing company added that all the data it does receive is stored securely in accordance with industry standards.
</p>
<p>
 The news comes one week after Grindr announced a new feature that would encourage users to get tested regularly for HIV. The opt-in feature was lauded by some HIV health experts at the time, including Professor Perry Halkitis, dean of Rutgers University School of Public Health.
</p>
<p>
 "I was thrilled when they were doing that," Halkitis said Monday. "This absolutely dampens my enthusiasm."
</p>
<p>
 Halkitis works with similar data in his research. He said that he uses strict safeguards to prevent it from falling into the wrong hands. For example, he does not transfer the data electronically.
</p>
<p>
 He added that HIV status can be used to discriminate against people in the workplace, at school, for housing and in health care.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
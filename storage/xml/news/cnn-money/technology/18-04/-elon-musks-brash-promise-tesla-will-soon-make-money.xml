<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Chris Isidore, ('CNN Money',)
 </author>
 <date>
  2018-04-13T04:36:42+01:00
 </date>
 <article>
<t>
 Elon Musk's brash promise: Tesla will soon make money
</t>
<d>
 Musk tweets more bullish profit outlook for Tesla, promising electric car maker will be making money second half of 2018.
</d>
<p>
 Elon Musk says he's finally ready to start making money.
</p>
<p>
 "The Economist used to be boring, but smart with a wicked dry wit. Now it's just boring (sigh). Tesla will be profitable &amp; cash flow positive in Q3 &amp; Q4, so obviously no need to raise money," he tweeted.
</p>
<p>
 The Economist used to be boring, but smart with a wicked dry wit. Now it's just boring (sigh). Tesla will be profitable &amp; cash flow+ in Q3 &amp; Q4, so obv no need to raise money.
</p>
<p>
 For instance, in February he said, "It's not certain, but I'm cautiously optimistic that we will actually be....profitable with no asterisk," at some point in 2018. At that time Tesla had just posted a full-year loss of nearly $2 billion for 2017.
</p>
<p>
 But if the company can start building the Model 3, at a significantly faster pace, it will be able to bring in a significant amount of cash.
</p>
<p>
 Tesla has predicted it will be building 5,000 Model 3's a week by the end of June, and that it will soon be building 10,000 cars a week, or about a half million a year. That would be significantly more than the roughly 340,000 cars it has sold since it built its first car in 10 years ago.
</p>
<p>
 That might be because Musk has a long history of failing to deliver on his promises. When Tesla started building the Model 3 in July of last year, Musk predicted the company would churn out 5,000 Model 3's a week by the end of the year. Instead, it had only built a total of 2,700 by the end of 2017.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Selena Larson, ('CNN Money',)
 </author>
 <date>
  2018-01-24T03:55:51+01:00
 </date>
 <article>
<t>
 Alphabet launches cybersecurity firm Chronicle
</t>
<d>
 The "intelligence and analytics" security firm launched out of X.
</d>
<p>
 Google's parent company, Alphabet, is launching a business to protect companies from hackers.
</p>
<p>
 Chronicle, a new company under the Alphabet umbrella, calls itself a "cybersecurity intelligence and analytics platform."
</p>
<p>
 It spun out of Alphabet's research and development arm X (formerly Google[x]) where it was founded in February 2016. Alphabet is a holding company created by Google in 2015 as part of a corporate restructuring. The company includes Google, Verily and Nest.
</p>
<p>
 "We want to 10x the speed and impact of security teams' work by making it much easier, faster and more cost-effective for them to capture and analyze security signals that have previously been too difficult and expensive to find," Gillett wrote.
</p>
<p>
 Details about the Chronicle platform are sparse, but Gillett, a former Google Ventures executive and formerly the COO of security firm Symantec, says the company is "dedicated to helping companies find and stop cyber attacks before they cause harm."
</p>
<p>
 Many companies already work in predictive security, and it's unclear how Chronicle will be different from other products. A spokesperson for Chronicle declined our request for an interview with Chronicle executives because they said they were focused on the launch.
</p>
<p>
 VirusTotal, the malware analysis platform Google acquired in 2012, will also be a part of Chronicle.
</p>
<p>
 Chronicle is currently testing its platform with Fortune 500 companies. The firm did not say with which companies it was working.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
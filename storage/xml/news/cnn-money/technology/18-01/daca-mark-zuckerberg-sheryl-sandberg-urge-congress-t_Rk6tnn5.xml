<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Sara Ashley O'Brien, ('CNN Money',)
 </author>
 <date>
  2018-01-17T02:32:17+01:00
 </date>
 <article>
<t>
 DACA: Mark Zuckerberg, Sheryl Sandberg urge Congress to protect Dreamers
</t>
<d>
 Facebook CEO Mark Zuckerberg and COO Sheryl Sandberg are urging Congress to pass DACA legislation protecting Dreamers as the clock ticks closer to the government spending deadline on January 19.
</d>
<p>
 Facebook CEO Mark Zuckerberg and COO Sheryl Sandberg are urging Congress to pass legislation protecting American immigrants known as Dreamers.
</p>
<p>
 It's a precarious time for Dreamers.
</p>
<p>
 Friday marks the deadline for a new government spending plan. And Democrats have been holding off on agreeing to a spending deal until there's a legislative fix for Dreamers, or undocumented immigrants who came to the United States as children.
</p>
<p>
 They'll soon become vulnerable because President Trump said he would end the Deferred Action for Childhood Arrivals program, which shielded Dreamers for deportation and allowed them to enroll in college and legally secure jobs. At the time, the government gave Congress six months to come up with a pathway to help Dreamers stay in the United States.
</p>
<p>
 "The average DACA recipient came to this country at age six and has lived here for 20 years. They've gone to American elementary and high schools," wrote Sandberg. "They work and live in every state. Some serve in our military. And now they face the very real possibility of being sent away from the country they call home."
</p>
<p>
 It's just the latest reminder of Silicon Valley's tension with the Trump administration, whose immigration policies have stung an industry where immigrants have played integral roles in the founding, and continued successes, of big name companies.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
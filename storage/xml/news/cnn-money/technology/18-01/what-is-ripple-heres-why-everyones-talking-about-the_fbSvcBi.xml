<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Selena Larson, ('CNN Money',)
 </author>
 <date>
  2018-01-02T10:31:42+01:00
 </date>
 <article>
<t>
 What is ripple? Here's why everyone's talking about the cryptocurrency
</t>
<d>
 Ripple's recent price spike has made it the second most valuable cryptocurrency after bitcoin. But it doesn't work the same way.
</d>
<p>
 In recent weeks, ripple's value has spiked, making it the second most valuable digital currency and bringing it newfound attention.
</p>
<p>
</p>
<p>
 According to Stephen Powaga, head of research at investment firm Blockchain Momentum, ripple and other some other cryptocurrencies have relatively low transaction fees, which made them popular when people began looking for alternatives to bitcoin.
</p>
<p>
 But unlike Bitcoin, ripple isn't created, or "mined," by users. The company has control.
</p>
<p>
 It created 100 billion ripple coins initially, and 38 billion of them are in circulation at the moment. Ripple management can release up to 1 billion coins per month, which Powaga predicts could oversaturate the market.
</p>
<p>
</p>
<p>
 "It's somewhat concerning for me because if they chose to release them as quickly as possible, within a little over four years, you'd see more than a doubling of supply of ripple," he said.
</p>
<p>
 That could put pressure on its price.
</p>
<p>
 "I'm not certain that some of the newer market participants are fully appreciating the potential for inflation," Powaga said.
</p>
<p>
 Cross-border payments that can take hours with bitcoin or days with traditional financial transactions can go through in a matter of seconds with ripple, the company says.
</p>
<p>
 Like bitcoin, ripple's payment network, RippleNet, uses blockchain technology.
</p>
<p>
 A blockchain is a public ledger containing transaction data from anyone who uses the service. Transactions are added to "blocks," or the links of code that make up the chain, and each transaction must be recorded on a block.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Matt McFarland, ('CNN Money',)
 </author>
 <date>
  2018-01-09T04:07:55+01:00
 </date>
 <article>
<t>
 CES 2018: Ford and Postmates team up on self-driving deliveries
</t>
<d>
 Ford is the latest car company that wants to deliver your takeout in a self-driving car.
</d>
<p>
 Ford is the latest car company that wants to deliver your takeout in a self-driving car.
</p>
<p>
 The automaker announced on Tuesday a partnership with Postmates, the delivery service darling of Silicon Valley, to test deliveries in its self-driving cars. The news was unveiled at CES 2018 in Las Vegas.
</p>
<p>
 Although many details around the partnership are unclear -- such as when and where the deliveries will take place -- the companies said Postmates' customers will be chosen at random to receive deliveries via a self-driving car.
</p>
<p>
 The companies also didn't elaborate on how Postmates customers would receive deliveries -- there will be someone in the car -- but said users will follow instructions provided via the app.
</p>
<p>
 Tests are scheduled to begin by the end of March. Postmates has customers in 250 cities and more than 120,000 delivery contractors. Its appeal is offering on-demand deliveries to customers who are short on time.
</p>
<p>
 For Ford, it highlights its interests into the operations of cities. It also announced it's working with wireless company Qualcomm on technology that will allow vehicles to communicate with other cars, pedestrians, cyclists and traffic lights.
</p>
<p>
 By connecting these elements, Ford believes congestion could decrease and cities will function better. Traffic signals would know when vehicles approach, and traffic lights could react accordingly, ensuring drivers won't unnecessarily be held up at intersections.
</p>
<p>
 On stage at the event, Ford executive director Don Butler demoed how an autonomous vehicle could realize if the driver is ill and pull over to the side of the road before alerting authorities.
</p>
<p>
 But the technology would add a new burden for pedestrians and cyclists. They'd need to carry a smartphone with them at all times in order for the autonomous vehicle to identify them.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
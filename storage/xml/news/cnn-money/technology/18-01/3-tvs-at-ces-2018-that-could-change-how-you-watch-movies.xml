<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Kaya Yurieff, ('CNN Money',)
 </author>
 <date>
  2018-01-09T09:38:09+01:00
 </date>
 <article>
<t>
 3 TVs at CES 2018 that could change how you watch movies
</t>
<d>
 From displays you can roll up like wrapping paper to ones as big as a wall, here are some of the most innovative TVs on show at CES 2018.
</d>
<p>
 Televisions often aren't very exciting. They're flat black rectangles you tend to forget about when a show or movie starts playing.
</p>
<p>
 But at CES 2018, the annual tech show happening this week in Las Vegas, manufacturers are still trying to generate buzz for their lineup of TVs coming later this year. The show also features futuristic concepts, such as a display you can roll up like wrapping paper and hide away.
</p>
<p>
 Those types of displays are more of a PR stunt for companies rather than a real product launch, according to Jim Nail, an analyst at research firm Forrester.
</p>
<p>
 "They are clearly PR fodder for the companies," he told CNN Tech. "TV manufacturers are still casting about for what will trigger the next replacement cycle of TVs, since flat screens have now pretty fully penetrated the market."
</p>
<p>
 But even though some of these TVs may not be available for purchase, they can point to what might come in the future, according to Patrick Moorhead, president of tech analysis firm Moor Insights &amp; Strategy.
</p>
<p>
 "Every year, TV manufacturers will show off aspirational products," he said.
</p>
<p>
 Here's a look at some of the flashiest TVs at CES this year.
</p>
<p>
</p>
<p>
 The 4K OLED display looks like a normal TV screen, but the back has small vertical slats which allow it to roll.
</p>
<p>
 However, don't expect to see this TV in retail stores anytime soon. LG Displays sells the technology directly to display manufacturers -- they will decide if they want to use it for their own products.
</p>
<p>
</p>
<p>
 Samsung's 146-inch TV is appropriately named: the company calls it The Wall.
</p>
<p>
 MicroLED is a self-emitting technology. The panel is made up of millions of micro-sized chips that emit light individually. It doesn't require color filters or backlighting.
</p>
<p>
 The technology will eventually allow for so-called wallpaper screens, which are displays that cover an entire wall of any shape or size, said James McQuivey, a Forrester analyst.
</p>
<p>
 "On a wall screen, you can watch TV, designating any section or portion of the display to act like a TV," he said. "But the rest of the wall can continue to display other things: family memories, simulated decor, or the avatars of family members watching remotely."
</p>
<p>
 Pricing for the TV has not yet been announced. It will be available later this year.
</p>
<p>
</p>
<p>
 LG's new TVs are the first to have Google Assistant entirely built in.
</p>
<p>
 You can ask the voice assistant to search for movies, play your favorite show, do a Google Search or read you the weather from your TV.
</p>
<p>
 While voice assistants may not be as flashy as a TV the size of a wall, they are a useful feature for consumers, according to Forrester's Nail.
</p>
<p>
 "Consumers are telling us it is difficult and confusing to try to find what they want to watch," he said. "The addition of a voice assistant provides an answer to an actual consumer problem."
</p>
<p>
 LG's new line of 4k OLED TVs range in size from 55 to 77 inches.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
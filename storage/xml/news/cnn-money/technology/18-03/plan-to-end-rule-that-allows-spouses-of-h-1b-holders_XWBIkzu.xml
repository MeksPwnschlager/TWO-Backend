<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Sara Ashley O'Brien, ('CNN Money',)
 </author>
 <date>
  2018-03-01T05:33:54+01:00
 </date>
 <article>
<t>
 Plan to end rule that allows spouses of H-1B holders to work is delayed
</t>
<d>
 Plans to rescind an Obama era rule that allows spouses of H-1B visa holders to work is delayed until June, according to a new court filing from the Department of Homeland Security.
</d>
<p>
 Under a rule introduced by President Obama's administration in 2015, the spouses of H-1B holders who are waiting for green cards are eligible to work in the U.S. on H-4 dependent visas.
</p>
<p>
 However, in a court filing this week, the agency stated that United States Citizenship and Immigration Services had determined in January that "significant revisions to the draft proposal were necessary." The revisions, the agency said, required a new economic analysis that took several more weeks to perform.
</p>
<p>
 The filing provides some relief -- at least temporarily -- to the thousands of people who are currently working on H-4 visas.
</p>
<p>
 Prior to the Obama administration's change, H-4 holders weren't allowed to earn an income or have a Social Security Number. That meant couples could only have one source of income.
</p>
<p>
 The H-1B visa is the common visa route for highly skilled foreigners to find work at companies in the U.S. It's valid for three years, and can be renewed for another three years. It's a program that's particularly popular in the tech community, with many engineers vying for one of the program's 85,000 visas each year.
</p>
<p>
 A DHS spokesperson said the department cannot comment on active rule making.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
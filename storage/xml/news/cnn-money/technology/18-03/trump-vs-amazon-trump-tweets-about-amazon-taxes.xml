<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Chris Isidore, ('CNN Money',)
 </author>
 <date>
  2018-03-29T10:43:06+01:00
 </date>
 <article>
<t>
 Trump vs. Amazon: Trump tweets about Amazon taxes
</t>
<d>
 Trump again attacks Amazon for not paying state and local taxes. But it actually does.
</d>
<p>
 Enough.
</p>
<p>
 President Trump took aim at Amazon yet again.
</p>
<p>
 The president on Thursday tweeted three misleading statements: 1) Amazon pays "little or no taxes to state &amp; local governments," 2) Amazon's relationship with the US Post Office causes "tremendous loss" to the United States and 3) Amazon is "putting many thousands of retailers out of business."
</p>
<p>
 It's no secret that Trump hates Amazon. He has repeatedly tweeted how much he dislikes the company.
</p>
<p>
 But Trump's criticism of Amazon is not based in fact.
</p>
<p>
 I have stated my concerns with Amazon long before the Election. Unlike others, they pay little or no taxes to state &amp; local governments, use our Postal System as their Delivery Boy (causing tremendous loss to the U.S.), and are putting many thousands of retailers out of business!
</p>
<p>
</p>
<p>
 Amazon collects sales tax in every state that charges one and remits it to the states -- and that's virtually every state
</p>
<p>
 Years ago, when Amazon had few warehouses, it was able to get a competitive advantage by not charging sales tax. When retailers ship goods to states where they don't have a physical presence, they do not have to charge sales tax.
</p>
<p>
 Amazon also pays local property taxes on its distribution centers as well as on the Whole Foods stores it purchased last year.
</p>
<p>
 The company has not disclosed how much its customers pay in sales taxes, but it is considerable. Its North American sales came to $106 billion last year, suggesting that it collects billions in sales taxes for various states.
</p>
<p>
 Amazon pays the post office to deliver packages to customers' doors.
</p>
<p>
 Because Amazon ships so many packages though the post office, it pays a lower rate than most customers. Amazon and other bulk shippers negotiate confidential deals, based on the nature of their shipments and the volume. Those deals are required by law to cover the post office's costs, and they need the approval of postal regulators.
</p>
<p>
 Amazon also has a special agreement with the Postal Service to deliver packages on Sundays. Neither Amazon nor the post office has disclosed the details of its agreement, but the Postal Service says it's mutually beneficial. Amazon effectively helps the Postal Service spread its costs over a seven-day week.
</p>
<p>
 Amazon says that it actually helps small companies succeed in the difficult retail climate. For example, it allows small businesses to sell their products to a mass audience when they otherwise wouldn't be able to achieve global scale.
</p>
 </article>
 <annotations>
  b'gANjZ29vZ2xlLmNsb3VkLmxhbmd1YWdlX3YxLnR5cGVzCkFubm90YXRlVGV4dFJlc3BvbnNlCnEAKVJxAX1xAlgKAAAAc2VyaWFsaXplZHEDQqxmAAAKiwEKfQp7PHQ+VHJ1bXAgdnMuIEFtYXpvbjogVHJ1bXAgdHdlZXRzIGFib3V0IEFtYXpvbiB0YXhlczwvdD48ZD5UcnVtcCBhZ2FpbiBhdHRhY2tzIEFtYXpvbiBmb3Igbm90IHBheWluZyBzdGF0ZSBhbmQgbG9jYWwgdGF4ZXMuEgoVzcxMPh3NzEy+CmoKXApYQnV0IGl0IGFjdHVhbGx5IGRvZXMuPC9kPjxwPkVub3VnaC48L3A+PHA+IFByZXNpZGVudCBUcnVtcCB0b29rIGFpbSBhdCBBbWF6b24geWV0IGFnYWluLhB8EgoVzczMPR3NzMw9CsgCCrkCCrMCPC9wPjxwPiBUaGUgcHJlc2lkZW50IG9uIFRodXJzZGF5IHR3ZWV0ZWQgdGhyZWUgbWlzbGVhZGluZyBzdGF0ZW1lbnRzOiAxKSBBbWF6b24gcGF5cyAibGl0dGxlIG9yIG5vIHRheGVzIHRvIHN0YXRlICZhbXA7IGxvY2FsIGdvdmVybm1lbnRzLCIgMikgQW1hem9uJ3MgcmVsYXRpb25zaGlwIHdpdGggdGhlIFVTIFBvc3QgT2ZmaWNlIGNhdXNlcyAidHJlbWVuZG91cyBsb3NzIiB0byB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgMykgQW1hem9uIGlzICJwdXR0aW5nIG1hbnkgdGhvdXNhbmRzIG9mIHJldGFpbGVycyBvdXQgb2YgYnVzaW5lc3MuIhDVARIKFZqZGT8dmpkZvwpCCjQKLzwvcD48cD4gSXQncyBubyBzZWNyZXQgdGhhdCBUcnVtcCBoYXRlcyBBbWF6b24uEIkEEgoVzczMPh3NzMy+Ck4KQAo7SGUgaGFzIHJlcGVhdGVkbHkgdHdlZXRlZCBob3cgbXVjaCBoZSBkaXNsaWtlcyB0aGUgY29tcGFueS4QuQQSChWamZk+HZqZmb4KRgpCCj08L3A+PHA+IEJ1dCBUcnVtcCdzIGNyaXRpY2lzbSBvZiBBbWF6b24gaXMgbm90IGJhc2VkIGluIGZhY3QuEPUEEgAKWQpLCkY8L3A+PHA+SSBoYXZlIHN0YXRlZCBteSBjb25jZXJucyB3aXRoIEFtYXpvbiBsb25nIGJlZm9yZSB0aGUgRWxlY3Rpb24uELMFEgoVmpmZPh2amZm+CvMDCuQDCt4DVW5saWtlIG90aGVycywgdGhleSBwYXkgbGl0dGxlIG9yIG5vIHRheGVzIHRvIHN0YXRlICZhbXA7IGxvY2FsIGdvdmVybm1lbnRzLCB1c2Ugb3VyIFBvc3RhbCBTeXN0ZW0gYXMgdGhlaXIgRGVsaXZlcnkgQm95IChjYXVzaW5nIHRyZW1lbmRvdXMgbG9zcyB0byB0aGUgVS5TLiksIGFuZCBhcmUgcHV0dGluZyBtYW55IHRob3VzYW5kcyBvZiByZXRhaWxlcnMgb3V0IG9mIGJ1c2luZXNzITwvcD48cD4gPC9wPjxwPiBBbWF6b24gY29sbGVjdHMgc2FsZXMgdGF4IGluIGV2ZXJ5IHN0YXRlIHRoYXQgY2hhcmdlcyBvbmUgYW5kIHJlbWl0cyBpdCB0byB0aGUgc3RhdGVzIC0tIGFuZCB0aGF0J3MgdmlydHVhbGx5IGV2ZXJ5IHN0YXRlIDwvcD48cD4gWWVhcnMgYWdvLCB3aGVuIEFtYXpvbiBoYWQgZmV3IHdhcmVob3VzZXMsIGl0IHdhcyBhYmxlIHRvIGdldCBhIGNvbXBldGl0aXZlIGFkdmFudGFnZSBieSBub3QgY2hhcmdpbmcgc2FsZXMgdGF4LhD6BRIKFZqZmT4dmpmZvgqHAQp5CnRXaGVuIHJldGFpbGVycyBzaGlwIGdvb2RzIHRvIHN0YXRlcyB3aGVyZSB0aGV5IGRvbid0IGhhdmUgYSBwaHlzaWNhbCBwcmVzZW5jZSwgdGhleSBkbyBub3QgaGF2ZSB0byBjaGFyZ2Ugc2FsZXMgdGF4LhDZCRIKFc3MzD4dzczMvgqbAQqMAQqGATwvcD48cD4gQW1hem9uIGFsc28gcGF5cyBsb2NhbCBwcm9wZXJ0eSB0YXhlcyBvbiBpdHMgZGlzdHJpYnV0aW9uIGNlbnRlcnMgYXMgd2VsbCBhcyBvbiB0aGUgV2hvbGUgRm9vZHMgc3RvcmVzIGl0IHB1cmNoYXNlZCBsYXN0IHllYXIuEM4KEgoVzczMPR3NzMy9CnsKbQpoPC9wPjxwPiBUaGUgY29tcGFueSBoYXMgbm90IGRpc2Nsb3NlZCBob3cgbXVjaCBpdHMgY3VzdG9tZXJzIHBheSBpbiBzYWxlcyB0YXhlcywgYnV0IGl0IGlzIGNvbnNpZGVyYWJsZS4Q1QsSChUzMzM/HTMzM78KlQEKhgEKgAFJdHMgTm9ydGggQW1lcmljYW4gc2FsZXMgY2FtZSB0byAkMTA2IGJpbGxpb24gbGFzdCB5ZWFyLCBzdWdnZXN0aW5nIHRoYXQgaXQgY29sbGVjdHMgYmlsbGlvbnMgaW4gc2FsZXMgdGF4ZXMgZm9yIHZhcmlvdXMgc3RhdGVzLhC+DBIKFZqZGT8dmpkZvwpfClEKTDwvcD48cD4gQW1hem9uIHBheXMgdGhlIHBvc3Qgb2ZmaWNlIHRvIGRlbGl2ZXIgcGFja2FnZXMgdG8gY3VzdG9tZXJzJyBkb29ycy4Qvw0SChUAAAA/HQAAAL8KggEKdApvPC9wPjxwPiBCZWNhdXNlIEFtYXpvbiBzaGlwcyBzbyBtYW55IHBhY2thZ2VzIHRob3VnaCB0aGUgcG9zdCBvZmZpY2UsIGl0IHBheXMgYSBsb3dlciByYXRlIHRoYW4gbW9zdCBjdXN0b21lcnMuEIwOEgoVmpkZPx2amRm/CoYBCngKc0FtYXpvbiBhbmQgb3RoZXIgYnVsayBzaGlwcGVycyBuZWdvdGlhdGUgY29uZmlkZW50aWFsIGRlYWxzLCBiYXNlZCBvbiB0aGUgbmF0dXJlIG9mIHRoZWlyIHNoaXBtZW50cyBhbmQgdGhlIHZvbHVtZS4Q/A4SChUAAAA/HQAAAD8Kewp3CnJUaG9zZSBkZWFscyBhcmUgcmVxdWlyZWQgYnkgbGF3IHRvIGNvdmVyIHRoZSBwb3N0IG9mZmljZSdzIGNvc3RzLCBhbmQgdGhleSBuZWVkIHRoZSBhcHByb3ZhbCBvZiBwb3N0YWwgcmVndWxhdG9ycy4Q8A8SAApsCmgKYzwvcD48cD4gQW1hem9uIGFsc28gaGFzIGEgc3BlY2lhbCBhZ3JlZW1lbnQgd2l0aCB0aGUgUG9zdGFsIFNlcnZpY2UgdG8gZGVsaXZlciBwYWNrYWdlcyBvbiBTdW5kYXlzLhDjEBIACpkBCooBCoQBTmVpdGhlciBBbWF6b24gbm9yIHRoZSBwb3N0IG9mZmljZSBo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'
 </annotations>
</document>
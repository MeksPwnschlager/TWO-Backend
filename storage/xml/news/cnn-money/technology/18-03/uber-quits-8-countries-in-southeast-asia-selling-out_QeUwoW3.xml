<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Sherisse Pham, ('CNN Money',)
 </author>
 <date>
  2018-03-25T10:22:31+01:00
 </date>
 <article>
<t>
 Uber quits 8 countries in Southeast Asia, selling out to rival Grab
</t>
<d>
 Uber is selling its Southeast Asia business to local rival Grab in a multibillion-dollar deal.
</d>
<p>
 Uber is giving up on the fight for ride-hailing customers in Southeast Asia.
</p>
<p>
 Uber won't receive any cash from the sale. Instead, it will get a 27.5% stake -- worth several billion dollars -- in Singapore-based Grab. The companies declined to disclose the deal's price tag.
</p>
<p>
 Grab says it operates in 191 cities in the region -- about three times as many as Uber -- and also offers motorbike, carpooling and cashless payment services.
</p>
<p>
 The withdrawals highlight the limits of the company's aggressive efforts to dominate ride-hailing in dozens of countries around the world.
</p>
<p>
 "One of the potential dangers of our global strategy is that we take on too many battles across too many fronts and with too many competitors," Uber CEO Dara Khosrowshahi said in an email to Uber staff about the Grab deal.
</p>
<p>
 Exiting those markets is a remarkable shift in Uber's strategy. Less than a year ago, Andrew Macdonald, the company's top executive for Asia and Latin America, was boasting about expansion in the region.
</p>
<p>
 But two major developments have happened since then.
</p>
<p>
 While Uber is exiting Southeast Asia, it is still locked in an expensive battle in India against local rival Ola -- another company in which SoftBank holds a big stake.
</p>
<p>
 But Khosrowshahi indicated that Uber does not have plans to quit India or other major markets anytime soon.
</p>
<p>
 "It is fair to ask whether consolidation is now the strategy of the day, given this is the third deal of its kind, from China to Russia and now Southeast Asia," he said in the email to staffers. "The answer is no."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
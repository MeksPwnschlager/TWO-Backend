<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Danielle Wiener-Bronner, ('CNN Money',)
 </author>
 <date>
  2018-03-20T09:50:25+01:00
 </date>
 <article>
<t>
 What is Cambridge Analytica?
</t>
<d>
 A quick guide to the controversial company everyone's been talking about.
</d>
<p>
 Here's a guide to the company everyone's been talking about.
</p>
<p>
 The firm has been funded in part by Republican donor and hedge fund billionaire Robert Mercer and his family, and has ties to former and current Trump advisers. Former White House chief strategist Steve Bannon is the firm's former vice president, and White House counselor Kellyanne Conway consulted for the company.
</p>
<p>
 It is affiliated with the strategic communications firm SCL Group.
</p>
<p>
 Facebook says the data in question was initially gathered a few years ago properly by psychology professor Aleksandr Kogan.
</p>
<p>
 Kogan passed that data on to SCL Group and Cambridge Analytica, which was working to develop techniques that could be used to influence voters.
</p>
<p>
 Facebook said that the transfer of information from Kogan to Cambridge Analytica breached its rules. Cambridge Analytica maintains that it deleted all the data in 2015 when it learned that Facebook rules had been broken.
</p>
<p>
 The company defended itself in a tweet storm over the weekend.
</p>
<p>
 "Advertising is not coercive; people are smarter than that," the company tweeted on Saturday. It added, "this isn't a spy movie."
</p>
<p>
 This isn't a spy movie. We're a data analytics company doing research &amp; analysis on commercial, public and data sets for clients 7/8
</p>
<p>
</p>
<p>
 It has continued to tweet about the scandal.
</p>
<p>
 A former contractor, Christopher Wylie, disputes that Cambridge Analytica destroyed the user data. He is the self-described whistleblower who has shared his story with the press.
</p>
<p>
 The UK Information Commissioner's Office has announced it is seeking a warrant to conduct its own on-site investigation. Facebook will continue with its own probe.
</p>
<p>
 Meanwhile, fallout for the company has continued.
</p>
<p>
 Cambridge Analytica suspended Nix in the wake of undercover reports showing him discussing potential bribery and entrapment.
</p>
<p>
 Nix's suspension is immediate, "pending a full, independent investigation," the firm said in a statement.
</p>
<p>
 The report on Tuesday featured undercover footage of Nix claiming he met Trump "many times" and that the company was responsible for a wide swath of the Trump campaign's activity.
</p>
<p>
 "We did all the research, all the data, all the analytics, all the targeting," Nix said. "We ran all the digital campaign, the television campaign, and our data informed all the strategy."
</p>
<p>
 Alex Tayler, labeled as the chief data officer for Cambridge Analytica, is recorded separately as saying the firm's analysis was responsible for Trump's Electoral College performance.
</p>
<p>
 "When you think about the fact that Donald Trump lost the popular vote by 3 million votes, but won the Electoral College, that's down to the data and the research," Tayler said. "That's how he won the election."
</p>
<p>
 Nix denied in a statement that the company engages in entrapment or bribery.
</p>
<p>
 Cambridge Analytica's statement on Tuesday said an independent investigation would take place with the company revealing its findings "in due course."
</p>
<p>
 "Mr. Nix's recent comments secretly recorded by Channel 4 and other allegations do not represent the values or operations of the firm and his suspension reflects the seriousness with which we view this violation," the statement said.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
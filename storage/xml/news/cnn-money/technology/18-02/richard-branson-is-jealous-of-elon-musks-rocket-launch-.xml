<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Matt Egan, ('CNN Money',)
 </author>
 <date>
  2018-02-14T04:02:48+01:00
 </date>
 <article>
<t>
 Richard Branson is 'jealous' of Elon Musk's rocket launch
</t>
<d>
 Elon Musk's leap forward in the private space left has left Richard Branson feeling left out.
</d>
<p>
 Elon Musk's leap forward in the space race has left at least one of his billionaire rivals feeling left out.
</p>
<p>
 "I was a little bit jealous," Richard Branson told CNN's Christine Romans on Tuesday.
</p>
<p>
 "They all just did fantastic," Branson said at the Goldman Sachs 10,000 Small Businesses Summit in Washington. He added that Virgin Galactic is "thinking about what we can do to upstage that one."
</p>
<p>
 Musk may have set the bar impossibly high. SpaceX captivated the world last week by executing the first-ever launch of its new rocket, called Falcon Heavy. SpaceX then one-upped itself by guiding two of the Falcon Heavy's first-stage rocket boosters to simultaneously land upright back on Earth.
</p>
<p>
 "That was probably the most exciting thing I've ever seen -- literally ever," Musk said.
</p>
<p>
 Branson told CNN that Virgin Galactic would be "very disappointed" if it didn't launch into space -- with people -- in the next few months.
</p>
<p>
 "I hope that Virgin Galactic will be the first of the three entrepreneurs fighting to put people into space to get there," he said.
</p>
<p>
 He said 800 Virgin Galactic engineers are working hard to make sure their technology is safe. "We will wait for their word before putting anybody up," Branson said.
</p>
<p>
 Branson praised President Obama for recalibrating NASA to lean more heavily on private enterprise rather than doing it all itself.
</p>
<p>
 "Elon, Jeff and ourselves can do things for a fraction of the price that governments can do it -- and I think we can make it a little more exciting as well," Branson said.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
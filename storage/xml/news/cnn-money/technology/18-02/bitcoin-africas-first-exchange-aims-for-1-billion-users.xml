<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Eleni Giokos and Mary McDougall, ('CNN Money',)
 </author>
 <date>
  2018-02-14T06:03:28+01:00
 </date>
 <article>
<t>
 Bitcoin: Africa's first exchange aims for 1 billion users
</t>
<d>
 Luno, founded in South Africa in 2013, has plans to become one of the leading cryptocurrency traders in the world.
</d>
<p>
 Bitcoin may be having a rough ride in 2018 but one cryptocurrency company is still optimistic about its long term prospects.
</p>
<p>
 Luno, founded in South Africa in 2013, has plans to become one of the leading cryptocurrency traders in the world.
</p>
<p>
 CEO and founder Marcus Swanepoel has a goal that would leave many bigger companies in the shade: 1 billion customers by 2025.
</p>
<p>
 "There are very few industries in the world for which you could say that is a reachable goal, but because bitcoin is so open and global, it is really an achievable goal. We're excited to pursue it," he said.
</p>
<p>
 The company is planning to grow its team of 70 employees to 300 over the next six months.
</p>
<p>
 Swanepoel, a former investment banker, say Luno was the first company in Africa to offer cryptocurrency trading.
</p>
<p>
 It has enjoyed runaway growth since then, and now has 1.5 million customers in 40 countries, mostly emerging markets.
</p>
<p>
 The company, backed by some big investors including Naspers, was created by a small group of people with backgrounds in tech and finance who, like Swanepoel wanted to give up their corporate jobs.
</p>
<p>
 The atmosphere in Luno's Cape Town offices is casual -- some of the staff walk around barefoot. But the relaxed approach ends when it comes to protecting Luno against hackers who have made off with bitcoin worth millions from other exchanges.
</p>
<p>
 "We take security as seriously as big banks do but when we're at the office we're about working together and creating a collaborative environment," Swanepoel said.
</p>
<p>
</p>
<p>
 The firm has developed substantially over the last five years. It began building systems for banks before switching its focus to consumers.
</p>
<p>
 "We realized the banks were going to take too long to embrace the technology, and they were getting confused about what the technology can do," the CEO said.
</p>
<p>
 His team has developed a mobile wallet, exchange and merchant integration services for bitcoin and one of its biggest rivals, ethereum.
</p>
<p>
 But the company attributes much of its early success to its South African roots and experience in countries like Nigeria where most internet users are mobile.
</p>
<p>
 "Unlike other companies, because we set up in Africa originally, we built truly mobile-first products," Swanepoel said. He believes that has given Luno an edge, particularly over European competitors.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
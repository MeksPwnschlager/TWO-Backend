<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Kaya Yurieff, ('CNN Money',)
 </author>
 <date>
  2018-02-02T08:31:02+01:00
 </date>
 <article>
<t>
 The genius strategy behind Amazon's HQ2 search
</t>
<d>
 Amazon's HQ2 search has provided the company with a wealth of data about 238 cities and regions across North America.
</d>
<p>
 The company has winnowed the field to 20. Now, while all eyes are on which city will win, there's another dynamic at play.
</p>
<p>
 That data could help Amazon, which is rapidly and continually evolving beyond its roots as an online reseller of books, when it's deciding where to locate future sites.
</p>
<p>
 The benefits flowed both ways: Amazon got a trove of information about potential future locations of warehouses, fulfillment centers and research and development offices. And dozens of cities got on the radar of one of America's most innovative and expansive companies.
</p>
<p>
 "Even if cities don't win [HQ2], it's a good thing to be in front of Amazon management to convince them about the strengths of their city. This is not the last major location decision that Amazon will be making," said Ravi Madhavan, a professor at University of Pittsburgh's business school.
</p>
<p>
 A bid by Kansas City, Missouri, didn't make the final 20 cut. But its proposal highlighting a local alliance that helps veterans get hired after leaving the military piqued Amazon's interest, according to a person familiar with the HQ2 bids. Amazon, which has pledged to hire 25,000 veterans and military spouses by 2021, might consider the city for an investment down the line, the person said.
</p>
<p>
 Kansas City's STEM education program for preschool to 12th graders also indicates it could have a pipeline of strong technical talent in the coming years.
</p>
<p>
 New Orleans' application also caught Amazon's attention. The city has a program that connects businesses and universities to make sure what's being taught in the classroom reflects business needs, the source said.
</p>
<p>
 Amazon itself has said the metro areas that were not selected could be contenders for another facility.
</p>
<p>
 "Through this process we learned about many new communities across North America that we will consider as locations for future infrastructure investment and job creation," Holly Sullivan of Amazon Public Policy previously said in a statement.
</p>
<p>
 The Amazon team behind the second headquarters search includes employees from a variety of departments, including HR, data analytics and real estate.
</p>
<p>
 The HQ2 search process highlighted some metro areas that previously weren't on Amazon's radar.
</p>
<p>
 "For some communities, it may position them to be a candidate for certain projects when maybe they wouldn't have been otherwise," said Mark Sweeney, senior principal with McCallum Sweeney Consulting, which provides site selection services and economic development consulting to companies.
</p>
<p>
 However, Sweeney cautioned that a warehouse is not the same as a massive second headquarters employing as many as 50,000 people.
</p>
<p>
 "The [HQ2] package and offering is not going to be immediately transferable to other projects," Sweeney said.
</p>
<p>
 For example, cities may not be as willing to offer the same incentives for a smaller facility. Additionally, proposed real estate sites may no longer be available in a few years.
</p>
<p>
 But the HQ2 proposals could still give Amazon an edge in future negotiations with that community, since the company has some knowledge of existing incentive programs, he said.
</p>
<p>
 The contest-like search process also has another benefit for Amazon and many of the cities: a lot of good publicity.
</p>
<p>
 "This was a strategic move by Amazon," said Michael Lenox, a professor and senior associate dean of the University of Virginia's Darden School of Business. "By knowing how attractive the second headquarters would be for communities and putting it out for competitive bids, they've encouraged so much interest and effort on their behalf from all of these municipalities."
</p>
<p>
 Amazon has added to the buzz by being coy about next steps in the process. It's unclear if Amazon will release an even smaller list before announcing the winning city.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
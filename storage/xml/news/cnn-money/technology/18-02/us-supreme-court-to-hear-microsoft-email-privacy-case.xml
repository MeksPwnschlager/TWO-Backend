<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Selena Larson, ('CNN Money',)
 </author>
 <date>
  2018-02-25T10:43:56+01:00
 </date>
 <article>
<t>
 U.S. Supreme Court to hear Microsoft email privacy case
</t>
<d>
 The court will decide whether a digital communications provider has to comply with a U.S. search warrant for user data if the information is stored outside of the country.
</d>
<p>
 The Supreme Court is set to hear arguments on Tuesday in a digital privacy case that could have broad global consequences.
</p>
<p>
 "The stakes are really high," said Gregory Nojeim, senior counsel and director of the Freedom, Security, and Technology Project at the Center for Democracy &amp; Technology. "It's going to set the tone for cross-border data demands on a global scale."
</p>
<p>
 This all began back in 2013, when prosecutors served Microsoft a warrant in Redmond, Washington, for emails and information associated with an account involved in a criminal drug-trafficking investigation. Microsoft turned over data it had stored on its servers in the United States, but some information was stored on a server in Ireland. Microsoft refused to turn over the foreign data.
</p>
<p>
 Microsoft argues U.S. law enforcement should not be able to access digital communications stored on servers outside the country. Brad Smith, Microsoft's president and top lawyer, has said that allowing U.S. officials to seize emails stored overseas ignores borders, treaties, and international law.
</p>
<p>
 The move could also put Americans' emails at risk of seizure by foreign governments, he said.
</p>
<p>
 Some experts say that the issue should be decided outside of the courts.
</p>
<p>
 "I don't think the Supreme Court is the best place to be looking at these issues," said Jennifer Daskal, an associate professor of law at American University. "It's an area where Congress ought to step in and update the issue."
</p>
<p>
 Other experts worry this type of law could infringe on state sovereignty for countries that do not have a bilateral agreement with the U.S.
</p>
<p>
 Privacy advocates argue that the Justice Department is overreaching in asking Microsoft to turn over internationally stored data.
</p>
<p>
 "If U.S. warrants reach data stored outside the U.S., you can bet that a lot of other countries will insist that their legal process reaches data stored inside the U.S., including data of Americans," Nojeim said.
</p>
<p>
 His organization, along with other privacy and human rights groups and scholars, have filed friend of the court briefs to the Supreme Court in support of Microsoft.
</p>
<p>
 The EU has approved massive data privacy protections called the General Data Protection Regulation that go into effect later this year, and if Microsoft complies with the search warrant for Ireland data, it could violate those laws.
</p>
<p>
 "So many of the laws that govern digital evidence are outdated," Nojeim said. "It's good for the court to be looking at it, and it's good for Congress to act as well."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Clare Foran, ('Edition CNN',)
 </author>
 <date>
  2018-05-01T17:28:51+00:00
 </date>
 <article>
<t>
 Don Blankenship, GOP Senate candidate, defends calling Mitch McConnell 'cocaine Mitch'
</t>
<d>
 Don Blankenship, a Republican candidate for US Senate in West Virginia, is defending an ad his campaign released Monday in which he referred to Senate Majority Leader Mitch McConnell as "Cocaine Mitch."
</d>
<p>
 A spokesman for McConnell referred a request for comment on the ad to the National Republican Senatorial Committee and did not respond to a request for comment on the press release. The NRSC did not immediately respond to requests for comment. The Blankenship campaign also did not immediately respond to a request comment.
</p>
<p>
 In the ad released Monday, Blankenship said, "One of my goals as US senator will be to ditch Cocaine Mitch."
</p>
<p>
 Blankenship, a former coal executive who served a year in prison stemming from a 2010 mine explosion, is running against Republican Representative Evan Jenkins and Attorney General Patrick Morrisey in the West Virginia Senate Republican primary, which will take place next week.
</p>
<p>
 "His father-in-law who founded and owns a large Chinese shipping company has given Mitch and his wife millions of dollars over the years. The company was implicated recently in smuggling cocaine from Colombia to Europe, hidden aboard a company ship carrying foreign coal was $7 million dollars of cocaine and that is why we've deemed him 'Cocaine Mitch,'" the press release reads.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
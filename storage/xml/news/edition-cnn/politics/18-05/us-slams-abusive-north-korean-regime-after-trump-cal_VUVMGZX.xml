<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Zachary Cohen, ('Edition CNN',)
 </author>
 <date>
  2018-05-02T23:05:43+00:00
 </date>
 <article>
<t>
 US slams 'abusive' North Korean regime after Trump calls Kim 'honorable'
</t>
<d>
 The US State Department issued a scathing rebuke of North Korea's human rights record on Wednesday, calling the regime "one of the most repressive and abusive governments in the world" just days after President Donald Trump praised dictator Kim Jong Un's "honorable" intentions ahead of a possible face-to-face sit down between the two leaders.
</d>
<p>
 "In addition to the roughly 100,000 individuals, including children and family members of the accused, who suffer in political prison camps, North Koreans face an almost complete denial of fundamental freedoms by their government. Those trying to flee this oppressive environment, if caught, are often tortured or killed," she said.
</p>
<p>
 The administration has recently tried to strike a tone of cautious optimism as Trump and Kim gear up for a highly anticipated and potentially historic summit in the coming weeks.
</p>
<p>
 Last week, Trump characterized Kim's intentions leading up to the meeting as "very open and I think very honorable based on what we are seeing" and he has talked up his diplomatic efforts with North Korea on several occasions in recent months, suggesting that he may be poised to accomplish what other administrations have not.
</p>
<p>
 "We've never been in a position like this with that regime, whether it's father, grandfather or son," Trump said last month.
</p>
<p>
 The North Korean government's long history of abusive practices has been the elephant in the room as Trump focuses on convincing Pyongyang to take concrete steps toward dismantling its nuclear and missile programs.
</p>
<p>
 "We remain gravely concerned and deeply troubled by these abuses. In tandem with the maximum pressure campaign, we will continue to press for accountability for those responsible," the statement said.
</p>
<p>
 The State Department stopped short of detailing exactly how the US plans to "press for accountability" or indicating whether Trump plans to address these concerns with Kim directly when the two meet but did pledge to help open up the isolated country to the rest of the world.
</p>
<p>
 "We are also going to continue our efforts to increase the flow of independent information into, out of, and within this isolated state to present everyday North Koreans with a more realistic picture of the outside world," Nauert said.
</p>
<p>
 Last year, Thae Yong-ho, a former high-ranking North Korean official who defected to South Korea, told US lawmakers that Kim Jong Un, his father Kim Jong Il and grandfather Kim Il Sung have carefully cultivated the perception that they are divine rulers and consolidated power by sheltering the North Korean population from the outside world and manipulating the country's welfare system.
</p>
<p>
 "Until now, the North Korean system has prevailed through an effective and credible reign of terror and by almost perfectly preventing the free-flow of outside information," he said.
</p>
<p>
 While Trump has recently dialed-back the personal insults against the leader he once called "Little Rocket Man," his State Department did not pull any punches in a new statement condemning decades of "egregious human rights violations" suffered by the North Korean people at the hands of their own government.
</p>
<p>
 "For more than 60 years the people of North Korea have faced egregious human rights violations in virtually every aspect of life," the statement from State Department spokesperson Heather Nauert said.
</p>
 </article>
 <annotations>
  b'gANjZ29vZ2xlLmNsb3VkLmxhbmd1YWdlX3YxLnR5cGVzCkFubm90YXRlVGV4dFJlc3BvbnNlCnEAKVJxAX1xAlgKAAAAc2VyaWFsaXplZHEDQnN6AAAKvAMKrQMKqgM8dD5VUyBzbGFtcyAnYWJ1c2l2ZScgTm9ydGggS29yZWFuIHJlZ2ltZSBhZnRlciBUcnVtcCBjYWxscyBLaW0gJ2hvbm9yYWJsZSc8L3Q+PGQ+VGhlIFVTIFN0YXRlIERlcGFydG1lbnQgaXNzdWVkIGEgc2NhdGhpbmcgcmVidWtlIG9mIE5vcnRoIEtvcmVhJ3MgaHVtYW4gcmlnaHRzIHJlY29yZCBvbiBXZWRuZXNkYXksIGNhbGxpbmcgdGhlIHJlZ2ltZSAib25lIG9mIHRoZSBtb3N0IHJlcHJlc3NpdmUgYW5kIGFidXNpdmUgZ292ZXJubWVudHMgaW4gdGhlIHdvcmxkIiBqdXN0IGRheXMgYWZ0ZXIgUHJlc2lkZW50IERvbmFsZCBUcnVtcCBwcmFpc2VkIGRpY3RhdG9yIEtpbSBKb25nIFVuJ3MgImhvbm9yYWJsZSIgaW50ZW50aW9ucyBhaGVhZCBvZiBhIHBvc3NpYmxlIGZhY2UtdG8tZmFjZSBzaXQgZG93biBiZXR3ZWVuIHRoZSB0d28gbGVhZGVycy4SChWamRk/HZqZGb8KggIK8wEK7QE8L2Q+PHA+IkluIGFkZGl0aW9uIHRvIHRoZSByb3VnaGx5IDEwMCwwMDAgaW5kaXZpZHVhbHMsIGluY2x1ZGluZyBjaGlsZHJlbiBhbmQgZmFtaWx5IG1lbWJlcnMgb2YgdGhlIGFjY3VzZWQsIHdobyBzdWZmZXIgaW4gcG9saXRpY2FsIHByaXNvbiBjYW1wcywgTm9ydGggS29yZWFucyBmYWNlIGFuIGFsbW9zdCBjb21wbGV0ZSBkZW5pYWwgb2YgZnVuZGFtZW50YWwgZnJlZWRvbXMgYnkgdGhlaXIgZ292ZXJubWVudC4QqwMSChUzMzM/HTMzM78KeApqCmVUaG9zZSB0cnlpbmcgdG8gZmxlZSB0aGlzIG9wcHJlc3NpdmUgZW52aXJvbm1lbnQsIGlmIGNhdWdodCwgYXJlIG9mdGVuIHRvcnR1cmVkIG9yIGtpbGxlZCwiIHNoZSBzYWlkLhCZBRIKFZqZGT8dmpkZvwqfBQqQBQqKBTwvcD48cD5UaGUgYWRtaW5pc3RyYXRpb24gaGFzIHJlY2VudGx5IHRyaWVkIHRvIHN0cmlrZSBhIHRvbmUgb2YgY2F1dGlvdXMgb3B0aW1pc20gYXMgVHJ1bXAgYW5kIEtpbSBnZWFyIHVwIGZvciBhIGhpZ2hseSBhbnRpY2lwYXRlZCBhbmQgcG90ZW50aWFsbHkgaGlzdG9yaWMgc3VtbWl0IGluIHRoZSBjb21pbmcgd2Vla3MuPC9wPjxwPkxhc3Qgd2VlaywgVHJ1bXAgY2hhcmFjdGVyaXplZCBLaW0ncyBpbnRlbnRpb25zIGxlYWRpbmcgdXAgdG8gdGhlIG1lZXRpbmcgYXMgInZlcnkgb3BlbiBhbmQgSSB0aGluayB2ZXJ5IGhvbm9yYWJsZSBiYXNlZCBvbiB3aGF0IHdlIGFyZSBzZWVpbmciIGFuZCBoZSBoYXMgdGFsa2VkIHVwIGhpcyBkaXBsb21hdGljIGVmZm9ydHMgd2l0aCBOb3J0aCBLb3JlYSBvbiBzZXZlcmFsIG9jY2FzaW9ucyBpbiByZWNlbnQgbW9udGhzLCBzdWdnZXN0aW5nIHRoYXQgaGUgbWF5IGJlIHBvaXNlZCB0byBhY2NvbXBsaXNoIHdoYXQgb3RoZXIgYWRtaW5pc3RyYXRpb25zIGhhdmUgbm90LjwvcD48cD4iV2UndmUgbmV2ZXIgYmVlbiBpbiBhIHBvc2l0aW9uIGxpa2UgdGhpcyB3aXRoIHRoYXQgcmVnaW1lLCB3aGV0aGVyIGl0J3MgZmF0aGVyLCBncmFuZGZhdGhlciBvciBzb24sIiBUcnVtcCBzYWlkIGxhc3QgbW9udGguEP8FEgoVMzMzPx0zMzO/CvIBCuMBCt0BPC9wPjxwPlRoZSBOb3J0aCBLb3JlYW4gZ292ZXJubWVudCdzIGxvbmcgaGlzdG9yeSBvZiBhYnVzaXZlIHByYWN0aWNlcyBoYXMgYmVlbiB0aGUgZWxlcGhhbnQgaW4gdGhlIHJvb20gYXMgVHJ1bXAgZm9jdXNlcyBvbiBjb252aW5jaW5nIFB5b25neWFuZyB0byB0YWtlIGNvbmNyZXRlIHN0ZXBzIHRvd2FyZCBkaXNtYW50bGluZyBpdHMgbnVjbGVhciBhbmQgbWlzc2lsZSBwcm9ncmFtcy4QigsSChXNzEw/Hc3MTL8KWwpNCkg8L3A+PHA+IldlIHJlbWFpbiBncmF2ZWx5IGNvbmNlcm5lZCBhbmQgZGVlcGx5IHRyb3VibGVkIGJ5IHRoZXNlIGFidXNlcy4Q6AwSChXNzEw/Hc3MTL8KmwEKjAEKhgFJbiB0YW5kZW0gd2l0aCB0aGUgbWF4aW11bSBwcmVzc3VyZSBjYW1wYWlnbiwgd2Ugd2lsbCBjb250aW51ZSB0byBwcmVzcyBmb3IgYWNjb3VudGFiaWxpdHkgZm9yIHRob3NlIHJlc3BvbnNpYmxlLCIgdGhlIHN0YXRlbWVudCBzYWlkLhCxDRIKFc3MzD0dzczMPQqwAgqhAgqbAjwvcD48cD5UaGUgU3RhdGUgRGVwYXJ0bWVudCBzdG9wcGVkIHNob3J0IG9mIGRldGFpbGluZyBleGFjdGx5IGhvdyB0aGUgVVMgcGxhbnMgdG8gInByZXNzIGZvciBhY2NvdW50YWJpbGl0eSIgb3IgaW5kaWNhdGluZyB3aGV0aGVyIFRydW1wIHBsYW5zIHRvIGFkZHJlc3MgdGhlc2UgY29uY2VybnMgd2l0aCBLaW0gZGlyZWN0bHkgd2hlbiB0aGUgdHdvIG1lZXQgYnV0IGRpZCBwbGVkZ2UgdG8gaGVscCBvcGVuIHVwIHRoZSBpc29sYXRlZCBjb3VudHJ5IHRvIHRoZSByZXN0IG9mIHRoZSB3b3JsZC4QuA4SChWamZk+HZqZmb4KhwIK+AEK8gE8L3A+PHA+IldlIGFyZSBhbHNvIGdvaW5nIHRvIGNvbnRpbnVlIG91ciBlZmZvcnRzIHRvIGluY3JlYXNlIHRoZSBmbG93IG9mIGluZGVwZW5kZW50IGluZm9ybWF0aW9uIGludG8sIG91dCBvZiwgYW5kIHdpdGhpbiB0aGlzIGlzb2xhdGVkIHN0YXRlIHRvIHByZXNlbnQgZXZlcnlkYXkgTm9ydGggS29yZWFucyB3aXRoIGEgbW9yZSByZWFsaXN0aWMgcGljdHVyZSBvZiB0aGUgb3V0c2lkZSB3b3JsZCwiIE5hdWVydCBzYWlkLhDUEBIKFc3MzD0dzczMvQroCArZCArTCDwvcD48cD5MYXN0IHllYXIsIFRoYWUgWW9uZy1obywgYSBmb3JtZXIgaGlnaC1yYW5raW5nIE5vcnRoIEtvcmVhbiBvZmZpY2lhbCB3aG8gZGVmZWN0ZWQgdG8gU291dGggS29yZWEsIHRvbGQgVVMgbGF3bWFrZXJzIHRoYXQgS2ltIEpvbmcgVW4sIGhpcyBmYXRoZXIgS2ltIEpvbmcgSWwgYW5kIGdyYW5kZmF0aGVyIEtpbSBJbCBTdW5nIGhhdmUgY2FyZWZ1bGx5IGN1bHRpdmF0ZWQgdGhlIHBlcmNlcHRpb24gdGhhdCB0aGV5IGFyZSBkaXZpbmUgcnVsZXJzIGFuZCBjb25zb2xpZGF0ZWQgcG93ZXIgYnkgc2hlbHRlcmluZyB0aGUgTm9ydGggS29yZWFuIHBvcHVsYXRpb24gZnJvbSB0aGUgb3V0c2lkZSB3b3JsZCBhbmQgbWFuaXB1bGF0aW5nIHRoZSBjb3VudHJ5J3Mgd2VsZmFyZSBzeXN0ZW0uPC9wPjxwPiJVbnRpbCBub3csIHRoZSBOb3J0aCBLb3JlYW4gc3lzdGVtIGhhcyBwcmV2YWlsZWQgdGhyb3VnaCBhbiBlZmZlY3RpdmUgYW5kIGNyZWRpYmxlIHJlaWduIG9mIHRlcnJvciBhbmQgYnkgYWxtb3N0IHBlcmZlY3RseSBwcmV2ZW50aW5nIHRoZSBmcmVlLWZsb3cgb2Ygb3V0c2lkZSBpbmZvcm1hdGlvbiwiIGhlIHNhaWQuPC9wPjxwPldoaWxlIFRydW1wIGhhcyByZWNlbnRseSBkaWFsZWQtYmFjayB0aGUgcGVyc29uYWwgaW5zdWx0cyBhZ2FpbnN0IHRoZSBsZWFkZXIgaGUgb25jZSBjYWxsZWQgIkxpdHRsZSBSb2NrZXQgTWFuLCIgaGlzIFN0YXRlIERlcGFydG1lbnQgZGlkIG5vdCBwdWxsIGFueSBwdW5jaGVzIGluIGEgbmV3IHN0YXRlbWVudCBjb25kZW1uaW5nIGRlY2FkZXMgb2YgImVncmVnaW91cyBodW1hbiByaWdodHMgdmlvbGF0aW9ucyIgc3VmZmVyZWQgYnkgdGhlIE5vcnRoIEtvcmVhbiBwZW9wbGUgYXQgdGhlIGhhbmRzIG9mIHRoZWlyIG93biBnb3Zlcm5tZW50LjwvcD48cD4iRm9yIG1vcmUgdGhhbiA2MCB5ZWFycyB0aGUgcGVvcGxlIG9mIE5vcnRoIEtvcmVhIGhhdmUgZmFjZWQgZWdyZWdpb3VzIGh1bWFuIHJpZ2h0cyB2aW9sYXRpb25zIGluIHZpcnR1YWxseSBldmVyeSBhc3BlY3Qgb2YgbGlmZSwiIHRoZSBzdGF0ZW1lbnQgZnJvbSBTdGF0ZSBEZXBhcnRtZW50IHNwb2tlc3BlcnNvbiBIZWF0aGVyIE5hdWVydCBzYWlkLhDHEhIKFc3MTD8dzcxMvwoXCgkKBDwvcD4QnBsSChXNzMw9Hc3MzL0SEgoDCgE8EgIIChoECAQQICIBPBIWCgUKAXQQARIECAY4ARoECAMQGiIBdBIUCgUKAT4QAhICCAoaBAgDECAiAT4SGgoGCgJVUxADEgYIBjgBSAEaBAgEEBwiAlVTEiMKCQoFc2xhbXMQBhIKCAswAzgCQANYBBoECAQQNiIEc2xhbRIUCgUKAScQDBICCAoaBAgKECAiAScSIAoLCgdhYnVzaXZlEA0SAggBGgQIChAFIgdhYnVzaXZlEhQKBQoBJxAUEgIIChoECAoQICIBJxIeCgkKBU5vcnRoEBYSBAgBOAEaBAgJEAUiBU5vcnRoEiAKCgoGS29yZWFuEBwSBAgBOAEaBAgKEAUiBktvcmVhbhIgCgoKBnJlZ2ltZRAjEgQIBjgBGgQIBBASIgZyZWdpbWUSHAoJCgVhZnRlchAqEgIIAhoECA0QFiIFYWZ0ZXISIAoJCgVUcnVtcBAwEgYIBjgBSAEaBAgNEBwiBVRydW1wEiMKCQoFY2FsbHMQNhIKCAswAzgCQANYBBoECAQQAyIEY2FsbBIcCgcKA0tpbRA8EgYIBjgBSAEaBAgQECUiA0tpbRIUCgUKAScQQBICCAkaBAgOEC4iAScSJAoNCglob25vcmFibGUQQRICCAEaBAgNEBIiCWhvbm9yYWJsZRIUCgUKAScQShICCAoaBAgQECAiAScSFAoFCgE8EEsSAggKGgQIFBAgIgE8EhQKBQoBLxBMEgIIDBoECBQQICIBLxIWCgUKAXQQTRIECAY4ARoECBcQDyIBdBIUCgUKAT4QThICCAoaBAgUECAiAT4SFAoFCgE8EE8SAggKGgQIFxAgIgE8EhQKBQoBZBBQEgIIDBoECBAQDyIBZBIUCgUKAT4QURICCAoaBAgXECAiAT4SGAoHCgNUaGUQUhICCAUaBAgcEBAiA1RoZRIaCgYKAlVTEFYSBggGOAFIARoECBwQGiICVVMSIAoJCgVTdGF0ZRBZEgYIBjgBSAEaBAgcEBoiBVN0YXRlEioKDgoKRGVwYXJ0bWVudBBfEgYIBjgBSAEaBAgdEBwiCkRlcGFydG1lbnQSIQoKCgZpc3N1ZWQQahIGCAswA1gDGgQIEBAPIgVpc3N1ZRIUCgUKAWEQcRICCAUaBAggEBAiAWESIgoMCghzY2F0aGluZxBzEgIIARoECCAQBSIIc2NhdGhpbmcSIAoKCgZyZWJ1a2UQfBIECAY4ARoECB0QEiIGcmVidWtlEhcKBwoCb2YQgwESAggCGgQIIBArIgJvZhIhCgoKBU5vcnRoEIYBEgYIBjgBSAEaBAgjEBoiBU5vcnRoEiEKCgoFS29yZWEQjAESBggGOAFIARoECCcQJSIFS29yZWESFwoHCgIncxCRARICCAkaBAgjEC4iAidzEh0KCgoFaHVtYW4QlAESAggBGgQIJhAFIgVodW1hbhIgCgsKBnJpZ2h0cxCaARIECAY4AhoECCcQGiIFcmlnaHQSIQoLCgZyZWNvcmQQoQESBAgGOAEaBAghECQiBnJlY29yZBIXCgcKAm9uEKgBEgIIAhoECB0QKyICb24SKQoOCglXZWRuZXNkYXkQqwESBggGOAFIARoECCgQJCIJV2VkbmVzZGF5EhUKBgoBLBC0ARICCAoaBAgdECAiASwSHgoMCgdjYWxsaW5nELYBEgIICxoECB0QOyIEY2FsbBIZCggKA3RoZRC+ARICCAUaBAgtEBAiA3RoZRIhCgsKBnJlZ2ltZRDCARIECAY4ARoECCsQEiIGcmVnaW1lEhUKBgoBIhDJARICCAoaBAgvECAiASISGQoICgNvbmUQygESAggHGgQIKxAPIgNvbmUSFwoHCgJvZhDOARICCAIaBAgvECsiAm9mEhkKCAoDdGhlENEBEgIIBRoECDYQECIDdGhlEhsKCQoEbW9zdBDVARICCAMaBAgzEAQiBG1vc3QSJwoPCgpyZXByZXNzaXZlENoBEgIIARoECDYQBSIKcmVwcmVzc2l2ZRIZCggKA2FuZBDlARICCAQaBAgzEAoiA2FuZBIhCgwKB2FidXNpdmUQ6QESAggBGgQIMxAMIgdhYnVzaXZlEioKEAoLZ292ZXJubWVudHMQ8QESBAgGOAIaBAgwECQiCmdvdmVybm1lbnQSFwoHCgJpbhD9ARICCAIaBAg2ECsiAmluEhkKCAoDdGhlEIACEgIIBRoECDkQECIDdGhlEh8KCgoFd29ybGQQhAISBAgGOAEaBAg3ECQiBXdvcmxkEhUKBgoBIhCJAhICCAoaBAgvECAiASISGwoJCgRqdXN0EIsCEgIIAxoECDwQBCIEanVzdBIcCgkKBGRheXMQkAISBAgGOAIaBAhBEDkiA2RheRIdCgoKBWFmdGVyEJUCEgIIAhoECEEQFiIFYWZ0ZXISKQoOCglQcmVzaWRlbnQQmwISBggGOAFIARoECEAQPyIJUHJlc2lkZW50EiMKCwoGRG9uYWxkEKUCEgYIBjgBSAEaBAhAEBoiBkRvbmFsZBIhCgoKBVRydW1wEKwCEgYIBjgBSAEaBAhBEBwiBVRydW1wEiQKDAoHcHJhaXNlZBCyAhIGCAswA1gDGgQIKxADIgZwcmFpc2USJQoNCghkaWN0YXRvchC6AhIECAY4ARoECEoQGiIIZGljdGF0b3ISHQoICgNLaW0QwwISBggGOAFIARoECEUQGiIDS2ltEh8KCQoESm9uZxDHAhIGCAY4AUgBGgQIRRAaIgRKb25nEhkKBwoCVW4QzAISBAgGSAEaBAhKECUiAlVuEhcKBwoCJ3MQzgISAggJGgQIRRAuIgIncxIVCgYKASIQ0QISAggKGgQIShAgIgEiEiUKDgoJaG9ub3JhYmxlENICEgIIARoECEoQBSIJaG9ub3JhYmxlEhUKBgoBIhDbAhICCAoaBAhKECAiASISKAoPCgppbnRlbnRpb25zEN0CEgQIBjgCGgQIQRASIglpbnRlbnRpb24SHQoKCgVhaGVhZBDoAhICCAMaBAhBEAQiBWFoZWFkEhcKBwoCb2YQ7gISAggCGgQISxArIgJvZhIVCgYKAWEQ8QISAggFGgQIVBAQIgFhEiMKDQoIcG9zc2libGUQ8wISAggBGgQIVBAPIghwb3NzaWJsZRIdCgkKBGZhY2UQ/AISBAgGOAEaBAhUEBwiBGZhY2USFQoGCgEtEIADEgIIChoECE8QICIBLRIXCgcKAnRvEIEDEgIIAhoECE8QKyICdG8SFQoGCgEtEIMDEgIIChoECFEQICIBLRIdCgkKBGZhY2UQhAMSBAgGOAEaBAhRECQiBGZhY2USGQoICgNzaXQQiQMSAggLGgQITBAkIgNzaXQSGwoJCgRkb3duEI0DEgIICRoECFQQLSIEZG93bhIhCgwKB2JldHdlZW4QkgMSAggCGgQIVBArIgdiZXR3ZWVuEhkKCAoDdGhlEJoDEgIIBRoECFkQECIDdGhlEhkKCAoDdHdvEJ4DEgIIBxoECFkQHiIDdHdvEiIKDAoHbGVhZGVycxCiAxIECAY4AhoECFYQJCIGbGVhZGVyEhUKBgoBLhCpAxICCAoaBAgEECAiAS4SFQoGCgE8EKsDEgIIChoECF0QICIBPBIVCgYKAS8QrAMSAggMGgQIXRAgIgEvEhcKBgoBZBCtAxIECAY4ARoECF0QNiIBZBIVCgYKAT4QrgMSAggKGgQIXRAgIgE+EhUKBgoBPBCvAxICCAoaBAhgECAiATwSFwoGCgFwELADEgQIBjgBGgQIXRAPIgFwEhUKBgoBPhCxAxICCAoaBAhgECAiAT4SFQoGCgEiELIDEgIIChoECF0QICIBIhIXCgcKAkluELMDEgIIAhoECH0QKyICSW4SJQoNCghhZGRpdGlvbhC2AxIECAY4ARoECGMQJCIIYWRkaXRpb24SFwoHCgJ0bxC/AxICCAIaBAhkECsiAnRvEhkKCAoDdGhlEMIDEgIIBRoECGkQECIDdGhlEiEKDAoHcm91Z2hseRDGAxICCAMaBAhoEAQiB3JvdWdobHkSIQoMCgcxMDAsMDAwEM4DEgIIBxoECGkQHiIHMTAwLDAwMBIqChAKC2luZGl2aWR1YWxzENYDEgQIBjgCGgQIZRAkIgppbmRpdmlkdWFsEhUKBgoBLBDhAxICCAoaBAhpECAiASwSIwoOCglpbmNsdWRpbmcQ4wMSAggLGgQIaRArIgdpbmNsdWRlEiIKDQoIY2hpbGRyZW4Q7QMSBAgGOAIaBAhrECQiBWNoaWxkEhkKCAoDYW5kEPYDEgIIBBoECGwQCiIDYW5kEiEKCwoGZmFtaWx5EPoDEgQIBjgBGgQIbxAaIgZmYW1pbHkSIgoMCgdtZW1iZXJzEIEEEgQIBjgCGgQIbBAMIgZtZW1iZXISFwoHCgJvZhCJBBICCAIaBAhvECsiAm9mEhkKCAoDdGhlEIwEEgIIBRoECHAQJCIDdGhlEiIKDAoHYWNjdXNlZBCQBBIECAtYAxoECHEQBSIGYWNjdXNlEhUKBgoBLBCXBBICCAoaBAhpECAiASwSGwoICgN3aG8QmQQSBAgIQAMaBAh1EBwiA3dobxIjCgsKBnN1ZmZlchCdBBIGCAswA1gEGgQIaRAwIgZzdWZmZXISFwoHCgJpbhCkBBICCAIaBAh1ECsiAmluEiUKDgoJcG9saXRpY2FsEKcEEgIIARoECHkQBSIJcG9saXRpY2FsEiEKCwoGcHJpc29uELEEEgQIBjgBGgQIeRAaIgZwcmlzb24SHgoKCgVjYW1wcxC4BBIECAY4ARoECHYQJCIEY2FtcBIVCgYKASwQvQQSAggKGgQIfRAgIgEsEiEKCgoFTm9ydGgQvwQSBggGOAFIARoECHwQGiIFTm9ydGgSJQoMCgdLb3JlYW5zEMUEEgYIBjgBSAEaBAh9EBwiB0tvcmVhbnMSIQoJCgRmYWNlEM0EEggICzADOAFYBBoECF0QDyIEZmFjZRIYCgcKAmFuENIEEgIIBRoFCIEBEBAiAmFuEiAKCwoGYWxtb3N0ENUEEgIIAxoFCIABEAQiBmFsbW9zdBIkCg0KCGNvbXBsZXRlENwEEgIIARoFCIEBEAUiCGNvbXBsZXRlEiEKCwoGZGVuaWFsEOUEEgQIBjgBGgQIfRASIgZkZW5pYWwSGAoHCgJvZhDsBBICCAIaBQiBARArIgJvZhIqChAKC2Z1bmRhbWVudGFsEO8EEgIIARoFCIQBEAUiC2Z1bmRhbWVudGFsEiUKDQoIZnJlZWRvbXMQ+wQSBAgGOAIaBQiCARAkIgdmcmVlZG9tEhgKBwoCYnkQhAUSAggCGgUIgQEQKyICYnkSJAoKCgV0aGVpchCHBRIICAgYBTgCQAMaBQiHARAlIgV0aGVpchIqCg8KCmdvdmVybm1lbnQQjQUSBAgGOAEaBQiFARAkIgpnb3Zlcm5tZW50EhUKBgoBLhCXBRICCAoaBAhdECAiAS4SIAoKCgVUaG9zZRCZBRIECAU4AhoFCJYBEB0iBVRob3NlEh0KCwoGdHJ5aW5nEJ8FEgIICxoFCIkBEDsiA3RyeRIYCgcKAnRvEKYFEgIICRoFCIwBEAgiAnRvEhwKCQoEZmxlZRCpBRICCAsaBQiKARA9IgRmbGVlEh4KCQoEdGhpcxCuBRIECAU4ARoFCI8BEBAiBHRoaXMSKAoPCgpvcHByZXNzaXZlELMFEgIIARoFCI8BEAUiCm9wcHJlc3NpdmUSLAoQCgtlbnZpcm9ubWVudBC+BRIECAY4ARoFCIwBEBIiC2Vudmlyb25tZW50EhYKBgoBLBDJBRICCAoaBQiWARAgIgEsEhgKBwoCaWYQywUSAggCGgUIkgEQFiICaWYSIQoLCgZjYXVnaHQQzgUSBAgLWAMaBQiWARADIgVjYXRjaBIWCgYKASwQ1AUSAggKGgUIlgEQICIBLBIdCggKA2FyZRDWBRIGCAswA1gEGgUIlgEQCSICYmUSHgoKCgVvZnRlbhDaBRICCAMaBQiWARAEIgVvZnRlbhInCg0KCHRvcnR1cmVkEOAFEgYIC1gDYAMaBQicARALIgd0b3J0dXJlEhgKBwoCb3IQ6QUSAggEGgUIlgEQCiICb3ISIAoLCgZraWxsZWQQ7AUSBAgLWAMaBQiWARAMIgRraWxsEhYKBgoBLBDyBRICCAoaBQicARAgIgEsEhYKBgoBIhDzBRICCAoaBQicARAgIgEiEiIKCAoDc2hlEPUFEgoICBgIKAE4AUADGgUInAEQHCIDc2hlEh8KCQoEc2FpZBD5BRIGCAswA1gDGgUInAEQNiIDc2F5EhYKBgoBLhD9BRICCAoaBQicARAgIgEuEhYKBgoBPBD/BRICCAoaBQigARAgIgE8EhYKBgoBLxCABhICCAwaBQigARAgIgEvEhgKBgoBcBCBBhIECAY4ARoFCKYCEAsiAXASFgoGCgE+EIIGEgIIChoFCKABECAiAT4SFgoGCgE8EIMGEgIIChoFCKMBECAiATwSGAoGCgFwEIQGEgQIBjgBGgUIoAEQDyIBcBIWCgYKAT4QhQYSAggKGgUIowEQICIBPhIaCggKA1RoZRCGBhICCAUaBQimARAQIgNUaGUSMgoTCg5hZG1pbmlzdHJhdGlvbhCKBhIECAY4ARoFCKkBEBwiDmFkbWluaXN0cmF0aW9uEiMKCAoDaGFzEJkGEgoICzADOAFAA1gEGgUIqQEQCCIEaGF2ZRIkCg0KCHJlY2VudGx5EJ0GEgIIAxoFCKkBEAQiCHJlY2VudGx5Eh4KCgoFdHJpZWQQpgYSBAgLWAMaBQigARAPIgN0cnkSGAoHCgJ0bxCsBhICCAkaBQirARAIIgJ0bxIgCgsKBnN0cmlrZRCvBhICCAsaBQipARA9IgZzdHJpa2USFgoGCgFhELYGEgIIBRoFCK0BEBAiAWESHgoJCgR0b25lELgGEgQIBjgBGgUIqwEQEiIEdG9uZRIYCgcKAm9mEL0GEgIIAhoFCK0BECsiAm9mEiQKDQoIY2F1dGlvdXMQwAYSAggBGgUIsAEQBSIIY2F1dGlvdXMSJgoNCghvcHRpbWlzbRDJBhIECAY4ARoFCK4BECQiCG9wdGltaXNtEhgKBwoCYXMQ0gYSAggCGgUItQEQFiICYXMSIgoKCgVUcnVtcBDVBhIGCAY4AUgBGgUItQEQHCIFVHJ1bXASGgoICgNhbmQQ2wYSAggEGgUIsgEQCiIDYW5kEh4KCAoDS2ltEN8GEgYIBjgBSAEaBQiyARAMIgNLaW0SIgoJCgRnZWFyEOMGEggICzADOAFYBBoFCKsBEAMiBGdlYXISGAoHCgJ1cBDoBhICCAkaBQi1ARAtIgJ1cBIaCggKA2ZvchDrBhICCAIaBQi1ARArIgNmb3ISFgoGCgFhEO8GEgIIBRoFCL4BEBAiAWESIAoLCgZoaWdobHkQ8QYSAggDGgUIugEQBCIGaGlnaGx5EiwKEAoLYW50aWNpcGF0ZWQQ+AYSBAgBWAMaBQi+ARAFIgthbnRpY2lwYXRlZBIaCggKA2FuZBCEBxICCAQaBQi6ARAKIgNhbmQSKgoQCgtwb3RlbnRpYWxseRCIBxICCAMaBQi9ARAEIgtwb3RlbnRpYWxseRIkCg0KCGhpc3RvcmljEJQHEgIIARoFCLoBEAwiCGhpc3RvcmljEiIKCwoGc3VtbWl0EJ0HEgQIBjgBGgUItwEQJCIGc3VtbWl0EhgKBwoCaW4QpAcSAggCGgUIvgEQKyICaW4SGgoICgN0aGUQpwcSAggFGgUIwgEQECIDdGhlEh4KCwoGY29taW5nEKsHEgIICxoFCMIBEAUiBGNvbWUSIgoLCgZ3ZWVrcy4QsgcSBAgGOAEaBQi/ARAkIgZ3ZWVrcy4SFgoGCgE8ELgHEgIIChoFCMUBECAiATwSFgoGCgEvELkHEgIIDBoFCMUBECAiAS8SGAoGCgFwELoHEgQIBjgBGgUIwgEQBiIBcBIWCgYKAT4QuwcSAggKGgUIxQEQICIBPhIWCgYKATwQvAcSAggKGgUIywEQICIBPBIYCgYKAXAQvQcSBAgGOAEaBQjLARAaIgFwEhYKBgoBPhC+BxICCAoaBQjLARAgIgE+EhwKCQoETGFzdBC/BxICCAEaBQjLARAFIgRMYXN0Eh4KCQoEd2VlaxDEBxIECAY4ARoFCKkBEDkiBHdlZWsSFgoGCgEsEMgHEgIIChoFCKABECAiASwSIgoKCgVUcnVtcBDKBxIGCAY4AUgBGgUIzgEQHCIFVHJ1bXASMQoSCg1jaGFyYWN0ZXJpemVkENAHEgYICzADWAMaBQigARAMIgxjaGFyYWN0ZXJpemUSHgoICgNLaW0Q3gcSBggGOAFIARoFCNEBECUiA0tpbRIYCgcKAidzEOEHEgIICRoFCM8BEC4iAidzEikKDwoKaW50ZW50aW9ucxDkBxIECAY4AhoFCM4BEBIiCWludGVudGlvbhIfCgwKB2xlYWRpbmcQ7wcSAggLGgUI0QEQOyIEbGVhZBIYCgcKAnVwEPcHEgIIAhoFCNIBECsiAnVwEhgKBwoCdG8Q+gcSAggCGgUI0wEQIyICdG8SGgoICgN0aGUQ/QcSAggFGgUI1gEQECIDdGhlEiQKDAoHbWVldGluZxCBCBIECAY4ARoFCNQBECQiB21lZXRpbmcSGAoHCgJhcxCJCBICCAIaBQjSARArIgJhcxIWCgYKASIQjAgSAggKGgUI1wEQICIBIhIcCgkKBHZlcnkQjQgSAggDGgUI2gEQBCIEdmVyeRIcCgkKBG9wZW4QkggSAggBGgUI1wEQJCIEb3BlbhIaCggKA2FuZBCXCBICCAQaBQigARAKIgNhbmQSHAoGCgFJEJsIEggICBgIOAFAARoFCN0BEBwiAUkSIgoKCgV0aGluaxCdCBIGCAswA1gEGgUIoAEQDCIFdGhpbmsSHAoJCgR2ZXJ5EKMIEgIIAxoFCN8BEAQiBHZlcnkSJgoOCglob25vcmFibGUQqAgSAggBGgUI3QEQAiIJaG9ub3JhYmxlEh8KCgoFYmFzZWQQsggSBAgLWAMaBQjfARArIgRiYXNlEhgKBwoCb24QuAgSAggCGgUI4AEQIyICb24SHgoJCgR3aGF0ELsIEgQICEADGgUI5QEQEiIEd2hhdBIeCgcKAndlEMAIEggICBgIOAJAARoFCOUBEBwiAndlEh0KCAoDYXJlEMMIEgYICzADWAQaBQjlARAIIgJiZRIfCgsKBnNlZWluZxDHCBIECAtYBBoFCOEBECMiA3NlZRIWCgYKASIQzQgSAggKGgUI5QEQICIBIhIaCggKA2FuZBDPCBICCAQaBQigARAKIgNhbmQSIAoHCgJoZRDTCBIKCAgYCCgCOAFAAxoFCOoBEBwiAmhlEiMKCAoDaGFzENYIEgoICzADOAFAA1gEGgUI6gEQCCIEaGF2ZRIgCgsKBnRhbGtlZBDaCBIECAtYAxoFCKABEAwiBHRhbGsSGAoHCgJ1cBDhCBICCAkaBQjqARAtIgJ1cBIiCggKA2hpcxDkCBIKCAgYBSgCOAFAAxoFCO4BECUiA2hpcxIoCg8KCmRpcGxvbWF0aWMQ6AgSAggBGgUI7gEQBSIKZGlwbG9tYXRpYxIjCgwKB2VmZm9ydHMQ8wgSBAgGOAIaBQjqARASIgZlZmZvcnQSHAoJCgR3aXRoEPsIEgIIAhoFCO4BECsiBHdpdGgSIgoKCgVOb3J0aBCACRIGCAY4AUgBGgUI8QEQGiIFTm9ydGgSIgoKCgVLb3JlYRCGCRIGCAY4AUgBGgUI7wEQJCIFS29yZWESGAoHCgJvbhCMCRICCAIaBQjqARArIgJvbhIiCgwKB3NldmVyYWwQjwkSAggBGgUI9AEQBSIHc2V2ZXJhbBInCg4KCW9jY2FzaW9ucxCXCRIECAY4AhoFCPIBECQiCG9jY2FzaW9uEhgKBwoCaW4QoQkSAggCGgUI6gEQKyICaW4SIAoLCgZyZWNlbnQQpAkSAggBGgUI9wEQBSIGcmVjZW50EiEKCwoGbW9udGhzEKsJEgQIBjgCGgUI9QEQJCIFbW9udGgSFgoGCgEsELEJEgIIChoFCOoBECAiASwSJQoPCgpzdWdnZXN0aW5nELMJEgIICxoFCOoBED0iB3N1Z2dlc3QSHAoJCgR0aGF0EL4JEgIIAhoFCP4BEBYiBHRoYXQSIAoHCgJoZRDDCRIKCAgYCCgCOAFAAxoFCP4BEB0iAmhlEhoKCAoDbWF5EMYJEgIICxoFCP4BEAgiA21heRIYCgcKAmJlEMoJEgIICxoFCP4BEAkiAmJlEiMKCwoGcG9pc2VkEM0JEgYIC1gDYAMaBQj5ARALIgVwb2lzZRIYCgcKAnRvENQJEgIICRoFCIACEAgiAnRvEigKDwoKYWNjb21wbGlzaBDXCRICCAsaBQj+ARA9IgphY2NvbXBsaXNoEh4KCQoEd2hhdBDiCRIECAhAAxoFCIUCEBIiBHdoYXQSHgoKCgVvdGhlchDnCRICCAEaBQiDAhAFIgVvdGhlchIzChQKD2FkbWluaXN0cmF0aW9ucxDtCRIECAY4ARoFCIUCEBwiDmFkbWluaXN0cmF0aW9uEiAKCQoEaGF2ZRD9CRIGCAswA1gEGgUIhQIQCCIEaGF2ZRIgCgkKBG5vdC4QggoSBggLOAFYAxoFCIACEAsiBG5vdC4SFgoGCgE8EIYKEgIIChoFCIgCECAiATwSFgoGCgEvEIcKEgIIDBoFCIgCECAiAS8SGAoGCgFwEIgKEgQIBjgBGgUIhQIQDyIBcBIWCgYKAT4QiQoSAggKGgUIiAIQICIBPhIWCgYKATwQigoSAggKGgUIiwIQICIBPBIYCgYKAXAQiwoSBAgGOAEaBQiIAhAPIgFwEhYKBgoBPhCMChICCAoaBQiLAhAgIgE+EhYKBgoBIhCNChICCAoaBQiIAhAgIgEiEh4KBwoCV2UQjgoSCAgIGAg4AkABGgUIkQIQHCICV2USHwoICgMndmUQkAoSBggLMANYBBoFCJECEAgiBGhhdmUSHgoKCgVuZXZlchCUChICCAMaBQiRAhAZIgVuZXZlchIcCgkKBGJlZW4QmgoSBAgLWAMaBQiIAhAPIgJiZRIYCgcKAmluEJ8KEgIIAhoFCJECECsiAmluEhYKBgoBYRCiChICCAUaBQiUAhAQIgFhEiYKDQoIcG9zaXRpb24QpAoSBAgGOAEaBQiSAhAkIghwb3NpdGlvbhIcCgkKBGxpa2UQrQoSAggCGgUIlAIQKyIEbGlrZRIeCgkKBHRoaXMQsgoSBAgFOAEaBQiVAhAkIgR0aGlzEhwKCQoEd2l0aBC3ChICCAIaBQiUAhArIgR3aXRoEhwKCQoEdGhhdBC8ChICCAUaBQiZAhAQIgR0aGF0EiIKCwoGcmVnaW1lEMEKEgQIBjgBGgUIlwIQJCIGcmVnaW1lEhYKBgoBLBDHChICCAoaBQiRAhAgIgEsEiIKDAoHd2hldGhlchDJChICCAIaBQidAhAWIgd3aGV0aGVyEiAKBwoCaXQQ0QoSCggIGAgoAzgBQAMaBQidAhAcIgJpdBIgCgcKAidzENMKEgoICzADOAFAA1gEGgUIkQIQCyICYmUSIgoLCgZmYXRoZXIQ1goSBAgGOAEaBQidAhAHIgZmYXRoZXISFgoGCgEsENwKEgIIChoFCJ4CECAiASwSLAoQCgtncmFuZGZhdGhlchDeChIECAY4ARoFCJ4CEAwiC2dyYW5kZmF0aGVyEhgKBwoCb3IQ6goSAggEGgUIngIQCiICb3ISHAoICgNzb24Q7QoSBAgGOAEaBQieAhAMIgNzb24SFgoGCgEsEPAKEgIIChoFCKYCECAiASwSFgoGCgEiEPEKEgIIChoFCKYCECAiASISIgoKCgVUcnVtcBDzChIGCAY4AUgBGgUIpgIQHCIFVHJ1bXASHwoJCgRzYWlkEPkKEgYICzADWAMaBQimAhA2IgNzYXkSHAoJCgRsYXN0EP4KEgIIARoFCKgCEAUiBGxhc3QSIAoKCgVtb250aBCDCxIECAY4ARoFCKYCEDkiBW1vbnRoEhYKBgoBLhCICxICCAoaBQimAhAgIgEuEhYKBgoBPBCKCxICCAoaBQisAhAgIgE8EhYKBgoBLxCLCxICCAwaBQisAhAgIgEvEhgKBgoBcBCMCxIECAY4ARoFCLwCEA8iAXASFgoGCgE+EI0LEgIIChoFCKwCECAiAT4SFgoGCgE8EI4LEgIIChoFCK8CECAiATwSGAoGCgFwEI8LEgQIBjgBGgUIrAIQDyIBcBIWCgYKAT4QkAsSAggKGgUIrwIQICIBPhIaCggKA1RoZRCRCxICCAUaBQi0AhAQIgNUaGUSIAoKCgVOb3J0aBCVCxIECAE4ARoFCLMCEAUiBU5vcnRoEiIKCwoGS29yZWFuEJsLEgQIATgBGgUItAIQBSIGS29yZWFuEioKDwoKZ292ZXJubWVudBCiCxIECAY4ARoFCLcCECUiCmdvdmVybm1lbnQSGAoHCgIncxCsCxICCAkaBQi0AhAuIgIncxIcCgkKBGxvbmcQrwsSAggBGgUItwIQBSIEbG9uZxIkCgwKB2hpc3RvcnkQtAsSBAgGOAEaBQi8AhAcIgdoaXN0b3J5EhgKBwoCb2YQvAsSAggCGgUItwIQKyICb2YSIgoMCgdhYnVzaXZlEL8LEgIIARoFCLoCEAUiB2FidXNpdmUSJwoOCglwcmFjdGljZXMQxwsSBAgGOAIaBQi4AhAkIghwcmFjdGljZRIjCggKA2hhcxDRCxIKCAswAzgBQANYBBoFCLwCEAgiBGhhdmUSHAoJCgRiZWVuENULEgQIC1gDGgUIvAIQNiICYmUSGgoICgN0aGUQ2gsSAggFGgUIvgIQECIDdGhlEiYKDQoIZWxlcGhhbnQQ3gsSBAgGOAEaBQi8AhAHIghlbGVwaGFudBIYCgcKAmluEOcLEgIIAhoFCLwCECsiAmluEhoKCAoDdGhlEOoLEgIIBRoFCMECEBAiA3RoZRIeCgkKBHJvb20Q7gsSBAgGOAEaBQi/AhAkIgRyb29tEhgKBwoCYXMQ8wsSAggCGgUIxAIQFiICYXMSIgoKCgVUcnVtcBD2CxIGCAY4AUgBGgUIxAIQHCIFVHJ1bXASKQoMCgdmb2N1c2VzEPwLEgoICzADOAFAA1gEGgUIvAIQAyIGZm9jdXNlEhgKBwoCb24QhAwSAggCGgUIxAIQKyICb24SJgoPCgpjb252aW5jaW5nEIcMEgIICxoFCMUCECMiCGNvbnZpbmNlEioKDgoJUHlvbmd5YW5nEJIMEgYIBjgBSAEaBQjGAhASIglQeW9uZ3lhbmcSGAoHCgJ0bxCcDBICCAkaBQjJAhAIIgJ0bxIcCgkKBHRha2UQnwwSAggLGgUIxgIQPSIEdGFrZRIkCg0KCGNvbmNyZXRlEKQMEgIIARoFCMsCEAUiCGNvbmNyZXRlEh8KCgoFc3RlcHMQrQwSBAgGOAIaBQjJAhASIgRzdGVwEiAKCwoGdG93YXJkELMMEgIIAhoFCMsCECsiBnRvd2FyZBIoChAKC2Rpc21hbnRsaW5nELoMEgIICxoFCMwCECMiCWRpc21hbnRsZRIiCggKA2l0cxDGDBIKCAgYBSgDOAFAAxoFCNICECUiA2l0cxIiCgwKB251Y2xlYXIQygwSAggBGgUI0gIQBSIHbnVjbGVhchIaCggKA2FuZBDSDBICCAQaBQjPAhAKIgNhbmQSJAoMCgdtaXNzaWxlENYMEgQIBjgBGgUIzwIQDCIHbWlzc2lsZRIlCg0KCHByb2dyYW1zEN4MEgQIBjgCGgUIzQIQEiIHcHJvZ3JhbRIWCgYKAS4Q5gwSAggKGgUIvAIQICIBLhIWCgYKATwQ6AwSAggKGgUI1gIQICIBPBIWCgYKAS8Q6QwSAggMGgUI1gIQICIBLxIYCgYKAXAQ6gwSBAgGOAEaBQjWAhA2IgFwEhYKBgoBPhDrDBICCAoaBQjWAhAgIgE+EhYKBgoBPBDsDBICCAoaBQjZAhAgIgE8EhgKBgoBcBDtDBIECAY4ARoFCNYCEA8iAXASFgoGCgE+EO4MEgIIChoFCNkCECAiAT4SFgoGCgEiEO8MEgIIChoFCNYCECAiASISHgoHCgJXZRDwDBIICAgYCDgCQAEaBQjdAhAcIgJXZRIkCgsKBnJlbWFpbhDzDBIGCAswA1gEGgUI1gIQDyIGcmVtYWluEiIKDAoHZ3JhdmVseRD6DBICCAMaBQjfAhAEIgdncmF2ZWx5EiYKDgoJY29uY2VybmVkEIINEgIIARoFCN0CEAIiCWNvbmNlcm5lZBIaCggKA2FuZBCMDRICCAQaBQjfAhAKIgNhbmQSIAoLCgZkZWVwbHkQkA0SAggDGgUI4gIQBCIGZGVlcGx5EiUKDQoIdHJvdWJsZWQQlw0SBAgLWAMaBQjfAhAMIgd0cm91YmxlEhgKBwoCYnkQoA0SAggCGgUI4gIQKyICYnkSIAoKCgV0aGVzZRCjDRIECAU4AhoFCOUCEBAiBXRoZXNlEiEKCwoGYWJ1c2VzEKkNEgQIBjgCGgUI4wIQJCIFYWJ1c2USFgoGCgEuEK8NEgIIChoFCNYCECAiAS4SGAoHCgJJbhCxDRICCAIaBQjxAhArIgJJbhIiCgsKBnRhbmRlbRC0DRIECAY4ARoFCOcCECQiBnRhbmRlbRIcCgkKBHdpdGgQuw0SAggCGgUI6AIQKyIEd2l0aBIaCggKA3RoZRDADRICCAUaBQjtAhAQIgN0aGUSIgoMCgdtYXhpbXVtEMQNEgIIARoFCO0CEAUiB21heGltdW0SJgoNCghwcmVzc3VyZRDMDRIECAY4ARoFCO0CEBoiCHByZXNzdXJlEiYKDQoIY2FtcGFpZ24Q1Q0SBAgGOAEaBQjpAhAkIghjYW1wYWlnbhIWCgYKASwQ3Q0SAggKGgUI8QIQICIBLBIeCgcKAndlEN8NEggICBgIOAJAARoFCPECEBwiAndlEhwKCQoEd2lsbBDiDRICCAsaBQjxAhAIIgR3aWxsEiQKDQoIY29udGludWUQ5w0SAggLGgUI/QIQCyIIY29udGludWUSGAoHCgJ0bxDwDRICCAkaBQjzAhAIIgJ0bxIgCgoKBXByZXNzEPMNEgQICzgBGgUI8QIQPSIFcHJlc3MSGgoICgNmb3IQ+Q0SAggCGgUI8wIQKyIDZm9yEjIKEwoOYWNjb3VudGFiaWxpdHkQ/Q0SBAgGOAEaBQj0AhAkIg5hY2NvdW50YWJpbGl0eRIaCggKA2ZvchCMDhICCAIaBQj1AhArIgNmb3ISIAoKCgV0aG9zZRCQDhIECAU4AhoFCPYCECQiBXRob3NlEioKEAoLcmVzcG9uc2libGUQlg4SAggBGgUI9wIQBSILcmVzcG9uc2libGUSFgoGCgEsEKEOEgIIChoFCP0CECAiASwSFgoGCgEiEKIOEgIIChoFCP0CECAiASISGgoICgN0aGUQpA4SAggFGgUI/AIQECIDdGhlEigKDgoJc3RhdGVtZW50EKgOEgQIBjgBGgUI/QIQHCIJc3RhdGVtZW50Eh8KCQoEc2FpZBCyDhIGCAswA1gDGgUI/QIQNiIDc2F5EhYKBgoBLhC2DhICCAoaBQj9AhAgIgEuEhYKBgoBPBC4DhICCAoaBQiBAxAgIgE8EhYKBgoBLxC5DhICCAwaBQiBAxAgIgEvEhgKBgoBcBC6DhIECAY4ARoFCIkDEA8iAXASFgoGCgE+ELsOEgIIChoFCIEDECAiAT4SFgoGCgE8ELwOEgIIChoFCIQDECAiATwSGAoGCgFwEL0OEgQIBjgBGgUIgQMQDyIBcBIWCgYKAT4Qvg4SAggKGgUIhAMQICIBPhIaCggKA1RoZRC/DhICCAUaBQiIAxAQIgNUaGUSIgoKCgVTdGF0ZRDDDhIGCAY4AUgBGgUIiAMQGiIFU3RhdGUSLAoPCgpEZXBhcnRtZW50EMkOEgYIBjgBSAEaBQiJAxAcIgpEZXBhcnRtZW50EiMKDAoHc3RvcHBlZBDUDhIGCAswA1gDGgUIiQMQNiIEc3RvcBIeCgoKBXNob3J0ENwOEgIIAxoFCIkDEAQiBXNob3J0EhgKBwoCb2YQ4g4SAggCGgUIiQMQKyICb2YSIwoOCglkZXRhaWxpbmcQ5Q4SAggLGgUIiwMQIyIGZGV0YWlsEiIKDAoHZXhhY3RseRDvDhICCAMaBQiOAxAEIgdleGFjdGx5EhoKCAoDaG93EPcOEgIIAxoFCJEDEAQiA2hvdxIaCggKA3RoZRD7DhICCAUaBQiQAxAQIgN0aGUSHAoHCgJVUxD/DhIGCAY4AUgBGgUIkQMQHCICVVMSJQoKCgVwbGFucxCCDxIKCAswAzgCQANYBBoFCIwDEAsiBHBsYW4SGAoHCgJ0bxCIDxICCAkaBQiUAxAIIgJ0bxIWCgYKASIQiw8SAggKGgUIlAMQICIBIhIgCgoKBXByZXNzEIwPEgQICzgBGgUIkQMQPSIFcHJlc3MSGgoICgNmb3IQkg8SAggCGgUIlAMQKyIDZm9yEjIKEwoOYWNjb3VudGFiaWxpdHkQlg8SBAgGOAEaBQiVAxAkIg5hY2NvdW50YWJpbGl0eRIWCgYKASIQpA8SAggKGgUIlQMQICIBIhIYCgcKAm9yEKYPEgIIBBoFCJQDEAoiAm9yEiYKDwoKaW5kaWNhdGluZxCpDxICCAsaBQiUAxAMIghpbmRpY2F0ZRIiCgwKB3doZXRoZXIQtA8SAggCGgUInAMQFiIHd2hldGhlchIiCgoKBVRydW1wELwPEgYIBjgBSAEaBQicAxAcIgVUcnVtcBIlCgoKBXBsYW5zEMIPEgoICzADOAJAA1gEGgUImQMQCyIEcGxhbhIYCgcKAnRvEMgPEgIICRoFCJ4DEAgiAnRvEiIKDAoHYWRkcmVzcxDLDxICCAsaBQicAxA9IgdhZGRyZXNzEiAKCgoFdGhlc2UQ0w8SBAgFOAIaBQigAxAQIgV0aGVzZRIlCg0KCGNvbmNlcm5zENkPEgQIBjgCGgUIngMQEiIHY29uY2VybhIcCgkKBHdpdGgQ4g8SAggCGgUIngMQKyIEd2l0aBIeCggKA0tpbRDnDxIGCAY4AUgBGgUIoQMQJCIDS2ltEiQKDQoIZGlyZWN0bHkQ6w8SAggDGgUIngMQBCIIZGlyZWN0bHkSHAoJCgR3aGVuEPQPEgIIAxoFCJ4DEA8iBHdoZW4SGgoICgN0aGUQ+Q8SAggFGgUIpwMQECIDdGhlEhoKCAoDdHdvEP0PEgIIBxoFCKcDEB4iA3R3bxIeCgkKBG1lZXQQgRASBAgGOAEaBQikAxAPIgRtZWV0EhoKCAoDYnV0EIYQEgIIBBoFCKcDEAoiA2J1dBIdCggKA2RpZBCKEBIGCAswA1gDGgUIqgMQCCICZG8SIgoLCgZwbGVkZ2UQjhASBAgLOAEaBQinAxAMIgZwbGVkZ2USGAoHCgJ0bxCVEBICCAkaBQisAxAIIgJ0bxIcCgkKBGhlbHAQmBASAggLGgUIqgMQPSIEaGVscBIcCgkKBG9wZW4QnRASAggLGgUIrAMQCyIEb3BlbhIYCgcKAnVwEKIQEgIICRoFCK0DEC0iAnVwEhoKCAoDdGhlEKUQEgIIBRoFCLEDEBAiA3RoZRIkCg0KCGlzb2xhdGVkEKkQEgIIARoFCLEDEAUiCGlzb2xhdGVkEiQKDAoHY291bnRyeRCyEBIECAY4ARoFCK0DEBIiB2NvdW50cnkSGAoHCgJ0bxC6EBICCAIaBQitAxArIgJ0bxIaCggKA3RoZRC9EBICCAUaBQi0AxAQIgN0aGUSHgoJCgRyZXN0EMEQEgQIBjgBGgUIsgMQJCIEcmVzdBIYCgcKAm9mEMYQEgIIAhoFCLQDECsiAm9mEhoKCAoDdGhlEMkQEgIIBRoFCLcDEBAiA3RoZRIgCgoKBXdvcmxkEM0QEgQIBjgBGgUItQMQJCIFd29ybGQSFgoGCgEuENIQEgIIChoFCIkDECAiAS4SFgoGCgE8ENQQEgIIChoFCLsDECAiATwSFgoGCgEvENUQEgIIDBoFCLsDECAiAS8SGAoGCgFwENYQEgQIBjgBGgUI6wMQCyIBcBIWCgYKAT4Q1xASAggKGgUIuwMQICIBPhIWCgYKATwQ2BASAggKGgUIvgMQICIBPBIYCgYKAXAQ2RASBAgGOAEaBQi7AxAPIgFwEhYKBgoBPhDaEBICCAoaBQi+AxAgIgE+EhYKBgoBIhDbEBICCAoaBQi7AxAgIgEiEh4KBwoCV2UQ3BASCAgIGAg4AkABGgUIxAMQHCICV2USHQoICgNhcmUQ3xASBggLMANYBBoFCMQDEAgiAmJlEhwKCQoEYWxzbxDjEBICCAMaBQjEAxAEIgRhbHNvEh0KCgoFZ29pbmcQ6BASBAgLWAQaBQi7AxAPIgJnbxIYCgcKAnRvEO4QEgIICRoFCMYDEAgiAnRvEiQKDQoIY29udGludWUQ8RASAggLGgUIxAMQPSIIY29udGludWUSIAoICgNvdXIQ+hASCAgIGAU4AkABGgUIyAMQJSIDb3VyEiMKDAoHZWZmb3J0cxD+EBIECAY4AhoFCMYDEBIiBmVmZm9ydBIYCgcKAnRvEIYREgIICRoFCMoDEAgiAnRvEiQKDQoIaW5jcmVhc2UQiRESAggLGgUIyAMQOyIIaW5jcmVhc2USGgoICgN0aGUQkhESAggFGgUIzAMQECIDdGhlEh4KCQoEZmxvdxCWERIECAY4ARoFCMoDEBIiBGZsb3cSGAoHCgJvZhCbERICCAIaBQjMAxArIgJvZhIqChAKC2luZGVwZW5kZW50EJ4REgIIARoFCM8DEAUiC2luZGVwZW5kZW50EiwKEAoLaW5mb3JtYXRpb24QqhESBAgGOAEaBQjNAxAkIgtpbmZvcm1hdGlvbhIcCgkKBGludG8QthESAggCGgUIygMQKyIEaW50bxIWCgYKASwQuhESAggKGgUI0AMQICIBLBIaCggKA291dBC8ERICCAIaBQjQAxAMIgNvdXQSGAoHCgJvZhDAERICCAIaBQjSAxAjIgJvZhIWCgYKASwQwhESAggKGgUIxAMQICIBLBIaCggKA2FuZBDEERICCAQaBQjEAxAKIgNhbmQSIAoLCgZ3aXRoaW4QyBESAggCGgUI2wMQKyIGd2l0aGluEh4KCQoEdGhpcxDPERIECAU4ARoFCNkDEBAiBHRoaXMSJAoNCghpc29sYXRlZBDUERICCAEaBQjZAxAFIghpc29sYXRlZBIgCgoKBXN0YXRlEN0REgQIBjgBGgUI1gMQJCIFc3RhdGUSGAoHCgJ0bxDjERICCAkaBQjbAxAIIgJ0bxIiCgwKB3ByZXNlbnQQ5hESAggLGgUIxAMQDCIHcHJlc2VudBIkCg0KCGV2ZXJ5ZGF5EO4REgIIARoFCN4DEAUiCGV2ZXJ5ZGF5EiIKCgoFTm9ydGgQ9xESBggGOAFIARoFCN4DEBoiBU5vcnRoEiYKDAoHS29yZWFucxD9ERIGCAY4AUgBGgUI2wMQEiIHS29yZWFucxIcCgkKBHdpdGgQhRISAggCGgUI2wMQKyIEd2l0aBIWCgYKAWEQihISAggFGgUI4wMQECIBYRIcCgkKBG1vcmUQjBISAggDGgUI4gMQBCIEbW9yZRImCg4KCXJlYWxpc3RpYxCREhICCAEaBQjjAxAFIglyZWFsaXN0aWMSJAoMCgdwaWN0dXJlEJsSEgQIBjgBGgUI3wMQJCIHcGljdHVyZRIYCgcKAm9mEKMSEgIIAhoFCOMDECsiAm9mEhoKCAoDdGhlEKYSEgIIBRoFCOcDEBAiA3RoZRIiCgwKB291dHNpZGUQqhISAggBGgUI5wMQBSIHb3V0c2lkZRIgCgoKBXdvcmxkELISEgQIBjgBGgUI5AMQJCIFd29ybGQSFgoGCgEsELcSEgIIChoFCOsDECAiASwSFgoGCgEiELgSEgIIChoFCOsDECAiASISJAoLCgZOYXVlcnQQuhISBggGOAFIARoFCOsDEBwiBk5hdWVydBIfCgkKBHNhaWQQwRISBggLMANYAxoFCOsDEDYiA3NheRIWCgYKAS4QxRISAggKGgUI6wMQICIBLhIWCgYKATwQxxISAggKGgUI7wMQICIBPBIWCgYKAS8QyBISAggMGgUI7wMQICIBLxIYCgYKAXAQyRISBAgGOAEaBQiKBBAcIgFwEhYKBgoBPhDKEhICCAoaBQjvAxAgIgE+EhYKBgoBPBDLEhICCAoaBQjvAxAgIgE8EhgKBgoBcBDMEhIECAY4ARoFCO8DEA8iAXASFgoGCgE+EM0SEgIIChoFCO8DECAiAT4SHAoJCgRMYXN0EM4SEgIIARoFCPUDEAUiBExhc3QSHgoJCgR5ZWFyENMSEgQIBjgBGgUI7wMQOSIEeWVhchIWCgYKASwQ1xISAggKGgUI7wMQICIBLBIgCgkKBFRoYWUQ2RISBggGOAFIARoFCPoDEBoiBFRoYWUSIAoJCgRZb25nEN4SEgYIBjgBSAEaBQj6AxAaIgRZb25nEhYKBgoBLRDiEhICCAoaBQj6AxAgIgEtEhwKBwoCaG8Q4xISBggGOAFIARoFCO8DEAYiAmhvEhYKBgoBLBDlEhICCAoaBQj6AxAgIgEsEhYKBgoBYRDnEhICCAUaBQiDBBAQIgFhEiAKCwoGZm9ybWVyEOkSEgIIARoFCIMEEAUiBmZvcm1lchIcCgkKBGhpZ2gQ8BISAggBGgUIgAQQBCIEaGlnaBIWCgYKAS0Q9BISAggKGgUIgAQQICIBLRIhCgwKB3JhbmtpbmcQ9RISBAgLOAEaBQiDBBAFIgRyYW5rEiAKCgoFTm9ydGgQ/RISBAgBOAEaBQiCBBAFIgVOb3J0aBIiCgsKBktvcmVhbhCDExIECAE4ARoFCIMEEAUiBktvcmVhbhImCg0KCG9mZmljaWFsEIoTEgQIBjgBGgUI+gMQBiIIb2ZmaWNpYWwSHAoICgN3aG8QkxMSBAgIQAMaBQiFBBAcIgN3aG8SJgoNCghkZWZlY3RlZBCXExIGCAswA1gDGgUIgwQQMCIGZGVmZWN0EhgKBwoCdG8QoBMSAggCGgUIhQQQKyICdG8SIgoKCgVTb3V0aBCjExIGCAY4AUgBGgUIiAQQGiIFU291dGgSIgoKCgVLb3JlYRCpExIGCAY4AUgBGgUIhgQQJCIFS29yZWESFgoGCgEsEK4TEgIIChoFCO8DECAiASwSIAoJCgR0b2xkELATEgYICzADWAMaBQjKBRALIgR0ZWxsEhwKBwoCVVMQtRMSBggGOAFIARoFCIwEEBoiAlVTEicKDgoJbGF3bWFrZXJzELgTEgQIBjgCGgUIigQQEiIIbGF3bWFrZXISHAoJCgR0aGF0EMITEgIIAhoFCJ4EEBYiBHRoYXQSHgoICgNLaW0QxxMSBggGOAFIARoFCJAEEBoiA0tpbRIgCgkKBEpvbmcQyxMSBggGOAFIARoFCJAEEBoiBEpvbmcSGgoHCgJVbhDQExIECAZIARoFCJ4EEBwiAlVuEhYKBgoBLBDSExICCAoaBQiQBBAgIgEsEiIKCAoDaGlzENQTEgoICBgFKAI4AUADGgUIkwQQJSIDaGlzEiIKCwoGZmF0aGVyENgTEgQIBjgBGgUIkAQQBiIGZmF0aGVyEh4KCAoDS2ltEN8TEgYIBjgBSAEaBQiWBBAaIgNLaW0SIAoJCgRKb25nEOMTEgYIBjgBSAEaBQiWBBAaIgRKb25nEhwKBwoCSWwQ6BMSBggGOAFIARoFCJMEEAYiAklsEhoKCAoDYW5kEOsTEgIIBBoFCJMEEAoiA2FuZBIsChAKC2dyYW5kZmF0aGVyEO8TEgQIBjgBGgUImwQQGiILZ3JhbmRmYXRoZXISHgoICgNLaW0Q+xMSBggGOAFIARoFCJsEEBoiA0tpbRIcCgcKAklsEP8TEgYIBjgBSAEaBQibBBAaIgJJbBIgCgkKBFN1bmcQghQSBggGOAFIARoFCJMEEAwiBFN1bmcSIAoJCgRoYXZlEIcUEgYICzADWAQaBQieBBAIIgRoYXZlEiYKDgoJY2FyZWZ1bGx5EIwUEgIIAxoFCJ4EEAQiCWNhcmVmdWxseRIpCg8KCmN1bHRpdmF0ZWQQlhQSBAgLWAMaBQiKBBALIgljdWx0aXZhdGUSGgoICgN0aGUQoRQSAggFGgUIoAQQECIDdGhlEioKDwoKcGVyY2VwdGlvbhClFBIECAY4ARoFCJ4EEBIiCnBlcmNlcHRpb24SHAoJCgR0aGF0ELAUEgIIAhoFCKMEEBYiBHRoYXQSIgoJCgR0aGV5ELUUEggICBgIOAJAAxoFCKMEEBwiBHRoZXkSHQoICgNhcmUQuhQSBggLMANYBBoFCKAEEAsiAmJlEiAKCwoGZGl2aW5lEL4UEgIIARoFCKUEEAUiBmRpdmluZRIhCgsKBnJ1bGVycxDFFBIECAY4AhoFCKMEEAciBXJ1bGVyEhoKCAoDYW5kEMwUEgIIBBoFCKUEEAoiA2FuZBIsChEKDGNvbnNvbGlkYXRlZBDQFBICCAEaBQioBBAFIgxjb25zb2xpZGF0ZWQSIAoKCgVwb3dlchDdFBIECAY4ARoFCKUEEAwiBXBvd2VyEhgKBwoCYnkQ4xQSAggCGgUIowQQKyICYnkSJQoPCgpzaGVsdGVyaW5nEOYUEgIICxoFCKkEECMiB3NoZWx0ZXISGgoICgN0aGUQ8RQSAggFGgUIrgQQECIDdGhlEiAKCgoFTm9ydGgQ9RQSBAgBOAEaBQitBBAFIgVOb3J0aBIiCgsKBktvcmVhbhD7FBIECAE4ARoFCK4EEAUiBktvcmVhbhIqCg8KCnBvcHVsYXRpb24QghUSBAgGOAEaBQiqBBASIgpwb3B1bGF0aW9uEhwKCQoEZnJvbRCNFRICCAIaBQiqBBArIgRmcm9tEhoKCAoDdGhlEJIVEgIIBRoFCLIEEBAiA3RoZRIiCgwKB291dHNpZGUQlhUSAggBGgUIsgQQBSIHb3V0c2lkZRIgCgoKBXdvcmxkEJ4VEgQIBjgBGgUIrwQQJCIFd29ybGQSGgoICgNhbmQQpBUSAggEGgUIqgQQCiIDYW5kEioKEQoMbWFuaXB1bGF0aW5nEKgVEgIICxoFCKoEEAwiCm1hbmlwdWxhdGUSGgoICgN0aGUQtRUSAggFGgUItgQQECIDdGhlEiQKDAoHY291bnRyeRC5FRIECAY4ARoFCLkEECUiB2NvdW50cnkSGAoHCgIncxDAFRICCAkaBQi2BBAuIgIncxIkCgwKB3dlbGZhcmUQwxUSBAgGOAEaBQi5BBAaIgd3ZWxmYXJlEiQKDAoHc3lzdGVtLhDLFRIECAY4ARoFCLQEEBIiB3N5c3RlbS4SFgoGCgE8ENIVEgIIChoFCLwEECAiATwSFgoGCgEvENMVEgIIDBoFCLwEECAiAS8SGAoGCgFwENQVEgQIBjgBGgUIuQQQBiIBcBIWCgYKAT4Q1RUSAggKGgUIvAQQICIBPhIWCgYKATwQ1hUSAggKGgUIvwQQICIBPBIYCgYKAXAQ1xUSBAgGOAEaBQi5BBAGIgFwEhYKBgoBPhDYFRICCAoaBQi/BBAgIgE+EhYKBgoBIhDZFRICCAoaBQi0BBAgIgEiEh4KCgoFVW50aWwQ2hUSAggCGgUIygQQKyIFVW50aWwSGgoICgNub3cQ4BUSAggDGgUIwgQQJCIDbm93EhYKBgoBLBDjFRICCAoaBQjKBBAgIgEsEhoKCAoDdGhlEOUVEgIIBRoFCMgEEBAiA3RoZRIgCgoKBU5vcnRoEOkVEgQIATgBGgUIxwQQBSIFTm9ydGgSIgoLCgZLb3JlYW4Q7xUSBAgBOAEaBQjIBBAFIgZLb3JlYW4SIgoLCgZzeXN0ZW0Q9hUSBAgGOAEaBQjKBBAcIgZzeXN0ZW0SIwoICgNoYXMQ/RUSCggLMAM4AUADWAQaBQjKBBAIIgRoYXZlEiYKDgoJcHJldmFpbGVkEIEWEgQIC1gDGgUItAQQCyIHcHJldmFpbBIiCgwKB3Rocm91Z2gQixYSAggCGgUIygQQKyIHdGhyb3VnaBIYCgcKAmFuEJMWEgIIBRoFCNAEEBAiAmFuEiYKDgoJZWZmZWN0aXZlEJYWEgIIARoFCNAEEAUiCWVmZmVjdGl2ZRIaCggKA2FuZBCgFhICCAQaBQjNBBAKIgNhbmQSJAoNCghjcmVkaWJsZRCkFhICCAEaBQjNBBAMIghjcmVkaWJsZRIgCgoKBXJlaWduEK0WEgQIBjgBGgUIywQQJCIFcmVpZ24SGAoHCgJvZhCzFhICCAIaBQjQBBArIgJvZhIiCgsKBnRlcnJvchC2FhIECAY4ARoFCNEEECQiBnRlcnJvchIaCggKA2FuZBC9FhICCAQaBQjLBBAKIgNhbmQSGAoHCgJieRDBFhICCAIaBQjLBBAMIgJieRIgCgsKBmFsbW9zdBDEFhICCAMaBQjWBBAEIgZhbG1vc3QSJgoOCglwZXJmZWN0bHkQyxYSAggDGgUI1wQQBCIJcGVyZmVjdGx5EiUKDwoKcHJldmVudGluZxDVFhICCAsaBQjUBBAjIgdwcmV2ZW50EhoKCAoDdGhlEOAWEgIIBRoFCNsEEBAiA3RoZRIcCgkKBGZyZWUQ5BYSAggBGgUI2wQQBSIEZnJlZRIWCgYKAS0Q6BYSAggKGgUI2wQQICIBLRIeCgkKBGZsb3cQ6RYSBAgGOAEaBQjXBBASIgRmbG93EhgKBwoCb2YQ7hYSAggCGgUI2wQQKyICb2YSIgoMCgdvdXRzaWRlEPEWEgIIARoFCN4EEAUiB291dHNpZGUSLAoQCgtpbmZvcm1hdGlvbhD5FhIECAY4ARoFCNwEECQiC2luZm9ybWF0aW9uEhYKBgoBLBCEFxICCAoaBQiKBBAgIgEsEhYKBgoBIhCFFxICCAoaBQiKBBAgIgEiEiAKBwoCaGUQhxcSCggIGAgoAjgBQAMaBQjiBBAcIgJoZRImCgoKBXNhaWQuEIoXEgoICzADOAFAA1gDGgUIigQQCyIFc2FpZC4SFgoGCgE8EI8XEgIIChoFCOUEECAiATwSFgoGCgEvEJAXEgIIDBoFCOUEECAiAS8SGAoGCgFwEJEXEgQIBjgBGgUI4gQQEiIBcBIWCgYKAT4QkhcSAggKGgUI5QQQICIBPhIWCgYKATwQkxcSAggKGgUI6AQQICIBPBIYCgYKAXAQlBcSBAgGOAEaBQjlBBAGIgFwEhYKBgoBPhCVFxICCAoaBQjoBBAgIgE+Eh4KCgoFV2hpbGUQlhcSAggCGgUI7gQQFiIFV2hpbGUSIgoKCgVUcnVtcBCcFxIGCAY4AUgBGgUI7gQQHCIFVHJ1bXASIwoICgNoYXMQohcSCggLMAM4AUADWAQaBQjuBBAIIgRoYXZlEiQKDQoIcmVjZW50bHkQphcSAggDGgUI7gQQBCIIcmVjZW50bHkSIAoLCgZkaWFsZWQQrxcSBAgLWAMaBQjiBBADIgRkaWFsEhYKBgoBLRC1FxICCAoaBQjuBBAgIgEtEhwKCQoEYmFjaxC2FxICCAkaBQjuBBAtIgRiYWNrEhoKCAoDdGhlELsXEgIIBRoFCPMEEBAiA3RoZRIkCg0KCHBlcnNvbmFsEL8XEgIIARoFCPMEEAUiCHBlcnNvbmFsEiMKDAoHaW5zdWx0cxDIFxIECAY4AhoFCO4EEBIiBmluc3VsdBIiCgwKB2FnYWluc3QQ0BcSAggCGgUI8wQQKyIHYWdhaW5zdBIaCggKA3RoZRDYFxICCAUaBQj2BBAQIgN0aGUSIgoLCgZsZWFkZXIQ3BcSBAgGOAEaBQj0BBAkIgZsZWFkZXISIAoHCgJoZRDjFxIKCAgYCCgCOAFAAxoFCPkEEBwiAmhlEhwKCQoEb25jZRDmFxICCAMaBQj5BBAEIgRvbmNlEiIKCwoGY2FsbGVkEOsXEgYICzADWAMaBQj2BBAwIgRjYWxsEhYKBgoBIhDyFxICCAoaBQj9BBAgIgEiEiQKCwoGTGl0dGxlEPMXEgYIBjgBSAEaBQj9BBAaIgZMaXR0bGUSJAoLCgZSb2NrZXQQ+hcSBggGOAFIARoFCP0EEBoiBlJvY2tldBIeCggKA01hbhCBGBIGCAY4AUgBGgUI+QQQDyIDTWFuEhYKBgoBLBCEGBICCAoaBQj9BBAgIgEsEhYKBgoBIhCFGBICCAoaBQj9BBAgIgEiEiIKCAoDaGlzEIcYEgoICBgFKAI4AUADGgUIggUQJSIDaGlzEiIKCgoFU3RhdGUQixgSBggGOAFIARoFCIIFEBoiBVN0YXRlEiwKDwoKRGVwYXJ0bWVudBCRGBIGCAY4AUgBGgUIhQUQHCIKRGVwYXJ0bWVudBIdCggKA2RpZBCcGBIGCAswA1gDGgUIhQUQCCICZG8SGgoICgNub3QQoBgSAggDGgUIhQUQGSIDbm90EhwKCQoEcHVsbBCkGBICCAsaBQj9BBAwIgRwdWxsEhoKCAoDYW55EKkYEgIIBRoFCIcFEBAiA2FueRIiCgwKB3B1bmNoZXMQrRgSBAgGOAIaBQiFBRASIgVwdW5jaBIYCgcKAmluELUYEgIIAhoFCIUFECsiAmluEhYKBgoBYRC4GBICCAUaBQiLBRAQIgFhEhoKCAoDbmV3ELoYEgIIARoFCIsFEAUiA25ldxIoCg4KCXN0YXRlbWVudBC+GBIECAY4ARoFCIgFECQiCXN0YXRlbWVudBIlCg8KCmNvbmRlbW5pbmcQyBgSAggLGgUIiwUQOyIHY29uZGVtbhIjCgwKB2RlY2FkZXMQ0xgSBAgGOAIaBQiMBRASIgZkZWNhZGUSGAoHCgJvZhDbGBICCAIaBQiNBRArIgJvZhIWCgYKASIQ3hgSAggKGgUIkwUQICIBIhImCg4KCWVncmVnaW91cxDfGBICCAEaBQiTBRAFIgllZ3JlZ2lvdXMSHgoKCgVodW1hbhDpGBICCAEaBQiSBRAFIgVodW1hbhIhCgsKBnJpZ2h0cxDvGBIECAY4AhoFCJMFEBoiBXJpZ2h0EikKDwoKdmlvbGF0aW9ucxD2GBIECAY4AhoFCI4FECQiCXZpb2xhdGlvbhIWCgYKASIQgBkSAggKGgUIkwUQICIBIhIkCg0KCHN1ZmZlcmVkEIIZEgQIC1gDGgUIkwUQOyIGc3VmZmVyEhgKBwoCYnkQixkSAggCGgUIlQUQKyICYnkSGgoICgN0aGUQjhkSAggFGgUImgUQECIDdGhlEiAKCgoFTm9ydGgQkhkSBAgBOAEaBQiZBRAFIgVOb3J0aBIiCgsKBktvcmVhbhCYGRIECAE4ARoFCJoFEAUiBktvcmVhbhIiCgsKBnBlb3BsZRCfGRIECAY4AhoFCJYFECQiBnBlcnNvbhIYCgcKAmF0EKYZEgIIAhoFCJUFECsiAmF0EhoKCAoDdGhlEKkZEgIIBRoFCJ0FEBAiA3RoZRIfCgoKBWhhbmRzEK0ZEgQIBjgCGgUImwUQJCIEaGFuZBIYCgcKAm9mELMZEgIIAhoFCJ0FECsiAm9mEiQKCgoFdGhlaXIQthkSCAgIGAU4AkADGgUIoQUQJSIFdGhlaXISGgoICgNvd24QvBkSAggBGgUIoQUQBSIDb3duEiwKEAoLZ292ZXJubWVudC4QwBkSBAgGOAEaBQieBRAkIgtnb3Zlcm5tZW50LhIWCgYKATwQyxkSAggKGgUIpAUQICIBPBIWCgYKAS8QzBkSAggMGgUIpAUQICIBLxIYCgYKAXAQzRkSBAgGOAEaBQiVBRAPIgFwEhYKBgoBPhDOGRICCAoaBQikBRAgIgE+EhYKBgoBPBDPGRICCAoaBQinBRAgIgE8EhgKBgoBcBDQGRIECAY4ARoFCKQFEA8iAXASFgoGCgE+ENEZEgIIChoFCKcFECAiAT4SFgoGCgEiENIZEgIIChoFCKQFECAiASISGgoICgNGb3IQ0xkSAggCGgUItQUQKyIDRm9yEhwKCQoEbW9yZRDXGRICCAEaBQitBRAEIgRtb3JlEhwKCQoEdGhhbhDcGRICCAIaBQitBRAEIgR0aGFuEhgKBwoCNjAQ4RkSAggHGgUIrgUQHiICNjASHwoKCgV5ZWFycxDkGRIECAY4AhoFCKoFECQiBHllYXISGgoICgN0aGUQ6hkSAggFGgUIsAUQECIDdGhlEiIKCwoGcGVvcGxlEO4ZEgQIBjgCGgUItQUQHCIGcGVyc29uEhgKBwoCb2YQ9RkSAggCGgUIsAUQKyICb2YSIgoKCgVOb3J0aBD4GRIGCAY4AUgBGgUIswUQGiIFTm9ydGgSIgoKCgVLb3JlYRD+GRIGCAY4AUgBGgUIsQUQJCIFS29yZWESIAoJCgRoYXZlEIQaEgYICzADWAQaBQi1BRAIIgRoYXZlEh8KCgoFZmFjZWQQiRoSBAgLWAMaBQikBRAPIgRmYWNlEiYKDgoJZWdyZWdpb3VzEI8aEgIIARoFCLkFEAUiCWVncmVnaW91cxIeCgoKBWh1bWFuEJkaEgIIARoFCLgFEAUiBWh1bWFuEiEKCwoGcmlnaHRzEJ8aEgQIBjgCGgUIuQUQGiIFcmlnaHQSKQoPCgp2aW9sYXRpb25zEKYaEgQIBjgCGgUItQUQEiIJdmlvbGF0aW9uEhgKBwoCaW4QsRoSAggCGgUIuQUQKyICaW4SJgoOCgl2aXJ0dWFsbHkQtBoSAggDGgUIvAUQBCIJdmlydHVhbGx5Eh4KCgoFZXZlcnkQvhoSAggFGgUIvQUQHiIFZXZlcnkSIgoLCgZhc3BlY3QQxBoSBAgGOAEaBQi6BRAkIgZhc3BlY3QSGAoHCgJvZhDLGhICCAIaBQi9BRArIgJvZhIeCgkKBGxpZmUQzhoSBAgGOAEaBQi+BRAkIgRsaWZlEhYKBgoBLBDSGhICCAoaBQjKBRAgIgEsEhYKBgoBIhDTGhICCAoaBQjKBRAgIgEiEhoKCAoDdGhlENUaEgIIBRoFCMMFEBAiA3RoZRIoCg4KCXN0YXRlbWVudBDZGhIECAY4ARoFCMoFEBwiCXN0YXRlbWVudBIcCgkKBGZyb20Q4xoSAggCGgUIwwUQKyIEZnJvbRIiCgoKBVN0YXRlEOgaEgYIBjgBSAEaBQjGBRAaIgVTdGF0ZRIsCg8KCkRlcGFydG1lbnQQ7hoSBggGOAFIARoFCMcFEBoiCkRlcGFydG1lbnQSLgoRCgxzcG9rZXNwZXJzb24Q+RoSBAgGOAEaBQjJBRAaIgxzcG9rZXNwZXJzb24SJgoMCgdIZWF0aGVyEIYbEgYIBjgBSAEaBQjJBRAaIgdIZWF0aGVyEiQKCwoGTmF1ZXJ0EI4bEgYIBjgBSAEaBQjEBRAkIgZOYXVlcnQSHwoJCgRzYWlkEJUbEgYICzADWAMaBQjKBRA2IgNzYXkSFgoGCgEuEJkbEgIIChoFCMoFECAiAS4SFgoGCgE8EJwbEgIIChoFCM4FECAiATwSFgoGCgEvEJ0bEgIIDBoFCM4FECAiAS8SGAoGCgFwEJ4bEgQIBjgBGgUIzgUQNiIBcBIWCgYKAT4QnxsSAggKGgUIzgUQICIBPhr+AQoMRG9uYWxkIFRydW1wEAcaEAoDbWlkEgkvbS8wY3F0OTAaOwoNd2lraXBlZGlhX3VybBIqaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRG9uYWxkX1RydW1wJcMrvz4qDQoJCgVUcnVtcBAwEAEqFQoRCgxEb25hbGQgVHJ1bXAQpQIQASoSCg4KCVByZXNpZGVudBCbAhACKg4KCgoFVHJ1bXAQ8woQASoOCgoKBVRydW1wENUGEAEqDgoKCgVUcnVtcBDKBxABKg4KCgoFVHJ1bXAQvA8QASoOCgoKBVRydW1wEJwXEAEqDgoKCgVUcnVtcBD2CxABGukBCgtLaW0gSm9uZyBVbhABGhAKA21pZBIJL20vMGZndzE5GjoKDXdpa2lwZWRpYV91cmwSKWh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0tpbV9Kb25nLXVuJf56Cz4qCwoHCgNLaW0QPBABKhQKEAoLS2ltIEpvbmcgVW4QwwIQASoRCg0KCGRpY3RhdG9yELoCEAIqDAoICgNLaW0Q3wYQASoMCggKA0tpbRDeBxABKgwKCAoDS2ltEOcPEAEqFAoQCgtLaW0gSm9uZyBVbhDHExABKg8KCwoGZmF0aGVyENgTEAIaMgoPYWRtaW5pc3RyYXRpb25zEAMlhgh0PSoYChQKD2FkbWluaXN0cmF0aW9ucxDtCRACGt0CCgxOb3J0aCBLb3JlYW4QAhoPCgNtaWQSCC9tLzA1YjdxGjoKDXdpa2lwZWRpYV91cmwSKWh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL05vcnRoX0tvcmVhJf87Pz0qFAoQCgxOb3J0aCBLb3JlYW4QFhABKhUKEQoMTm9ydGggS29yZWFuEJULEAEqFQoRCgxOb3J0aCBLb3JlYW4Q/RIQASoVChEKDE5vcnRoIEtvcmVhbhD1FBABKhUKEQoMTm9ydGggS29yZWFuEOkVEAEqFQoRCgxOb3J0aCBLb3JlYW4QkhkQASoUChAKC05vcnRoIEtvcmVhEIYBEAEqFAoQCgtOb3J0aCBLb3JlYRCACRABKhQKEAoLTm9ydGggS29yZWEQ+BkQASoWChIKDU5vcnRoIEtvcmVhbnMQvwQQASoWChIKDU5vcnRoIEtvcmVhbnMQ9xEQARrtAQoTVVMgU3RhdGUgRGVwYXJ0bWVudBADGg8KA21pZBIIL20vMDd2c2waUAoNd2lraXBlZGlhX3VybBI/aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVW5pdGVkX1N0YXRlc19EZXBhcnRtZW50X29mX1N0YXRlJX6LEj0qGwoXChNVUyBTdGF0ZSBEZXBhcnRtZW50EFYQASoZChUKEFN0YXRlIERlcGFydG1lbnQQww4QASoZChUKEFN0YXRlIERlcGFydG1lbnQQ6BoQASoZChUKEFN0YXRlIERlcGFydG1lbnQQixgQARofCgZyZWJ1a2UQByVmeKQ8Kg4KCgoGcmVidWtlEHwQAhooCgppbnRlbnRpb25zEAcl1pWhPCoTCg8KCmludGVudGlvbnMQ3QIQAhoeCgV3b3JsZBACJWUfkzwqDgoKCgV3b3JsZBCEAhACGioKC2dvdmVybm1lbnRzEAMlZR+TPCoUChAKC2dvdmVybm1lbnRzEPEBEAIaHwoGcmVnaW1lEAclfxmJPCoOCgoKBnJlZ2ltZRAjEAIaIAoGcmVnaW1lEAclfxmJPCoPCgsKBnJlZ2ltZRDCARACGiIKB2xlYWRlcnMQASWiVXo8KhAKDAoHbGVhZGVycxCiAxACGioKC2luZGl2aWR1YWxzEAEl9el3PCoUChAKC2luZGl2aWR1YWxzENYDEAIaGgoDb25lEAclDyZcPCoMCggKA29uZRDKARACGjoKE2h1bWFuIHJpZ2h0cyByZWNvcmQQByUPJlw8KhwKGAoTaHVtYW4gcmlnaHRzIHJlY29yZBCUARACGjcKCWxhd21ha2VycxABJeDKETwqEgoOCglsYXdtYWtlcnMQuBMQAioPCgsKBnJ1bGVycxDFFBACGjYKCGVsZXBoYW50EAclC1jrOyoQCgwKB2hpc3RvcnkQtAsQAioRCg0KCGVsZXBoYW50EN4LEAIaLgoFd29ybGQQAiV8Juk7Kg4KCgoFd29ybGQQshIQAioOCgoKBXdvcmxkEJ4VEAIaSQoOYWNjb3VudGFiaWxpdHkQByUujb87KhcKEwoOYWNjb3VudGFiaWxpdHkQ/Q0QAioXChMKDmFjY291bnRhYmlsaXR5EJYPEAIagQEKAlVTEAIaEAoDbWlkEgkvbS8wOWM3dzAaPAoNd2lraXBlZGlhX3VybBIraHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVW5pdGVkX1N0YXRlcyUFaq07KgoKBgoCVVMQAxABKgsKBwoCVVMQ/w4QASoLCgcKAlVTELUTEAEaJAoIcG9zaXRpb24QByVZA6c7KhEKDQoIcG9zaXRpb24QpAoQAhqqAQoOSGVhdGhlciBOYXVlcnQQARoRCgNtaWQSCi9tLzAzYzRqMjkaPQoNd2lraXBlZGlhX3VybBIsaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSGVhdGhlcl9OYXVlcnQlLoWQOyoPCgsKBk5hdWVydBC6EhABKhcKEwoOSGVhdGhlciBOYXVlcnQQhhsQASoVChEKDHNwb2tlc3BlcnNvbhD5GhACGpIBCgxUaGFlIFlvbmctaG8QARoUCgNtaWQSDS9nLzExYzFuNm40aF8aOwoNd2lraXBlZGlhX3VybBIqaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVGhhZV9Zb25nLWhvJbYSczsqFQoRCgxUaGFlIFlvbmctaG8Q2RIQASoRCg0KCG9mZmljaWFsEIoTEAIaIgoHY291bnRyeRACJdkfZjsqEAoMCgdjb3VudHJ5ELIQEAIaKAoKZ292ZXJubWVudBADJbSHVzsqEwoPCgpnb3Zlcm5tZW50EI0FEAIaLAoMcHJpc29uIGNhbXBzEAIlmhE3OyoVChEKDHByaXNvbiBjYW1wcxCxBBACGjAKDmFkbWluaXN0cmF0aW9uEAMl9oM1OyoXChMKDmFkbWluaXN0cmF0aW9uEIoGEAIaJAoIZnJlZWRvbXMQByWN0CA7KhEKDQoIZnJlZWRvbXMQ+wQQAhokCghhZGRpdGlvbhAHJY3QIDsqEQoNCghhZGRpdGlvbhC2AxACGiAKBmRlbmlhbBAHJY3QIDsqDwoLCgZkZW5pYWwQ5QQQAhowCg5mYW1pbHkgbWVtYmVycxABJY3QIDsqFwoTCg5mYW1pbHkgbWVtYmVycxD6AxACGioKC2Vudmlyb25tZW50EAcl0AMgOyoUChAKC2Vudmlyb25tZW50EL4FEAIaJAoIb3B0aW1pc20QByUqcx87KhEKDQoIb3B0aW1pc20QyQYQAhocCgR0b25lEAclKnMfOyoNCgkKBHRvbmUQuAYQAhomCglzdGF0ZW1lbnQQBSWDGxU7KhIKDgoJc3RhdGVtZW50EKgOEAIaKAoKZ292ZXJubWVudBADJdyUETsqEwoPCgpnb3Zlcm5tZW50EKILEAIaIAoGcmVnaW1lEAclm+0HOyoPCgsKBnJlZ2ltZRDBChACGh4KBXdvcmxkEAIlbs0EOyoOCgoKBXdvcmxkEM0QEAIaHgoFc3RlcHMQByWVrfg6Kg4KCgoFc3RlcHMQrQwQAhogCgZmYXRoZXIQASUB9vc6Kg8KCwoGZmF0aGVyENYKEAIaKgoLZ3JhbmRmYXRoZXIQASUB9vc6KhQKEAoLZ3JhbmRmYXRoZXIQ3goQAhoiCgdtZWV0aW5nEAQl7+30OioQCgwKB21lZXRpbmcQgQgQAhooCgppbnRlbnRpb25zEAcl7+30OioTCg8KCmludGVudGlvbnMQ5AcQAhoiCgdlZmZvcnRzEAcl7+30OioQCgwKB2VmZm9ydHMQ8wgQAhoaCgM8L3AQByUXxuk6KgwKCAoDPC9wEMsZEAIaNgoRcHJlc3N1cmUgY2FtcGFpZ24QByXt8OE6KhoKFgoRcHJlc3N1cmUgY2FtcGFpZ24QzA0QAhocCgRtZWV0EAQl/JHhOioNCgkKBG1lZXQQgRAQAhoaCgNzb24QASULzdk6KgwKCAoDc29uEO0KEAIaNAoQbWlzc2lsZSBwcm9ncmFtcxAHJS402ToqGQoVChBtaXNzaWxlIHByb2dyYW1zENYMEAIaHAoEcm9vbRACJS402ToqDQoJCgRyb29tEO4LEAIaJgoJcHJhY3RpY2VzEAclLjTZOioSCg4KCXByYWN0aWNlcxDHCxACGiAKBnBlb3BsZRABJfDM2DoqDwoLCgZwZW9wbGUQ7hkQAhogCgZhYnVzZXMQByWXt9g6Kg8KCwoGYWJ1c2VzEKkNEAIaIAoGdGFuZGVtEAcleU7YOioPCgsKBnRhbmRlbRC0DRACGiAKBnN1bW1pdBAEJUEj1zoqDwoLCgZzdW1taXQQnQcQAhomCglvY2Nhc2lvbnMQBCVBI9c6KhIKDgoJb2NjYXNpb25zEJcJEAIaJAoIY2hpbGRyZW4QASW5U9Y6KhEKDQoIY2hpbGRyZW4Q7QMQAhocCgRyZXN0EAElcyHGOioNCgkKBHJlc3QQwRAQAhokCghjb25jZXJucxAHJXMhxjoqEQoNCghjb25jZXJucxDZDxACGiYKCWZyZWUtZmxvdxAHJWx+tjoqEgoOCglmcmVlLWZsb3cQ5BYQAhogCgZsZWFkZXIQASUygak6Kg8KCwoGbGVhZGVyENwXEAIaKgoLaW5mb3JtYXRpb24QByUygak6KhQKEAoLaW5mb3JtYXRpb24Q+RYQAhogCgZzeXN0ZW0QByUygak6Kg8KCwoGc3lzdGVtEPYVEAIaIgoHY291bnRyeRACJTKBqToqEAoMCgdjb3VudHJ5ELkVEAIaMgoPd2VsZmFyZSBzeXN0ZW0uEAclMoGpOioYChQKD3dlbGZhcmUgc3lzdGVtLhDDFRACGiYKCXN0YXRlbWVudBAFJfKYqDoqEgoOCglzdGF0ZW1lbnQQvhgQAhomCglzdGF0ZW1lbnQQBSW0mJw6KhIKDgoJc3RhdGVtZW50ENkaEAIaHgoFcG93ZXIQByUo4ZQ6Kg4KCgoFcG93ZXIQ3RQQAhoiCgdpbnN1bHRzEAclKOGUOioQCgwKB2luc3VsdHMQyBcQAhogCgZ0ZXJyb3IQByUo4ZQ6Kg8KCwoGdGVycm9yELYWEAIaHgoFcmVpZ24QByUo4ZQ6Kg4KCgoFcmVpZ24QrRYQAhooCgpwb3B1bGF0aW9uEAElKOGUOioTCg8KCnBvcHVsYXRpb24QghUQAhooCgpwZXJjZXB0aW9uEAclKOGUOioTCg8KCnBlcmNlcHRpb24QpRQQAhqNAQoLS2ltIElsIFN1bmcQARoPCgNtaWQSCC9tLzA0YmJqGjoKDXdpa2lwZWRpYV91cmwSKWh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0tpbV9JbC1zdW5nJcGqkjoqFAoQCgtLaW0gSWwgU3VuZxD7ExABKhQKEAoLZ3JhbmRmYXRoZXIQ7xMQAhpxCglQeW9uZ3lhbmcQAhoPCgNtaWQSCC9tLzBjdzVrGjgKDXdpa2lwZWRpYV91cmwSJ2h0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1B5b25neWFuZyUUXoA6KhIKDgoJUHlvbmd5YW5nEJIMEAEaQgoXaHVtYW4gcmlnaHRzIHZpb2xhdGlvbnMQByVePm06KiAKHAoXaHVtYW4gcmlnaHRzIHZpb2xhdGlvbnMQmRoQAhogCgZwZW9wbGUQASVePm06Kg8KCwoGcGVvcGxlEJ8ZEAIaQgoXaHVtYW4gcmlnaHRzIHZpb2xhdGlvbnMQByVePm06KiAKHAoXaHVtYW4gcmlnaHRzIHZpb2xhdGlvbnMQ6RgQAhoeCgVzdGF0ZRACJeN/UzoqDgoKCgVzdGF0ZRDdERACGhwKBGxpZmUQByVtXlA6Kg0KCQoEbGlmZRDOGhACGh4KBWhhbmRzEAclbV5QOioOCgoKBWhhbmRzEK0ZEAIaIAoGYXNwZWN0EAclbV5QOioPCgsKBmFzcGVjdBDEGhACGiIKB3B1bmNoZXMQByVtXlA6KhAKDAoHcHVuY2hlcxCtGBACGioKC2luZm9ybWF0aW9uEAclmMoUOioUChAKC2luZm9ybWF0aW9uEKoREAIaHAoEZmxvdxAHJZjKFDoqDQoJCgRmbG93EJYREAIaIgoHZWZmb3J0cxAHJZjKFDoqEAoMCgdlZmZvcnRzEP4QEAIaIgoHcGljdHVyZRAFJZutAjoqEAoMCgdwaWN0dXJlEJsSEAIaNgoRTGl0dGxlIFJvY2tldCBNYW4QASV4OvY5KhoKFgoRTGl0dGxlIFJvY2tldCBNYW4Q8xcQARp3CgtTb3V0aCBLb3JlYRACGg8KA21pZBIIL20vMDZxZDMaOgoNd2lraXBlZGlhX3VybBIpaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvU291dGhfS29yZWEl007mOSoUChAKC1NvdXRoIEtvcmVhEKMTEAEaeAoLS2ltIEpvbmcgSWwQARoQCgNtaWQSCS9tLzAxNDN5NRo6Cg13aWtpcGVkaWFfdXJsEilodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9LaW1fSm9uZy1pbCUIlq85KhQKEAoLS2ltIEpvbmcgSWwQ3xMQASIKFWZmxkAdAAAAvyoCZW5xBHNiLg=='
 </annotations>
</document>
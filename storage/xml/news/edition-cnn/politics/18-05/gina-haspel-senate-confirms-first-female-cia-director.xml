<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Jeremy Herb and Daniella Diaz, ('Edition CNN',)
 </author>
 <date>
  2018-05-17T19:59:17+00:00
 </date>
 <article>
<t>
 Gina Haspel: Senate confirms first female CIA director
</t>
<d>
 Gina Haspel was confirmed Thursday to be the first female director of the CIA with the help of votes from a half-dozen Senate Democrats.
</d>
<p>
 Most of the Democratic votes in favor of Haspel came from senators who are up for re-election in November in states that Trump won in 2016, including Sens. Joe Manchin of West Virginia, Joe Donnelly of Indiana, Heidi Heitkamp of North Dakota and Bill Nelson of Florida.
</p>
<p>
 Sen. Jeanne Shaheen of New Hampshire also voted in favor of Haspel's confirmation.
</p>
<p>
 Democrats who backed Haspel pointed to her 33-year CIA career, 32 years of which was spent undercover, as well as her broad support from former intelligence officials, including many senior Obama administration officials.
</p>
<p>
 "Gina Haspel is among one of the most qualified people to be nominated to be director of the CIA," Warner said. "I feel safer knowing the CIA has Miss Haspel at the helm. ... I believe Gina Haspel should be confirmed. I look forward to supporting her."
</p>
<p>
 But Haspel faced a barrage of criticism from some Democrats and human rights groups after she was picked in March to succeed Mike Pompeo as the nation's top spy, over her role in the George W. Bush administration's detention and interrogation program.
</p>
<p>
 The criticism came on two fronts: Haspel ran a CIA black site in Thailand in 2002 where detainees were brutally interrogated with tactics that critics say is torture. And she drafted the cable that her boss sent to destroy dozens of CIA interrogation tapes in 2005.
</p>
<p>
 "What I can say is her classified comments about her background have been as troubling as her public testimony," Democratic Sen. Ron Wyden of Oregon, a member of the Senate Intelligence Committee, said on the Senate floor Thursday.
</p>
<p>
 The attacks on Haspel's record made Trump administration officials nervous about her nomination, especially after Paul announced his opposition, which meant Democrats had the ability to block Haspel's confirmation.
</p>
<p>
 But the White House pushed forward on Haspel, and in her confirmation hearing last week she did enough to secure votes from Democrats who were on the fence, even as she repeatedly danced around questions about whether she thought the Bush-era interrogation program was immoral.
</p>
<p>
 Senate Intelligence Chairman Richard Burr, a North Carolina Republican, said that Haspel has "consistently proven herself as a strong leader" on the Senate floor Thursday.
</p>
<p>
 Haspel's critics argued she still wouldn't say if she thought the interrogation program was immoral. And they expressed frustration that the CIA -- and Haspel herself -- refused to make public a full accounting of her CIA career and her role in the interrogation program.
</p>
<p>
 They argued that the CIA selectively released details publicly about Haspel's career -- like the 2011 internal CIA report that cleared her of wrongdoing in the tapes' destruction -- in order to bolster her nomination.
</p>
<p>
 The CIA did make classified materials about Haspel's record available to senators. But several of her opponents pointed to the fact that the Justice Department's report from the special counsel who investigated the destruction of the tapes was available only to senators on the Senate Intelligence Committee, and not the full body.
</p>
<p>
 "My questions about Ms. Haspel's role in the destruction of videotapes relevant to discussions occurring in Congress regarding the program have not been adequately answered," Flake said in a statement announcing his opposition.
</p>
<p>
 Burr, who argued that the report shouldn't have been made available to the Senate at all, said the CIA declassified everything that it was able to.
</p>
<p>
 "She has earned the respect of the agency workforce, of her peers, of Republicans, of Democrats, of military officers, of civilian security leaders, evidenced by the number of letters received in support of her nomination too numerous to read," Burr said on the Senate floor.
</p>
<p>
 Three Republicans opposed Haspel's nomination: Sens. Rand Paul of Kentucky, Jeff Flake of Arizona and John McCain of Arizona, although McCain did not vote because he's battling brain cancer at home.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
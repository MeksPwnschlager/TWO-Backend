<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Eric Bradner, ('Edition CNN',)
 </author>
 <date>
  2018-05-21T17:02:08+00:00
 </date>
 <article>
<t>
 Democratic House primary in Kentucky pits openly gay mayor against female fighter pilot
</t>
<d>
 Lexington Mayor Jim Gray was one of the first openly gay Kentuckians elected to public office. He spent the majority of his career turning a family construction business into a global firm. And he says Nancy Pelosi needs to go as the House Democratic leader.
</d>
<p>
 Unlike the day's other major House contest, a runoff in Houston, the Democratic Congressional Campaign Committee hasn't officially backed a candidate. And unlike the Democratic primary in the Georgia governor's race, there is no progressive-against-moderate matchup.
</p>
<p>
 "It's not really the issues. We agree on most issues," McGrath said in an interview Sunday. Instead, she said, the question for voters is which candidate is right for the current moment in American politics.
</p>
<p>
 Whoever wins the primary Tuesday will take on Republican Rep. Andy Barr for a central Kentucky seat that Democrats believe is winnable in November.
</p>
<p>
 For years, Gray has been the Democrats' dream recruit against Barr: an accomplished politician and businessman who, during a failed 2016 Senate run against Rand Paul, defeated Paul in the Republican-leaning 6th district. He is also Lexington's first openly gay mayor. And he touts his history as a reformer in city government.
</p>
<p>
 But that track record has run up against Democratic backlash to President Donald Trump, which has led to record numbers of women seeking public office and placed a premium on political newcomers.
</p>
<p>
 McGrath drew national attention and became a darling of the progressive anti-Trump resistance when she launched her campaign last year with a powerful video highlighting the roadblocks politicians placed in front of her efforts to become a combat pilot.
</p>
<p>
 McGrath said Sunday that Gray is a "sort of standard politician. He's a good guy and he's a good public servant. There's a sense of, he's not right, right now. There's a sense that we need somebody different."
</p>
<p>
 "It's more, this time, this climate, right now," she said. "It's very clear that people are looking for more women. It's very clear that people are really interested in candidates who aren't necessarily -- that didn't grow up within the political party."
</p>
<p>
 Gray, meanwhile, argues that casting him as a figure of the Democratic establishment is inaccurate.
</p>
<p>
 "Anybody who's lived here for more than 15 minutes knows that I'm nowhere close to establishment," Gray said in an interview Sunday evening.
</p>
<p>
 The reference to time spent in the district was likely intentional. Just days before the primary, Gray launched his first negative TV ad attacking McGrath.
</p>
<p>
 The ad praises her military service but notes that she just moved to the district last year and had never lived there before.
</p>
<p>
 California Rep. Ted Lieu weighed in with criticism of Gray's ad. The Democratic group VoteVets called it a "swiftboat" attack, a reference to criticism of John Kerry's service in Vietnam during the 2004 presidential campaign.
</p>
<p>
 Gray argued that he too represents a clean break from the Washington status quo.
</p>
<p>
 "I've run against the grain on many issues -- reform issues in city government and taking really bold steps like relocating Confederate statues on the day that Charlottesville occurred," he said. "I didn't want Lexington to be the next Charlottesville -- I wasn't going to let it happen. That represents running against the grain."
</p>
<p>
 But he also argued that voters should value a political resume like his, saying that electing novices led to Trump's presidency.
</p>
<p>
 "You can knock experience all day long, but at the end of the day, experience matters in public service just like it does in anything else. And I think we're seeing it at the very top of the system," he said.
</p>
<p>
 Gray was a prized DCCC recruit. But the national party has not weighed in with any sort of official endorsement, such a placing either candidate in its "Red to Blue" program. And Democratic operatives working on House races are divided on whether Gray or McGrath would make a better general election candidate.
</p>
<p>
 McGrath is backed by several national figures herself. Massachusetts Rep. Seth Moulton has raised money for her campaign. New York Sen. Kirsten Gillibrand was an early backer. And Illinois Rep. Cheri Bustos -- a member of House Democratic leadership -- has donated to McGrath through her PAC.
</p>
<p>
 McGrath complained that after recruiting Gray into the race after she had already entered, the DCCC has effectively cut off her access to some Democratic fundraising sources before the primary.
</p>
<p>
 But, asked about the future of Pelosi, she was more supportive of the longtime House Democratic leader than Gray.
</p>
<p>
 McGrath said she's "not going to sit here and say that everybody needs to go," even though "in the House, we need a new generation" of leaders.
</p>
<p>
 "It isn't prudent for me to stand here and say, 'I'm going to vote for her or not vote for her, because I don't know who she's running against.' Let's see, A, is she running, and B, who is running against her," McGrath said.
</p>
<p>
 Gray, meanwhile, said of Pelosi: "I've said it's time for change and time for Nancy Pelosi to step aside and for someone new to emerge in this role."
</p>
<p>
 McGrath and Gray both said they see the race as competitive in the closing days.
</p>
<p>
 "There's certainly a sense for change," Gray said.
</p>
<p>
 Yet in a closely watched House primary in Kentucky, he's being cast by his opponent as a figure of the Democratic establishment.
</p>
<p>
 Tuesday's contest, with Gray facing former Marine combat pilot Amy McGrath, defies the typical dynamics of Democratic primaries.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
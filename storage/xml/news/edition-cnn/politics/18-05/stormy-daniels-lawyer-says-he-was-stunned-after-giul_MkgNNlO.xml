<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Veronica Stracqualursi, ('Edition CNN',)
 </author>
 <date>
  2018-05-03T13:27:57+00:00
 </date>
 <article>
<t>
 Stormy Daniels' lawyer says he was 'stunned' after Giuliani bombshell
</t>
<d>
 The lawyer for adult film star Stormy Daniels said Thursday he was "stunned" after hearing Rudy Giuliani reveal that President Donald Trump had reimbursed his personal lawyer Michael Cohen for the $130,000 payment to Daniels.
</d>
<p>
 "I think it's very likely there's criminal liability associated with how this repayment was structured, relating to what was disclosed from a campaign finance perspective," Avenatti said.
</p>
<p>
 Avenatti said that there would be a violation of campaign finance laws if Trump and Cohen structured the payment "in a way to avoid detection or in an effort to make it appear to be something that it was not, namely, a retainer payment as opposed to $130,000 reimbursement, that may involve money laundering depending on how it was handled."
</p>
<p>
 "There also may be tax issues relating to the deductibility of those expenses. If they were deducted as legal expenses for tax purposes when in reality it had nothing to do with legal services rendered, but instead was the reimbursement of the $130,000, that too is going to be a problem," he said.
</p>
<p>
 Avenatti told CNN that he thought it was "obvious" that Trump "did not write either one of those tweets," but that the tweets "create additional significant liability for the President."
</p>
<p>
 "I was stunned. I was speechless," Michael Avenatti said in an interview on CNN's "New Day."
</p>
<p>
 Avenatti knocked Giuliani's assertion that no campaign funds were used for the payment, therefore there's no campaign finance violation: "That's not how the law works," he said.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
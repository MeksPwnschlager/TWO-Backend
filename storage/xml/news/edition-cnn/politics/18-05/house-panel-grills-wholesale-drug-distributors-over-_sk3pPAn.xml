<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Maegan Vazquez, ('Edition CNN',)
 </author>
 <date>
  2018-05-08T19:13:58+00:00
 </date>
 <article>
<t>
 House panel grills wholesale drug distributors over West Virginia opioid 'pill dumping'
</t>
<d>
 Republican and Democratic House members on Tuesday grilled wholesale drug distributors during a House panel hearing investigating opioid "pill dumping" in West Virginia.
</d>
<p>
 The hearing came on the one-year anniversary of the start of an investigation into "pill dumping" at pharmacies in West Virginia. Pharmaceutical distributors sent more than 780 million hydrocodone and oxycodone pills to the state between 2007 and 2012, equating to 433 pills for every resident. At one pharmacy in the 400-person town of Kermit, West Virginia, distributors sent nearly 9 million pills over a two-year period.
</p>
<p>
 Tuesday's hearing came a day ahead of the committee's expected markup of dozens of opioid-related bills.
</p>
<p>
 In the packed hearing room, members of both parties pressed the companies over their roles in failing to alert the Drug Enforcement Administration of suspiciously high-volume orders of opioids to pharmacies in West Virginia.
</p>
<p>
 "It's difficult not to be troubled by the compliance efforts of our nation's distributors," Energy and Commerce Committee Chairman Greg Walden, an Oregon Republican, said in opening remarks.
</p>
<p>
 "How many other communities across the country have received millions more opioids than their communities could reasonably sustain?" Harper asked. "How many other times did a distributor miss the red flags of their own distribution -- let alone what could be found with due diligence?"
</p>
<p>
 New Jersey's Rep. Frank Pallone, the top Democrat on the committee, said that despite the Justice Department's fining of distributors for system failures on suspicious orders who had "promised to clean up their act," "a few years later, they were again hit with multimillion-dollar fines for the very same shortcomings."
</p>
<p>
 All the company heads said changes had been made to their distribution systems to flag suspicious orders, and nearly all the witnesses said the overconsumption of legal opioids was a solvable problem.
</p>
<p>
 Barrett said he was "deeply sorry" on behalf of Cardinal Health over the West Virginia incidents.
</p>
<p>
 "To the people of West Virginia, I want to express my personal regret for judgments that we'd make differently today with regard to two pharmacies that have been the particular focus of the subcommittee," he said. "With the benefit of hindsight, I wish we would have moved faster and asked a different set of questions."
</p>
<p>
 Near the end of the hearing, Rep. David McKinley, a West Virginia Republican who does not sit on the panel but was able to join as a member of the larger committee that oversees it, paid a visit to voice his frustration over the drug distributor heads' mixed responses on whether their companies played a role in facilitating the crisis in his home state.
</p>
<p>
 "The fury inside me right now is bubbling over with how we're going to address this problem," McKinley said. "And for several of you to say you had no role whatsoever in this I find particularly offensive."
</p>
<p>
 He added that West Virginians had died because of the companies' "lack of attention on your algorithm and your core operation. And deflecting responsibility, saying, 'I just had to fill the order' -- no, you had a role. You had a role."
</p>
<p>
 "I just want you to feel shame in your roles, respectively, in all this," he continued. "I  am so frustrated for the people of West Virginia and this country that you all have not stepped up and took more responsibility for this."
</p>
<p>
 <em>
  CLARIFICATION: This story has been updated to accurately describe McKinley's committee membership status and participation in the hearing.
 </em>
</p>
<p>
 House Energy and Commerce's Oversight and Investigation Subcommittee chairman, Gregg Harper, a Mississippi Republican, asked the heads of McKesson Corp., Cardinal Health, AmerisourceBergen, Miami-Luken and Smith Wholesale whether they or their companies contributed to the opioid crisis.
</p>
<p>
 Dr. Joseph Mastandrea, chairman of the board of Miami-Luken, said yes. The remaining witnesses -- John Hammergren, chairman, president and CEO of the McKesson Corp., George Barrett, executive chairman of the board of Cardinal Health, Steven Collis, the chairman, president and CEO of AmerisourceBergen, and J. Christopher Smith, the former president and CEO of H.D. Smith Wholesale Drug Co. -- all said no.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
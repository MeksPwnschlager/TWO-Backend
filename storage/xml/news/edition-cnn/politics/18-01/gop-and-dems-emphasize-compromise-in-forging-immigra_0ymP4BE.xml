<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Maegan Vazquez, ('Edition CNN',)
 </author>
 <date>
  2018-01-28T17:24:04+00:00
 </date>
 <article>
<t>
 GOP and Dems emphasize compromise in forging immigration deal
</t>
<d>
 Members of both political parties are emphasizing a need for compromise on immigration negotiations, amid pressure to reach a deal on the Deferred Action for Childhood Arrivals program.
</d>
<p>
 "I think all of us realize that it's going to take compromise on this issue for us to get something done and to protect the Dreamer population, which is certainly a goal of mine," Collins said. "But I think the President is also right about border security, that we do need to beef up our border security."
</p>
<p>
 Sen. Lindsey Graham, R-South Carolina, a member of the coalition, called the White House framework a "breakthrough" and a "credible proposal."
</p>
<p>
 "We're not going to see a government shutdown. The one good thing that came from this mess last week is we're now focused on immigration. I think without the dust-up, we wouldn't have a commitment to move toward on February 8. We really have until March 5," he told ABC's "This Week."
</p>
<p>
 However, "you don't need $25 billion for a wall," Graham argued.
</p>
<p>
 "You need wall systems. You need roads. You need redundancy. You need to fix old fencing. So we're not going to build a 1,900-mile wall, but $25 billion can be spent wisely, 'cause the gang of eight bill spent $42 billion to secure the border," he said.
</p>
<p>
 House Majority Whip Kevin McCarthy said there's "urgency" to wrap up an immigration deal.
</p>
<p>
 Sen. Joe Manchin, D-West Virginia, also said there would not be another shutdown over immigration.
</p>
<p>
 "There's no way that anyone should be considering any more of a government shutdown, even talking the nonsense of a shutdown," Manchin said.
</p>
<p>
 Manchin responded: "You know what, we don't need that type of rhetoric on either side, from Nancy, Paul Ryan, or anybody else."
</p>
<p>
 White House Legislative Affairs Director Marc Short told CBS's "Face the Nation" that Schumer and Pelosi "clearly have a radical left base that is putting pressure on them" on immigration.
</p>
<p>
 Independent Sen. Bernie Sanders of Vermont, who caucuses with Democrats, said on "Face the Nation" that he also has "serious concerns" about the proposal.
</p>
<p>
 "For my mind, and I speak only for myself, where the bad part comes is the idea of a wall, which I thought was a great idea in the 15th century," he said.
</p>
<p>
 The President, meanwhile, continues to blame Democrats for an immigration deal delay.
</p>
<p>
 The calls for compromise follow the White House's proposed immigration framework, which would give 1.8 million undocumented immigrants a pathway to citizenship. In exchange, the White House wants $25 billion for border infrastructure and technology, more funds for personnel, and an end to family migration beyond spouses and minor children.
</p>
<p>
 Sen. Susan Collins, R-Maine, told CNN's "State of the Union" that the so-called "common sense coalition" (a bipartisan group of senators who helped end the government shutdown earlier this month) will be meeting this week to discuss an immigration deal.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
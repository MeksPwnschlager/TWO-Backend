<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  MJ Lee National Politics Reporter, ('Edition CNN',)
 </author>
 <date>
  2018-01-03T17:27:57+00:00
 </date>
 <article>
<t>
 Two senators sworn into office amid #MeToo movement
</t>
<d>
 Two senators who were newly sworn into office Wednesday -- Doug Jones of Alabama and Tina Smith of Minnesota -- have one thing in common.
</d>
<p>
 Gloria Allred, the high-profile lawyer who represented one of Moore's accusers and a slew of other women who have made allegations against powerful men, including President Donald Trump, told CNN in a phone interview Wednesday that "there's no more business as usual when it comes to sexual harassment."
</p>
<p>
 "Women speaking out had an impact on institutional change and in the court of public opinion and it has created a climate in which sexual harassment is unacceptable. And it has caused change," Allred said. "Were it not for this movement building, Al Franken would never have had to step down and I think that Roy Moore would have been elected. So it has had an impact in the halls of power."
</p>
<p>
 Smith and Jones come to Washington at a moment when the nation's capital is being rocked by the #MeToo movement that has swept the country.
</p>
<p>
 The movement appears to have arrived on Capitol Hill, too. Over the past few months, lawmakers have called for an overhaul of the way sexual harassment complaints are handled and processed on Capitol Hill, and drawn attention to what many say is a pervasive culture of sexism and coercive workplace environment in Congress.
</p>
<p>
 Over the past month, multiple male lawmakers have left office after facing sexual harassment accusations -- Franken, as well as Rep. John Conyers, a Michigan Democrat, and Rep. Trent Franks, an Arizona Republican.
</p>
<p>
 Two additional congressmen -- Ruben Kihuen, a Nevada Democrat, and Blake Farenthold, a Texas Republican -- are currently under House Ethics Committee investigations for allegations of sexual harassment. Both have said they will not seek re-election this year, but are opting to finish out their current terms.
</p>
<p>
 Franken announced last month that he would leave office after multiple women said he had inappropriately touched them. In a Senate floor speech sharing his decision to leave Congress, the Minnesota Democrat and former "Saturday Night Live" comedian said some of the allegations leveled against him were simply untrue.
</p>
<p>
 "Over the last few weeks, a number of women have come forward to talk about how they felt my actions had affected them. I was shocked. I was upset," Franken said. "But in responding to their claim, I also wanted to be respectful of that broader conversation. Because all women deserve to be heard and their experiences taken seriously."
</p>
<p>
 Moore was accused by multiple women of having pursued them when the women were teenagers and Moore was in his 30s. One woman said she was 14 years old when Moore initiated sexual contact with her.
</p>
<p>
 Throughout his campaign against Jones, Moore repeatedly and emphatically denied the accusations.
</p>
<p>
 Both Democrats may owe their new place in Congress to the #MeToo movement.
</p>
<p>
 Smith, Minnesota's lieutenant governor, replaced former Sen. Al Franken, who resigned from the Senate after confronting multiple allegations of inappropriate touching and kissing. And Jones, a former federal prosecutor who had a historic victory against Republican nominee Roy Moore, may not have been able to pull off such an unlikely win had his opponent not been accused of molesting and pursuing young women years ago.
</p>
 </article>
 <annotations>
  b'gANjZ29vZ2xlLmNsb3VkLmxhbmd1YWdlX3YxLnR5cGVzCkFubm90YXRlVGV4dFJlc3BvbnNlCnEAKVJxAX1xAlgKAAAAc2VyaWFsaXplZHEDQrl/AAAKugUKqwUKqAU8dD5Ud28gc2VuYXRvcnMgc3dvcm4gaW50byBvZmZpY2UgYW1pZCAjTWVUb28gbW92ZW1lbnQ8L3Q+PGQ+VHdvIHNlbmF0b3JzIHdobyB3ZXJlIG5ld2x5IHN3b3JuIGludG8gb2ZmaWNlIFdlZG5lc2RheSAtLSBEb3VnIEpvbmVzIG9mIEFsYWJhbWEgYW5kIFRpbmEgU21pdGggb2YgTWlubmVzb3RhIC0tIGhhdmUgb25lIHRoaW5nIGluIGNvbW1vbi48L2Q+PHA+R2xvcmlhIEFsbHJlZCwgdGhlIGhpZ2gtcHJvZmlsZSBsYXd5ZXIgd2hvIHJlcHJlc2VudGVkIG9uZSBvZiBNb29yZSdzIGFjY3VzZXJzIGFuZCBhIHNsZXcgb2Ygb3RoZXIgd29tZW4gd2hvIGhhdmUgbWFkZSBhbGxlZ2F0aW9ucyBhZ2FpbnN0IHBvd2VyZnVsIG1lbiwgaW5jbHVkaW5nIFByZXNpZGVudCBEb25hbGQgVHJ1bXAsIHRvbGQgQ05OIGluIGEgcGhvbmUgaW50ZXJ2aWV3IFdlZG5lc2RheSB0aGF0ICJ0aGVyZSdzIG5vIG1vcmUgYnVzaW5lc3MgYXMgdXN1YWwgd2hlbiBpdCBjb21lcyB0byBzZXh1YWwgaGFyYXNzbWVudC4iPC9wPjxwPiJXb21lbiBzcGVha2luZyBvdXQgaGFkIGFuIGltcGFjdCBvbiBpbnN0aXR1dGlvbmFsIGNoYW5nZSBhbmQgaW4gdGhlIGNvdXJ0IG9mIHB1YmxpYyBvcGluaW9uIGFuZCBpdCBoYXMgY3JlYXRlZCBhIGNsaW1hdGUgaW4gd2hpY2ggc2V4dWFsIGhhcmFzc21lbnQgaXMgdW5hY2NlcHRhYmxlLhIKFWZmZj8dZmZmvwo6CiwKJ0FuZCBpdCBoYXMgY2F1c2VkIGNoYW5nZSwiIEFsbHJlZCBzYWlkLhCpBRIKFZqZmT4dmpmZvgqeAQqPAQqJASJXZXJlIGl0IG5vdCBmb3IgdGhpcyBtb3ZlbWVudCBidWlsZGluZywgQWwgRnJhbmtlbiB3b3VsZCBuZXZlciBoYXZlIGhhZCB0byBzdGVwIGRvd24gYW5kIEkgdGhpbmsgdGhhdCBSb3kgTW9vcmUgd291bGQgaGF2ZSBiZWVuIGVsZWN0ZWQuENEFEgoVAAAAPx0AAAC/CswBCscBCsEBU28gaXQgaGFzIGhhZCBhbiBpbXBhY3QgaW4gdGhlIGhhbGxzIG9mIHBvd2VyLiI8L3A+PHA+U21pdGggYW5kIEpvbmVzIGNvbWUgdG8gV2FzaGluZ3RvbiBhdCBhIG1vbWVudCB3aGVuIHRoZSBuYXRpb24ncyBjYXBpdGFsIGlzIGJlaW5nIHJvY2tlZCBieSB0aGUgI01lVG9vIG1vdmVtZW50IHRoYXQgaGFzIHN3ZXB0IHRoZSBjb3VudHJ5LhDbBhIAClQKRgpBPC9wPjxwPlRoZSBtb3ZlbWVudCBhcHBlYXJzIHRvIGhhdmUgYXJyaXZlZCBvbiBDYXBpdG9sIEhpbGwsIHRvby4QnQgSChUAAAA/HQAAAL8KygUKuwUKtQVPdmVyIHRoZSBwYXN0IGZldyBtb250aHMsIGxhd21ha2VycyBoYXZlIGNhbGxlZCBmb3IgYW4gb3ZlcmhhdWwgb2YgdGhlIHdheSBzZXh1YWwgaGFyYXNzbWVudCBjb21wbGFpbnRzIGFyZSBoYW5kbGVkIGFuZCBwcm9jZXNzZWQgb24gQ2FwaXRvbCBIaWxsLCBhbmQgZHJhd24gYXR0ZW50aW9uIHRvIHdoYXQgbWFueSBzYXkgaXMgYSBwZXJ2YXNpdmUgY3VsdHVyZSBvZiBzZXhpc20gYW5kIGNvZXJjaXZlIHdvcmtwbGFjZSBlbnZpcm9ubWVudCBpbiBDb25ncmVzcy48L3A+PHA+T3ZlciB0aGUgcGFzdCBtb250aCwgbXVsdGlwbGUgbWFsZSBsYXdtYWtlcnMgaGF2ZSBsZWZ0IG9mZmljZSBhZnRlciBmYWNpbmcgc2V4dWFsIGhhcmFzc21lbnQgYWNjdXNhdGlvbnMgLS0gRnJhbmtlbiwgYXMgd2VsbCBhcyBSZXAuIEpvaG4gQ29ueWVycywgYSBNaWNoaWdhbiBEZW1vY3JhdCwgYW5kIFJlcC4gVHJlbnQgRnJhbmtzLCBhbiBBcml6b25hIFJlcHVibGljYW4uPC9wPjxwPlR3byBhZGRpdGlvbmFsIGNvbmdyZXNzbWVuIC0tIFJ1YmVuIEtpaHVlbiwgYSBOZXZhZGEgRGVtb2NyYXQsIGFuZCBCbGFrZSBGYXJlbnRob2xkLCBhIFRleGFzIFJlcHVibGljYW4gLS0gYXJlIGN1cnJlbnRseSB1bmRlciBIb3VzZSBFdGhpY3MgQ29tbWl0dGVlIGludmVzdGlnYXRpb25zIGZvciBhbGxlZ2F0aW9ucyBvZiBzZXh1YWwgaGFyYXNzbWVudC4Q3wgSChXNzEw/Hc3MTL8KfQpvCmpCb3RoIGhhdmUgc2FpZCB0aGV5IHdpbGwgbm90IHNlZWsgcmUtZWxlY3Rpb24gdGhpcyB5ZWFyLCBidXQgYXJlIG9wdGluZyB0byBmaW5pc2ggb3V0IHRoZWlyIGN1cnJlbnQgdGVybXMuEJUOEgoVzcxMPh3NzEy+CpEBCoIBCn08L3A+PHA+RnJhbmtlbiBhbm5vdW5jZWQgbGFzdCBtb250aCB0aGF0IGhlIHdvdWxkIGxlYXZlIG9mZmljZSBhZnRlciBtdWx0aXBsZSB3b21lbiBzYWlkIGhlIGhhZCBpbmFwcHJvcHJpYXRlbHkgdG91Y2hlZCB0aGVtLhCADxIKFc3MTD8dzcxMvwrZAgrKAgrEAkluIGEgU2VuYXRlIGZsb29yIHNwZWVjaCBzaGFyaW5nIGhpcyBkZWNpc2lvbiB0byBsZWF2ZSBDb25ncmVzcywgdGhlIE1pbm5lc290YSBEZW1vY3JhdCBhbmQgZm9ybWVyICJTYXR1cmRheSBOaWdodCBMaXZlIiBjb21lZGlhbiBzYWlkIHNvbWUgb2YgdGhlIGFsbGVnYXRpb25zIGxldmVsZWQgYWdhaW5zdCBoaW0gd2VyZSBzaW1wbHkgdW50cnVlLjwvcD48cD4iT3ZlciB0aGUgbGFzdCBmZXcgd2Vla3MsIGEgbnVtYmVyIG9mIHdvbWVuIGhhdmUgY29tZSBmb3J3YXJkIHRvIHRhbGsgYWJvdXQgaG93IHRoZXkgZmVsdCBteSBhY3Rpb25zIGhhZCBhZmZlY3RlZCB0aGVtLhD+DxIKFQAAAD8dAAAAvwoXChMKDkkgd2FzIHNob2NrZWQuEMMSEgAKLgogChtJIHdhcyB1cHNldCwiIEZyYW5rZW4gc2FpZC4Q0hISChXNzMw9Hc3MzL0KaApkCl8iQnV0IGluIHJlc3BvbmRpbmcgdG8gdGhlaXIgY2xhaW0sIEkgYWxzbyB3YW50ZWQgdG8gYmUgcmVzcGVjdGZ1bCBvZiB0aGF0IGJyb2FkZXIgY29udmVyc2F0aW9uLhDuEhIACtsBCswBCsYBQmVjYXVzZSBhbGwgd29tZW4gZGVzZXJ2ZSB0byBiZSBoZWFyZCBhbmQgdGhlaXIgZXhwZXJpZW5jZXMgdGFrZW4gc2VyaW91c2x5LiI8L3A+PHA+TW9vcmUgd2FzIGFjY3VzZWQgYnkgbXVsdGlwbGUgd29tZW4gb2YgaGF2aW5nIHB1cnN1ZWQgdGhlbSB3aGVuIHRoZSB3b21lbiB3ZXJlIHRlZW5hZ2VycyBhbmQgTW9vcmUgd2FzIGluIGhpcyAzMHMuEM4TEgoVzcxMPx3NzEy/CtgDCskDCsMDT25lIHdvbWFuIHNhaWQgc2hlIHdhcyAxNCB5ZWFycyBvbGQgd2hlbiBNb29yZSBpbml0aWF0ZWQgc2V4dWFsIGNvbnRhY3Qgd2l0aCBoZXIuPC9wPjxwPlRocm91Z2hvdXQgaGlzIGNhbXBhaWduIGFnYWluc3QgSm9uZXMsIE1vb3JlIHJlcGVhdGVkbHkgYW5kIGVtcGhhdGljYWxseSBkZW5pZWQgdGhlIGFjY3VzYXRpb25zLjwvcD48cD5Cb3RoIERlbW9jcmF0cyBtYXkgb3dlIHRoZWlyIG5ldyBwbGFjZSBpbiBDb25ncmVzcyB0byB0aGUgI01lVG9vIG1vdmVtZW50LjwvcD48cD5TbWl0aCwgTWlubmVzb3RhJ3MgbGlldXRlbmFudCBnb3Zlcm5vciwgcmVwbGFjZWQgZm9ybWVyIFNlbi4gQWwgRnJhbmtlbiwgd2hvIHJlc2lnbmVkIGZyb20gdGhlIFNlbmF0ZSBhZnRlciBjb25mcm9udGluZyBtdWx0aXBsZSBhbGxlZ2F0aW9ucyBvZiBpbmFwcHJvcHJpYXRlIHRvdWNoaW5nIGFuZCBraXNzaW5nLhCVFRIKFTMzMz8dMzMzvwqLAgr8AQr2AUFuZCBKb25lcywgYSBmb3JtZXIgZmVkZXJhbCBwcm9zZWN1dG9yIHdobyBoYWQgYSBoaXN0b3JpYyB2aWN0b3J5IGFnYWluc3Qg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ZWQQzQEQASoPCgsKBmxhd3llchDtARACKg8KCwoGQWxscmVkEMQFEAEa6AEKCVJveSBNb29yZRABGhAKA21pZBIJL20vMGcxMzFiGjgKDXdpa2lwZWRpYV91cmwSJ2h0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JveV9Nb29yZSV8Tgc+Kg4KCgoFTW9vcmUQiwIQASoSCg4KCVJveSBNb29yZRC4BhABKg4KCgoFTW9vcmUQohQQASoOCgoKBU1vb3JlEP8UEAEqDgoKCgVNb29yZRC+FRABKg4KCgoFTW9vcmUQlBYQASoSCg4KCVJveSBNb29yZRC2GRABKhAKDAoHbm9taW5lZRCuGRACGroBCgpEb3VnIEpvbmVzEAEaFAoDbWlkEg0vZy8xMWR5emR6ZzFqGkYKDXdpa2lwZWRpYV91cmwSNWh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0RvdWdfSm9uZXNfKHBvbGl0aWNpYW4pJTqQ9D0qEgoOCgpEb3VnIEpvbmVzEHgQASoOCgoKBUpvbmVzEI0WEAEqDgoKCgVKb25lcxDdGBABKhMKDwoKcHJvc2VjdXRvchD1GBACGh4KBXdvbWVuEAElALlIPSoOCgoKBXdvbWVuELACEAIapQEKClRpbmEgU21pdGgQARoSCgNtaWQSCy9tLzAxMjd4dnkzGjkKDXdpa2lwZWRpYV91cmwSKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1RpbmFfU21pdGglo7YsPSoTCg8KClRpbmEgU21pdGgQkgEQASoOCgoKBVNtaXRoEKUXEAEqHAoYChNsaWV1dGVuYW50IGdvdmVybm9yELgXEAIaIwoIc2VuYXRvcnMQASUIQic9KhAKDAoIc2VuYXRvcnMQQRACGs8BCgpBbCBGcmFua2VuEAEaEAoDbWlkEgkvbS8wMWxjdDYaOQoNd2lraXBlZGlhX3VybBIoaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQWxfRnJhbmtlbiV58CE9KhMKDwoKQWwgRnJhbmtlbhD6BRABKhAKDAoHRnJhbmtlbhDaCxABKhAKDAoHRnJhbmtlbhCHDxABKhAKDAoHRnJhbmtlbhDgEhABKhMKDwoKQWwgRnJhbmtlbhDiFxABKg0K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sjoqFQoRCgxmbG9vciBzcGVlY2gQihAQAhqUAQoJQ29uZ3Jlc3MuGg8KA21pZBIIL20vMDk0ZGgaNwoNd2lraXBlZGlhX3VybBImaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ29uZ3Jlc3MlzCibOioSCg4KCUNvbmdyZXNzLhDeChABKhEKDQoIQ29uZ3Jlc3MQtRAQASoRCg0KCENvbmdyZXNzEP4WEAEaHgoFd29tZW4QASUblJc6Kg4KCgoFd29tZW4QuxoQAhocCgRzb21lEAEl1tOWOioNCgkKBHNvbWUQhREQAhosCgxhY2N1c2F0aW9ucy4QByWaLpY6KhUKEQoMYWNjdXNhdGlvbnMuEMEWEAEaKgoLYWxsZWdhdGlvbnMQByXZVJU6KhQKEAoLYWxsZWdhdGlvbnMQphgQAhokCghjYW1wYWlnbhAEJWv2hToqEQoNCghjYW1wYWlnbhD8FRACGiIKB2NvbnRhY3QQByVr9oU6KhAKDAoHY29udGFjdBDVFRACGjoKE0FyaXpvbmEgUmVwdWJsaWNhbi4QASVPwoM6KhwKGAoTQXJpem9uYSBSZXB1YmxpY2FuLhCwDBABGqoBChZIb3VzZSBFdGhpY3MgQ29tbWl0dGVlEAMaEAoDbWlkEgkvbS8wNW1iMDgaVgoNd2lraXBlZGlhX3VybBJFaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVW5pdGVkX1N0YXRlc19Ib3VzZV9Db21taXR0ZWVfb25fRXRoaWNzJQbDcToqHwobChZIb3VzZSBFdGhpY3MgQ29tbWl0dGVlEMkNEAEanQEKClJlcHVibGljYW4aDwoDbWlkEggvbS8wN3diaxpPCg13aWtpcGVkaWFfdXJsEj5odHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SZXB1YmxpY2FuX1BhcnR5XyhVbml0ZWRfU3RhdGVzKSUGw3E6KhMKDwoKUmVwdWJsaWNhbhCnDRABKhMKDwoKUmVwdWJsaWNhbhCjGRABGm4KCE1pY2hpZ2FuEAIaDwoDbWlkEggvbS8wNHJyeBo3Cg13aWtpcGVkaWFfdXJsEiZodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NaWNoaWdhbiVKcmc6KhEKDQoITWljaGlnYW4QgwwQARp8CgxSdWJlbiBLaWh1ZW4QARoRCgNtaWQSCi9tLzAzaG52N2caOwoNd2lraXBlZGlhX3VybBIqaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUnViZW5fS2lodWVuJUpyZzoqFQoRCgxSdWJlbiBLaWh1ZW4Q6AwQARooCgpXYXNoaW5ndG9uEAIlOMJlOioTCg8KCldhc2hpbmd0b24QqQcQARpoCgZOZXZhZGEQAhoPCgNtaWQSCC9tLzA1OV9jGjUKDXdpa2lwZWRpYV91cmwSJGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL05ldmFkYSUpVlQ6Kg8KCwoGTmV2YWRhEPgMEAEaiAEKEEJsYWtlIEZhcmVudGhvbGQQARo/Cg13aWtpcGVkaWFfdXJsEi5odHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CbGFrZV9GYXJlbnRob2xkGhEKA21pZBIKL20vMGRzMnp0aiUpVlQ6KhkKFQoQQmxha2UgRmFyZW50aG9sZBCNDRABGnsKBVRleGFzEAIaEQoDbWlkEgovbS8wMnI4ZDl0GkgKDXdpa2lwZWRpYV91cmwSN2h0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JlcHVibGljYW5fUGFydHlfb2ZfVGV4YXMlKVZUOioOCgoKBVRleGFzEKENEAEaJAoIdG91Y2hpbmcQByUNfDs6KhEKDQoIdG91Y2hpbmcQwxgQAhoiCgdraXNzaW5nEAclDXw7OioQCgwKB2tpc3NpbmcQ0BgQAhoiCgd2aWN0b3J5EAQlTFM7OioQCgwKB3ZpY3RvcnkQkxkQAhoaCgN3aW4QByVMUzs6KgwKCAoDd2luEPUZEAIaJAoIb3Bwb25lbnQQASVMUzs6KhEKDQoIb3Bwb25lbnQQgRoQAhoqCgthbGxlZ2F0aW9ucxAHJcRQHjoqFAoQCgthbGxlZ2F0aW9ucxCRERACGogBCg9NZVRvbyBtb3ZlbWVudC4QBxoUCgNtaWQSDS9nLzExZ2J6Y2Z4ZDEaPgoNd2lraXBlZGlhX3VybBItaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWVfVG9vX21vdmVtZW50JaV2HToqGAoUCg9NZVRvbyBtb3ZlbWVudC4QjxcQARogCgZudW1iZXIQByXlzBo6Kg8KCwoGbnVtYmVyEOcREAIaHAoEbWFueRABJV9BCzoqDQoJCgRtYW55EI4KEAIaIgoHYWN0aW9ucxAHJS4g+zkqEAoMCgdhY3Rpb25zEKgSEAIaJAoIY29tZWRpYW4QASVQIew5KhEKDQoIY29tZWRpYW4Q9xAQAhosCgxjb252ZXJzYXRpb24QByWMS+s5KhUKEQoMY29udmVyc2F0aW9uEMATEAIaHgoFY2xhaW0QByWMS+s5Kg4KCgoFY2xhaW0QihMQAhqQAQoTU2F0dXJkYXkgTmlnaHQgTGl2ZRAFGhAKA21pZBIJL20vMDM5Y3E0GkIKDXdpa2lwZWRpYV91cmwSMWh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NhdHVyZGF5X05pZ2h0X0xpdmUlZICLOSocChgKE1NhdHVyZGF5IE5pZ2h0IExpdmUQ4hAQASIKFTMz80AdzczMvioCZW5xBHNiLg=='
 </annotations>
</document>
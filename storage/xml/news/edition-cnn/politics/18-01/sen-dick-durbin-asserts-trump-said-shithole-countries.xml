<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Maegan Vazquez, ('Edition CNN',)
 </author>
 <date>
  2018-01-16T16:38:40+00:00
 </date>
 <article>
<t>
 Sen. Dick Durbin asserts Trump said 'shithole countries'
</t>
<d>
 Sen. Dick Durbin asserted Tuesday that President Donald Trump called certain African nations "shithole countries" during a bipartisan meeting on immigration reform at the White House last week, despite evolving explanations from some Republicans.
</d>
<p>
 Over the weekend, Republican Sens. Tom Cotton and David Purdue, who were both at the White House meeting, said the President did not say "shithole." A senior GOP source familiar with the matter told CNN that instead of hearing the President say "shithole" during the meeting, some Republicans actually heard "shithouse."
</p>
<p>
 No one disputes that the President expressed a preference for immigrants from places like Norway over places like Haiti, Central America and Africa.
</p>
<p>
 "Then we called him two days later, (Republican) Senator (Lindsey) Graham and I, and said we've done it. We've met your criteria. We have a bipartisan bill. We're ready to go. And then to be called into the President's office to explain it to him and find that we've been sandbagged," Durbin added.
</p>
<p>
 He said White House chief of staff John Kelly and White House senior adviser Stephen Miller brought in five other members of Congress "to refute any assertions ... that this was good policy," adding that "any attempt to kill immigration reform probably has Mr. Miller's fingerprints on it."
</p>
<p>
 Durbin said Graham pushed back on Trump for his vulgar remark during the meeting.
</p>
<p>
 "(H)e said 'My family was from one of those s-hole countries.' He used the word himself," Durbin continued, adding that Graham said, "'They came here with limited training, limited experience. They made a life, they started a business and they gave me a chance. That's what America is all about.'"
</p>
<p>
 Trump's "shithole" remark has had implications in Washington and abroad. On Capitol Hill, Democrats and some Republicans denounced Trump's remark as they've tried to reach a deal on immigration, which could be essential to avoiding a government shutdown later this week.
</p>
<p>
 <em>
  Watch Jake Tapper's exclusive interview with Sen. Dick Durbin on CNN's "The Lead" at 4 p.m. ET.
 </em>
</p>
<p>
 "Let me say they're wrong. I can tell you explicitly they are wrong," the Illinois Democrat told CNN's Jake Tapper in an exclusive sit-down interview. "And let me also say, is that their defense, that S-House is acceptable, S-Hole he would never say? Come on. To think that the President of the United States would refer to any country on Earth as an S-House country, for goodness' sakes, what does that say?"
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
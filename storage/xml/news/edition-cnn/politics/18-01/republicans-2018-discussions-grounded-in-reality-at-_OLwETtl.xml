<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Phil Mattingly, Jeff Zeleny and David Wright, ('Edition CNN',)
 </author>
 <date>
  2018-01-08T19:28:22+00:00
 </date>
 <article>
<t>
 Republicans' 2018 discussions 'grounded in reality' at Camp David
</t>
<d>
 Republican leaders left Camp David this weekend after a "constructive" discussion about the 2018 elections that was "grounded in reality," according to source familiar with the talks, as Republican leaders begin crafting their pitch for the first midterms of the Trump administration.
</d>
<p>
 At Camp David, House Majority Leader Kevin McCarthy referenced his experience as one of the architects of the 2010 House GOP takeover, and drew parallels between that year and 2018. The California Republican, however, noted that Republicans are better positioned to preserve their majorities because they recognize the potential problems and have time to create an action plan, now, before he said it's too late.
</p>
<p>
 McCarthy touted on Monday's "Fox &amp; Friends" Republicans' accomplishments -- citing their tax legislation, regulatory rollback and judicial confirmations -- as he struck a publicly optimistic tone about the 2018 elections.
</p>
<p>
 "We start right where we left off, the beginning of the tax reform, the (regulatory) reform, the VA reform that we did. That was the start of America's comeback. Now 2018, you want to complete that job" McCarthy said. "You can't just quickly move past tax reform."
</p>
<p>
 The House majority leader then ticked off a list of policy goals, and seemed to suggest that some type of welfare reform could be in Republicans' plans in the new year. "What we want to do is build from there, more economic growth. You've got unemployment at (a) 17-year low, so we are going to have problem with making sure we get enough people into the workforce, able-bodies and others, how can we help from training and others."
</p>
<p>
 He continued: "Infrastructure, we have to make sure that we are rebuilding America as America continues to grow. We look at the opioid epidemic across the country, we have to be able to solve that. Then most importantly rebuilding our military, it's been devastated by the cuts that have gone through on the Obama administration, as you saw."
</p>
<p>
 Strategically speaking, Republicans left Camp David planning a mix of a major fundraising blitzes, the selling of the tax and regulatory actions already taken, and a careful utilization of the president.
</p>
<p>
 "Nobody was of the mind to out and out tell the President what he can or cannot do," the source said.
</p>
<p>
 Still, it was tacitly acknowledged over the weekend by those in attendance that there will be races where the President's fundraising efforts would be more valuable than in-person campaign visits, according to one source.
</p>
<p>
 "We need to tailor our efforts to the districts and states," the source said. "That was a key -- and obvious -- point."
</p>
<p>
 Nevertheless, snapshots of national political trends heading into 2018 show Republicans have their work cut out for them.
</p>
<p>
 Additionally, Trump's favorability rating remains deep underwater -- 36% hold a positive view, 60% a negative one.
</p>
<p>
 At the weekend retreat, it was made clear that Republicans are in a very difficult spot heading into 2018. Part of that -- as emphasized by the presentations at the summit -- has to do with simple history, according to another source. In both 1994 and 2010, for example, the first term President's party faced stiff midterm headwinds and suffered significant losses.
</p>
<p>
 But among Republicans, there was also a recognition of the acute danger presented by current polling and unique forces facing the party this year specifically -- something that President Donald Trump told those assembled had more to do with their inability to sell what he perceives as the administration's successes than anything else.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
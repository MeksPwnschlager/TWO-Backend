<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Tal Kopan, ('Edition CNN',)
 </author>
 <date>
  2018-01-10T14:58:53+00:00
 </date>
 <article>
<t>
 DACA negotiations full steam ahead despite ruling, sources say
</t>
<d>
 In the wake of a late-night court ruling blocking the Trump administration from ending a popular immigration program, congressional negotiators say it's still full steam ahead -- for now.
</d>
<p>
 Even though Congress often needs a deadline to act -- and lawmakers on Capitol Hill have for months pointed to the March deadline as a reason to act -- multiple congressional aides close to the negotiation process, from different perspectives on the issue, all were doubtful the decision would derail the negotiations in Congress, saying there was too much progress and too much uncertainty about litigation to stop the action.
</p>
<p>
 Still, lawmakers have jockeyed for months about what the deadline actually is, with Democrats and some Republicans looking to use the leverage of spending negotiations to get a deal done. Meanwhile, Republicans have pointed to March as the deadline. Tuesday's decision could still muddy the waters.
</p>
<p>
 And even if the urgency remains, the ruling could embolden both sides to demand more. Immigration attorney Leon Fresco, formerly a longtime former aide to Sen. Chuck Schumer and Justice Department immigration official, pointed out that depending on how long an appeals court takes to review the decision, the issue might not come before the Supreme Court until the next term, which could entrench negotiators.
</p>
<p>
 "Once people start to realize that the potential end point for this litigation could drag on into the next Supreme Court term, which begins in October and the difficult cases get decided in May or June 2019, they will realize the incentives for compromising and reaching politically difficult decisions are much less than they were a day go," Fresco told CNN. "That will result in both sides taking more strident positions with regard to their demands for a deal."
</p>
<p>
 For now, the White House is also saying full steam ahead.
</p>
<p>
 In a statement criticizing the legal decision, press secretary Sarah Sanders called the decision "outrageous" but said the administration was still going to work on putting the executive program into law.
</p>
<p>
 "An issue of this magnitude must go through the normal legislative process," Sanders said. "President Trump is committed to the rule of law, and will work with members of both parties to reach a permanent solution that corrects the unconstitutional actions taken by the last administration."
</p>
<p>
 The President's chief legislative aide, Marc Short, told National Public Radio on Wednesday morning the administration felt the urgency still exists. He said that given other rulings from federal courts in the 9th circuit, where the judge in the DACA case is based, that have been overturned by the Supreme Court, that the risk is still great.
</p>
<p>
 "We're anxious to get a solution," Short said. "If we let this drag out, the risk would be that the Supreme Court will say, 'Yeah we're overturning the decision,' and immediately DACA ends. And so it's better to give us some opportunity to find a legislative fix as opposed to risking status for all those individuals."
</p>
<p>
 One aide pointed out that the opponents of doing a DACA deal will always look for an excuse not to, and the supporters will always feel urgency to do it.
</p>
<p>
 California Democratic Sen. Kamala Harris made such a point in her response to the ruling Wednesday morning.
</p>
<p>
 "However, this relief, while important, is not a lasting solution," she said in a statement. "Congress must act immediately to provide these young people with permanent protection from deportation, which can only come through legislation."
</p>
<p>
 Those lawmakers in the middle -- who may want to support it but are afraid of the consequences or caveats -- are going to look to Trump for cover, the aide added. Another aide pointed out that most in Congress expect the decision could be overturned and so won't rely on it as changing the game.
</p>
<p>
 The White House's message on Wednesday that it was still seeking a deal could help -- though word from Trump himself will also carry the most weight. On the ruling, Trump instead criticized the judicial process in a tweet, noting that the ruling could still be overturned.
</p>
<p>
 "It just shows everyone how broken and unfair our Court System is when the opposing side in a case (such as DACA) always runs to the 9th Circuit and almost always wins before being reversed by higher courts," the President wrote Wednesday.
</p>
<p>
 Advocates of a DACA fix also say they're pressing ahead,
</p>
<p>
 Longtime advocate Frank Sharry, of America's Voice Education Fund, who is closely tracking the talks said even opponents of DACA always said it should be a legislative solution and this ruling doesn't change that.
</p>
<p>
 "Our sense is there's a great deal of momentum towards a deal and this won't slow things down," Sharry said. "At best, litigation will be protracted, with an uncertain outcome. We are confident those working in legislation will plow forward."
</p>
<p>
 And the president of FWD.us, a Silicon Valley-linked immigration advocacy group, sent an email around to colleagues and allies reminding them to keep the pressure on, citing the likelihood of litigation to continue.
</p>
<p>
 "We need to make sure that people do not get a sense either of false security or a loss of urgency - and we've already seen those people opposed to protecting Dreamers try some bad spin that somehow things might be OK for DACA recipients now," wrote Todd Schulte in an email sent to CNN. "This is just a tactic to kill a deal. In fact, tonight's decision is going to add to the chaos and stress felt by so many and makes it more clear than ever that Congress must act in the next ten days."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
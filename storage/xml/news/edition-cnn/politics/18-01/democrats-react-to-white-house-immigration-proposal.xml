<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Daniella Diaz, Jim Acosta, Elizabeth Landers and Tal Kopan, ('Edition CNN',)
 </author>
 <date>
  2018-01-26T01:55:42+00:00
 </date>
 <article>
<t>
 Democrats react to White House immigration proposal
</t>
<d>
 Democrats are responding to President Donald Trump's proposal to give 1.8 million young undocumented immigrants a pathway to citizenship in exchange for $25 billion for his long-promised wall -- and they're not happy.
</d>
<p>
 Democratic immigration advocate Eddie Vale, who's been closely involved in the recent immigration talks, called the White House proposal "a legislative burning cross."
</p>
<p>
 "What the White House is filling you in on now is in no way an attempt to get to a real deal," Vale told CNN, adding that rather it is a way to "get every item on (White House senior adviser) Stephen Miller's white supremacist wish list."
</p>
<p>
 He also said the immigration bill proposed by Durbin and Sen. Lindsey Graham, R-South Carolina, was "a real bipartisan process" and that Democrats were willing to make trades they wouldn't usually make to get a deal -- even considering the wall in negotiations.
</p>
<p>
 A big problem for Democrats will be the cuts to "chain migration" -- or family-based migration.
</p>
<p>
 One key immigration advocate told CNN the White House proposal would be "the biggest cut to legal immigration in nearly 100 years."
</p>
<p>
 They told CNN: "It is not something that could ever earn support from the immigration community."
</p>
<p>
 A senior Democratic aide described the proposal to CNN as "not credible."
</p>
<p>
 The outlines of the deal were described by a White House official in a conference call for staff on Capitol Hill that CNN was given access to on Thursday afternoon.
</p>
<p>
 In what the White House official called a "dramatic concession," Trump would accept a path to citizenship for not just those originally eligible for DACA but also for a broader population, adding up to 1.8 million people, the official said.
</p>
<p>
 In return, the White House would like to see a $25 billion investment in a trust for border infrastructure and technology, as well as more funds for personnel, and an end to family migration beyond spouses and minor children. The diversity visa lottery would also be abolished, with those visas going to work through a backlog of people already waiting for family visas and high-skilled immigration green cards.
</p>
<p>
 In what may end up being the most contentious piece of the proposal, the White House is also defining as border security closing "legal loopholes" that will allow it to deport more immigrants -- which would likely include changes in immigration enforcement authority that would be virtually impossible for Democrats to swallow.
</p>
<p>
 Democratic Rep. Luis Gutierrez of Illinois described the proposal on Twitter as "$25 billion as ransom for Dreamers."
</p>
<p>
 He also wrote, "It would be far cheaper to erect a 50-foot concrete statue of a middle finger and point it towards Latin America, because both a wall and the statue would be equally offensive and equally ineffective and both would express Trump's deeply held suspicion of Latinos."
</p>
<p>
 Frank Sharry, executive director of the immigration advocacy group America's Voice, slammed the proposal, saying Trump and Miller are "exploiting a crisis that they created."
</p>
<p>
 "This is the moment that the hardliners -- John Kelly, Stephen Miller, Tom Cotton, Bob Goodlatte, John Cornyn and their outside collaborators -- have been waiting and planning for," he said in a statement. "The hardliners are high-fiving; the Statue of Liberty weeps."
</p>
<p>
 And Democratic Sen. Brian Schatz of Hawaii slammed the White House for wanting to cut legal immigration.
</p>
<p>
 "There is no public policy justification for cutting legal immigration in half. None," he wrote.
</p>
<p>
 "Dreamers should not be held hostage to President Trump's crusade to tear families apart and waste billions of American tax dollars on an ineffective wall," Sen. Dick Durbin, the Illinois Democrat who has fought for protection for participants in the expiring Deferred Action for Childhood Arrivals program, said in a statement.
</p>
<p>
 "The White House claims to be compromising because the President now agrees with the overwhelming majority of Americans that Dreamers should have a pathway to citizenship. But his plan would put the administration's entire hardline immigration agenda -- including massive cuts to legal immigration -- on the backs of these young people," Durbin said.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
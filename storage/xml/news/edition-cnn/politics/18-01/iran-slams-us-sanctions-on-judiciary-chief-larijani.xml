<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Laura Smith-Spark, ('Edition CNN',)
 </author>
 <date>
  2018-01-13T09:43:35+00:00
 </date>
 <article>
<t>
 Iran slams US sanctions on judiciary chief Larijani
</t>
<d>
 Iran slammed US President Donald Trump's decision to target the head of its judiciary with sanctions, saying the move warrants a "severe" response.
</d>
<p>
 In a statement Saturday, Iran's Foreign Ministry said the Trump administration's "hostile and illegal act" in including Larijani on its sanctions list "has gone way beyond all internationally accepted behavior red lines."
</p>
<p>
 "Iran's response will be severe, and all consequences of this hostile act will be the responsibility of the United States," it said.
</p>
<p>
 Russian Deputy Foreign Minister Sergei Ryabkov said Moscow has a "very negative stance" on the decisions and comments made by Trump about Iran, according to state news agency Sputnik.
</p>
<p>
 "Our worst expectations are coming true," Ryabkov said Saturday.
</p>
<p>
 The prospect of a US withdrawal from the Iran deal "will deliver a very serious blow to the whole system of international agreements and to the enhancing of the nuclear nonproliferation regime," he added.
</p>
<p>
 <h3>
  Serious impact predicted
 </h3>
</p>
<p>
 The sanctioning of Larijani, the most prominent of the US targets, could have "serious political impact inside Iran," a senior Trump administration official predicted Friday.
</p>
<p>
 Senior administration officials said Larijani has overseen the sentencing and execution of juveniles in Tehran.
</p>
<p>
 The US sanctions also targeted two other Iranian officials whom the administration said are responsible for ordering abuses against citizens, including the denial of medical care and access to legal representation for protesters in Iranian jails.
</p>
<p>
 The Islamic Revolutionary Guard Corps Electronic Warfare and Cyber Defense Organization were each labeled for acting on behalf of Iran's Islamic Revolutionary Guard. The Treasury Department also designated two Iranian defense industry firms that provide key maintenance and overhaul services for the military's helicopter and aircraft.
</p>
<p>
 "The United States will not stand by while the Iranian regime continues to engage in human rights abuses and injustice," Treasury Secretary Steven Mnuchin said Friday. "We are also targeting Iran's ballistic missile program and destabilizing activities, which it continues to prioritize over the economic well-being of the Iranian people."
</p>
<p>
 <h3>
  Analysis: Trump demands risk widening rift with allies
 </h3>
</p>
<p>
 In a bizarre kicker in the waiver announcement, the United States indicated it hopes to rewrite much of the nuclear agreement, known as the Joint Comprehensive Plan of Action, and to get its European allies, who wholly back the deal as it is, to do the bargaining for them, he said.
</p>
<p>
 The United States proposes removing clauses that suggest parts of the deal expire after 10 to 15 years and tying long-range missile technology to nuclear weapons -- meaning testing the former would be seen as a similar sin to developing the latter. Those points would have to be blessed by Congress and woven into a supplemental deal forged with the US' European allies.
</p>
<p>
 In short, Trump's pedigree in real estate negotiation is being used to try to recast one of the most complex and geopolitically vital documents on the planet, Paton Walsh said. It is as if he is threatening to withhold his next payment on a building development unless his contractors agree to fix the lobby and build a garage for free, and he's asking his family to secure these concessions.
</p>
<p>
 This approach is unlikely to work, given that it places the onus upon allies -- who publicly don't want to alter or jeopardize the deal -- to tighten it up in ways Iran will find unacceptable, Paton Walsh said. It is difficult to imagine how Tehran would take European demands for changing the deal seriously when those players know the demands come under duress.
</p>
<p>
 It means the theater of Trump and Iran will continue for another few months. In imposing sanctions on 14 key Iranian hardliners over their activities in other areas, the United States has further ramped up the tension. These and other sanctions also continue to divert investors from sinking money into Iran's vulnerable economy.
</p>
<p>
 And as every cycle of "will he waive, won't he waive" passes, Paton Walsh said, the bedrock of understanding upon which the deal is based erodes yet further.
</p>
<p>
 But he coupled that announcement with new sanctions on 14 Iranian individuals and entities -- among them Ayatollah Sadeq Amoli Larijani, head of Iran's judiciary.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
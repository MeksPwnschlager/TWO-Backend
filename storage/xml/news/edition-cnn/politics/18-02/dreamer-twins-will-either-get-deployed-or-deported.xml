<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Christina Manduley, Joanna Pinto and Kimberly Berryman, ('Edition CNN',)
 </author>
 <date>
  2018-02-13T02:38:48+00:00
 </date>
 <article>
<t>
 'Dreamer' twins will either get deployed or deported
</t>
<d>
 Identical twins John and James want nothing more than to serve in the military, but as "Dreamers" illegally brought to the United States from the Philippines at age 10, whether they are deported or deployed will be up to Congress.
</d>
<p>
 The brothers and their mother came to the US legally as tourists. Their paperwork allowed them to remain just a few months but they overstayed, necessitating the need for DACA protections to keep them in the country.
</p>
<p>
 As DACA recipients, John and James, who wished to only have their first names used, say they watch TV with anxiety, not knowing if permanent legislation for DACA will be passed. "Am I going to ship out or am I going to get sent back to a country that I hardly know?" James asks.
</p>
<p>
 They were able in 2016 to join a now-defunct pilot program set up to allow skilled immigrants to enlist in the military.
</p>
<p>
 John is due to ship out for Army basic training on March 5, the same day President Donald Trump has given as a deadline for Congress to agree on DACA. James has not yet received his call.
</p>
<p>
 On Thursday, Secretary of Defense James Mattis attempted to ease anxiety, telling reporters that service members such as John and James are in no danger of being deported. "We would always stand by one of our people," Mattis said.
</p>
<p>
 "Protecting this country and potentially dying for it, maybe, is not a problem, because we love this country," James said.
</p>
<p>
 "We raised our right hands and swore (an) oath and we knew what were the consequences," said James. "So that's no problem with us. The only thing that I would want to ask people of authority and the American people is (for) a chance to prove that we're Americans."
</p>
<p>
 <em>
  CORRECTION: This story has been updated to reflect that John and James were brought to the US legally.
 </em>
</p>
<p>
 "Just give us a chance to prove that we're Americans," James said on CNN's "The Lead with Jake Tapper."
</p>
<p>
 As the twins wait for a decision on their future, the immediate future of the Deferred Action for Childhood Arrivals (DACA) program "could determine whether they are deported or deployed," Tapper reported.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Kara Scannell, Manu Raju and Jeremy Herb, ('Edition CNN',)
 </author>
 <date>
  2018-02-06T02:54:43+00:00
 </date>
 <article>
<t>
 Steve Bannon has a week to comply with House subpoena
</t>
<d>
 Former White House chief strategist Steve Bannon won't appear before the House Intelligence Committee Tuesday, escalating a tense standoff with the panel.
</d>
<p>
 "The House Intelligence Committee's interview with Stephen Bannon has been postponed at the Committee's initiative until next week," Emily Hytha, spokeswoman for Rep. Mike Conaway, the Republican running the committee's Russia probe, said in a statement. "We look forward to having him before the Committee once we can assure that he will be able to thoroughly answer all our questions without concerns regarding the scope of executive privilege."
</p>
<p>
 The committee's top Democrat released a statement calling Bannon's failure to testify "unacceptable."
</p>
<p>
 "This week, Steve Bannon's counsel informed the Committee that the White House continues to prohibit Mr. Bannon from testifying to the Committee beyond a set of fourteen yes-or-no questions the White House had pre-approved," Rep. Adam Schiff of California said in a statement, adding that the committee "remains united" and that the subpoenas are still in affect.
</p>
<p>
 This is not the first time the committee has pushed back its subpoena as it has negotiated with Bannon over answering questions about the transition and his time in the White House, which he did not answer when he was interviewed last month.
</p>
<p>
 Conaway told reporters Monday evening he expected Bannon to comply with the subpoena demands of the committee and was unaware of any deal to limit the answers he would provide to the panel.
</p>
<p>
 A source familiar with the matter added that Bannon would instead answer all of special counsel Robert Mueller's questions as part of his investigation.
</p>
<p>
 The committee has twice delayed Bannon's return to the committee amid negotiations over whether he could answer questions about topics during the transition period and his time at the White House.
</p>
<p>
 In his first appearance last month before the panel, Bannon said he would only answer questions about topics when he was the chief executive of the campaign, with his attorney saying the White House directed him to protect President Donald Trump's right to assert executive privilege.
</p>
<p>
 His refusal to answer questions angered lawmakers from both parties, who issued a subpoena during the contentious, marathon appearance before the panel last month.
</p>
<p>
 <em>
  This story has been updated.
 </em>
</p>
<p>
 Bannon was not planning on showing up ahead of a Tuesday deadline because the White House and committee haven't reached an agreement over the scope of the questioning, a source said Monday.
</p>
<p>
 The House Intelligence Committee confirmed Tuesday it was giving Bannon another week to comply with its subpoena.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
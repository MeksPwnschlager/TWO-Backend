<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Manu Raju and Jeremy Herb, ('Edition CNN',)
 </author>
 <date>
  2018-02-07T00:39:56+00:00
 </date>
 <article>
<t>
 House GOP gives Trump leeway over whether to block Schiff memo
</t>
<d>
 House Republicans, who lobbied President Donald Trump to release a GOP memo alleging FBI misconduct, are now mum on whether the White House should let the public review the Democratic rebuttal.
</d>
<p>
 "I'm not going to speculate," said Rep. Mike Conaway, who is running the House Russia investigation, when asked if he would override the President. "I'll have to see what they're objecting to before I can make a call on that."
</p>
<p>
 "I don't do hypotheticals," said House Majority Leader Kevin McCarthy when asked if the House would insist on the Democratic memo's release if the President refused to allows its declassification.
</p>
<p>
 The mum posture over the memo drafted by the panel's top Democrat, Rep. Adam Schiff of California, differs sharply from the public positions last week when Trump was considering releasing the memo drafted by staff of Rep. Devin Nunes, the House Intelligence Committee chairman. It also differs from the position of the Senate Intelligence Committee's chairman, Richard Burr, who said he didn't see a need for the Nunes memo to be released.
</p>
<p>
 "I don't think there was any need for a memo to be released," Burr said Monday, referring to the Nunes memo.
</p>
<p>
 But House Republicans publicly and privately called on Trump to release the memo, which asserted the FBI improperly obtained a warrant to surveil former Trump foreign policy adviser Carter Page during the 2016 campaign. They contended that the FBI had "scrubbed" their memo, though FBI Director Christopher Wray vocally opposed the release of the Nunes memo.
</p>
<p>
 White House chief of staff John Kelly told reporters Tuesday that the administration would have a recommendation on the memo ready for the President on Thursday, but he said that Schiff's memo was "a lot less clean" than the Republican document.
</p>
<p>
 "Where the first one was very clean relative to sources and methods, my initial cut is this one is a lot less clean," Kelly said. "We'll brief the President on it and he'll have a decision to make as to what he wants to do with it: Should he do the same thing he did on the first memo and essentially declassify it or should he declassify it with some redactions."
</p>
<p>
 House Speaker Paul Ryan, who called for the Nunes memo release to spotlight potential "abuse" under the Foreign Intelligence Surveillance Act, sidestepped questions Tuesday on whether Trump should release the memo.
</p>
<p>
 "Well, again, it's all about sources and methods," Ryan said when asked if he believed Trump should release the Schiff memo. "The Republican memo was written to make sure that sources and methods were not compromised so that full disclosure could occur. We do not now know whether that's the case with the Democrat memo, it has to go through that scrubbing process."
</p>
<p>
 Conaway said that Schiff has acknowledged things are included in his memo that would need to be redacted because they are classified, which was why he wanted the Justice Department and FBI to review it.
</p>
<p>
 "They understand their memo has things in it that just cannot see the public arena, and they trust the FBI and Justice to do an appropriate job," Conaway said. "So they can't take a blanket objection to redactions. ... Let's see what those (redactions) are, and if they've got something that we ought to have a conversation about, we'll have it. If it's simply a ploy to force us into a circumstance where it looks like we're trying to override and do something, we'll have to cross that bridge."
</p>
<p>
 The House panel voted to release the Schiff memo Monday, giving Trump five days to object to or approve of its release. If he objects to the release or redacts portions of it, the House Intelligence Committee could vote to override his objections. If it were to take that unprecedented step, the full GOP-House would have to override the White House as well to give the public access to the Schiff memo.
</p>
<p>
 Schiff said that he wanted detailed explanations of any redactions, warning against "political redactions" that the White House could seek to bolster Trump's case that the Russia investigation was conducted improperly.
</p>
<p>
 But Republicans have their own warnings: They say Schiff wrote the memo in a way that was intended to later accuse the White House of making political redactions.
</p>
<p>
 "They set this up for that argument," said Rep. Chris Stewart, a Utah Republican who sits on the House Intelligence Committee. "As soon as I read it, I thought it's very clear what they're doing. They're setting this up to make the argument there's political redactions."
</p>
<p>
 Rep. Pete King, a member of the House Intelligence Committee, and a leading proponent of releasing the Nunes memo, would not say if he was prepared to override the President should he block the Schiff memo.
</p>
<p>
 "Let's do one thing at a time," King said. "The President has given no indication that he wants to block it."
</p>
<p>
 Republican leaders and members of the House Intelligence Committee are saying the issue is squarely in the hands of Trump and the Justice Department about whether the Democratic memo should be released over any national security concerns.
</p>
<p>
 Moreover, Republicans on the House Intelligence Committee refuse to say if they would override the President if he blocks the Democratic rebuttal or redacts key portions of it -- despite their unanimous vote on Monday to release it.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
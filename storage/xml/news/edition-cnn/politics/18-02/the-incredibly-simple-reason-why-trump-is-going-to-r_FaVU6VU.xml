<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Analysis by Chris Cillizza Editor-at-large, ('Edition CNN',)
 </author>
 <date>
  2018-02-01T20:55:48+00:00
 </date>
 <article>
<t>
 The incredibly simple reason why Trump is going to release the Nunes memo
</t>
<d>
 The great debate consuming Washington right now is this: Will President Donald Trump release the memo or not?
</d>
<p>
 FBI Director Christopher Wray, who Trump appointed after firing then-director James Comey last May, and deputy Attorney General Rod Rosenstein have voiced "grave concerns" about releasing the memo, which, they have suggested, omits important facts and provides an incomplete and inaccurate picture of how the bureau conducted itself during the 2016 election.
</p>
<p>
 And yet, as Trump boarded Marine One to return to Washington from a speech at the Republican congressional retreat in West Virginia on Thursday afternoon, a senior administration official made clear that the President is expected to give Congress the go-ahead as soon as Friday morning.
</p>
<p>
 "The president is OK with it," a senior administration official said. "I doubt there will be any redactions. It's in Congress' hands after that."
</p>
<p>
 If you are surprised by that decision, you have been residing on another planet for the better part of the last three years.
</p>
<p>
 If you have been paying attention since Trump announced his presidential bid in June 2015, you know that the President is actually a very simple person to understand. He views everything that comes across the transom through one lens: "How does this impact me?"
</p>
<p>
 Sure, we all tend to think of how every situation impacts us. Self-interest is a very powerful motivator, after all.
</p>
<p>
 But most people who get elected president tend to open their aperture when considering how to react to the million things that cross their desk every day. Among those broader concerns: 1) Is this true? 2) Is this in the best interest of the country? 3) Will this set any sort of dangerous precedent for future White Houses?
</p>
<p>
 Trump, as he has shown any number of times as president (and as a candidate) is entirely unburdened by those sorts of concerns. To him, all decisions about what to do with a certain piece of information or how to react to a certain situation center around this basic question: Does this make me look good/smart?
</p>
<p>
 Trump doesn't think in terms of good/bad or true/false. He thinks in terms of advantage/disadvantage or, to put it in more Trumpian terms, winning/losing.
</p>
<p>
 Which brings me back to the Nunes memo and the debate over whether to release it.
</p>
<p>
 Trump wanted the memo released before he even read it because it affirmed something he already believed: That top officials at the FBI didn't want him to win and worked to finesse the investigation into Hillary Clinton's private emails so that it didn't end in an indictment for her.
</p>
<p>
 <em>
  "Crooked Hillary Clinton's top aid, Huma Abedin, has been accused of disregarding basic security protocols. She put Classified Passwords into the hands of foreign agents. Remember sailors pictures on submarine? Jail! Deep State Justice Dept must finally act? Also on Comey &amp; others"
 </em>
</p>
<p>
 And so, when the Nunes memo emerged, it was like a dream come true for Trump. The memo proves his point!  He was right all along! Comey and the rest of them were out to get him!
</p>
<p>
 That his own FBI director has urged against the release of the memo because it presents an incomplete and inaccurate picture of the bureau and could do real damage to the intelligence-gathering abilities of the agency is not terribly concerning to Trump.
</p>
<p>
 It proves him right. What else does he need to even think about?
</p>
<p>
 See? Like I said: Simple.
</p>
<p>
 The answer, I think, is simple: Yes, of course he will. Because that's who he is. And what he does.
</p>
<p>
 The memo in question comes from House Intelligence Committee Chairman Devin Nunes, a California Republican, and allegedly details a series of missteps, mistakes and misinformation at the highest levels of the FBI.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
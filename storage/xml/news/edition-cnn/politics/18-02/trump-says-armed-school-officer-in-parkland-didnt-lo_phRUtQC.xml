<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Dan Merica, ('Edition CNN',)
 </author>
 <date>
  2018-02-23T19:52:52+00:00
 </date>
 <article>
<t>
 Trump says armed school officer in Parkland didn't 'love the children'
</t>
<d>
 President Donald Trump continued to criticize the armed school resource officer in Parkland, Florida, who stayed outside of the school during the shooting, saying during a White House news conference conference that Scot Peterson "doesn't love the children, probably doesn't know the children."
</d>
<p>
 He added that it is "very, very important that we have offensive capability, as well as defensive capability, within the schools. You really are inviting people to come in and do whatever" without arming educators.
</p>
<p>
 Peterson resigned after he was suspended without pay by Israel pending an internal investigation into his actions during the shooting that left 17 people dead, Israel said. Peterson was eligible for retirement.
</p>
<p>
 Trump has seized on the story, slamming Peterson by name in an attempt to prove that more people inside schools needs to be armed in case of a shooting.
</p>
<p>
 Trump told reporters earlier on Friday that Peterson "certainly did a poor job" and was a "coward."
</p>
<p>
 "He trained his whole life," Trump said on the South Lawn of the White House. "But when it came time to get in there and do something he didn't have the courage or something happened. But he certainly did a poor job. There's no question about that."
</p>
<p>
 The Peterson story, however, undercuts Trump's point that an armed official with gun training could have stopped the deadly shooting. Scott was armed and failed to do so.
</p>
<p>
 Trump, asked during his news conference for specific proposals he would push on guns after the Florida shooting, listed improving background checks, getting rid of bump stocks and thwarting the mentally ill from buying weapons.
</p>
<p>
 One thing Trump did not mention: Raising the age limit to buy certain types of weapons, something he has previously proposed. The NRA is against any change to age limits for buying weapons.
</p>
<p>
 Trump also said that he talked to House Speaker Paul Ryan on Friday morning and mentioned speaking to Senate Majority Leader Mitch McConnell.
</p>
<p>
 The comments tie into Trump's push to arm some educators, including teachers, to deter school shootings. Trump has argued that officers outside the school don't care about the students the same way teachers do.
</p>
<p>
 "We need offensive capability and we are going to be doing something about it," Trump said.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Brian Lowry, ('Edition CNN',)
 </author>
 <date>
  2018-02-06T17:26:53+00:00
 </date>
 <article>
<t>
 'The Gilded Age' review: PBS documentary
</t>
<d>
 'The Gilded Age' review: PBS looks at income inequality in the late 19th century, with its parallels to today, in Sarah Colt's 'American Experience' documentary
</d>
<p>
 Presented under the "American Experience" banner, "The Gilded Age" isn't subtle in drawing lines between what happened 120 years ago and its lingering ripples on modern society. But if the past really is truly prologue, watching the film sounds some cautionary notes, as it chronicles the rise of robust third parties -- lobbying for the government to provide greater aid and protection to workers, to the horror of corporate elites.
</p>
<p>
 Colt covers an inordinate amount of ground in two hours, spending a fair amount of time on figures like William Jennings Bryan, who rallied Democrats around populist themes while Republicans courted business; and Henry George, who decried growing inequality and mounted a notable if ultimately unsuccessful campaign to become mayor of New York.
</p>
<p>
 "The Gilded Age" also explores the opulent lifestyles of business titans like J.P. Morgan and Andrew Carnegie, contrasting that with the young farm workers and former slaves that migrated to the cities in pursuit of financial opportunities, rapidly doubling New York's population.
</p>
<p>
 PBS's "The Gilded Age" uses that history as a prism into a present still wrestling with these themes, including the debate over money's influence over politics since the Supreme Court's 2010 Citizens United ruling regarding campaign-finance laws. As historian Nell Irvin Painter asks, "Do our governments represent wealth or do they represent people? This is a fundamental issue, which is with us today."
</p>
<p>
 As a footnote, "The Gilded Age" is also the kind of fundamental informational programming that underscores the rationale for supporting PBS, which can turn a black-and-white look at the 1890s into a colorful rumination on where America stands here and now.
</p>
<p>
 <em>
  "The Gilded Age" will air Feb. 6 at 9 p.m. on PBS.
 </em>
</p>
<p>
 Producer-director Sarah Colt offers a spare, sobering look at the U.S. 30 years after the Civil War, as railroads knit the country together, making national distribution of goods -- and the enormous wealth that went with it -- possible.
</p>
<p>
 With striking speed, American society underwent a transformation that concentrated wealth in the hands of a few, while creating tension and acrimony as industrialists leveraged their clout to influence government. As historian H.W. Brands observes, "The essence of democracy is equality. Everybody gets one vote. The essence of capitalism is inequality. Rich people are much more powerful than poor people."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Mick Krever, ('Edition CNN',)
 </author>
 <date>
  2018-02-08T17:00:15+00:00
 </date>
 <article>
<t>
 Putin challenger apologizes for US election meddling
</t>
<d>
 Ksenia Sobchak, who is challenging Russian President Vladimir Putin in March's election, apologized for any Russian meddling in the US election in 2016.
</d>
<p>
 Sobchak is perhaps the highest-profile challenger in an election it is widely assumed Putin will easily win.
</p>
<p>
 Many skeptical analysts of Russian politics have accused her of being an opposition stooge -- allowed to run by the Kremlin in order to legitimize the election. In defense of the claim they cite -- among other things -- the fact that the former TV socialite's father was, as mayor of St. Petersburg, mentor to none other than Putin.
</p>
<p>
 Sobchak rejected that idea.
</p>
<p>
 "They are afraid of Alexei Navalny," she said, speaking of the opposition leader who has been barred from running. But "they are not that much afraid of a blonde girl from TV shows."
</p>
<p>
 "In [a] totalitarian regime, this is in the only kind of thing you can do. You can make someone feel they can underestimate you, and then you do your job."
</p>
<p>
 Navalny has called for Russians to boycott the election. He was prevented from running because of an embezzlement conviction that he and his supporters contend is politically motivated.
</p>
<p>
 Sobchak told Amanpour that boycotting is not an option.
</p>
<p>
 "Let's be logical about this," she said. "Alexei Navalny wanted to take part in those elections."
</p>
<p>
 "So if he would be accepted as a candidate by [the] Kremlin, wouldn't it [legitimize] Putin as well? And then would he call people to boycott? Of course, no."
</p>
<p>
 "He would tell people, 'Go and vote for me, let's show that, okay, we cannot win but millions of us are against Putin.'"
</p>
<p>
 "It sounds we really had something to do with it," Sobchak told CNN's Christiane Amanpour. "If that's so,  I want to say sorry."
</p>
<p>
 "It's unacceptable for any country to meddle into the affairs of another country," she added.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
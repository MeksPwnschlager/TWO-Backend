<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Hamdi Alkhshali and Eric Levenson, ('Edition CNN',)
 </author>
 <date>
  2018-02-19T21:22:53+00:00
 </date>
 <article>
<t>
 Iran official: Tel Aviv would be 'razed to the ground' if Israel attacks
</t>
<d>
 Iran issued a strong warning to Israel on Monday in response to Israeli Prime Minister Benjamin Netanyahu's fiery speech at last weekend's Munich Security Conference.
</d>
<p>
 Rezaie's reaction came a day after Netanyahu spoke at the Munich Security Conference and outlined what he said was an Iran seeking to dominate the region with aggression and terror.
</p>
<p>
 "Israel will not allow Iran's regime to put a noose of terror around our neck," Netanyahu said. "We will act without hesitation to defend ourselves, and we will act, if necessary, not just against Iran's proxies that are attacking us, but against Iran itself."
</p>
<p>
 Iranian Foreign Minister Mohammad Javad Zarif responded afterward, saying that "you were the audience for a cartoonish circus just this morning, which does not even deserve a dignity of a response."
</p>
<p>
 Tensions between Iran and Israel have escalated recently, with the ongoing Syrian war spilling over into a wider proxy fight.
</p>
<p>
 Israeli forces then attacked 12 targets in Syria, including four targets described as Iranian, the Israeli military said.
</p>
<p>
 "Tel Aviv would be razed to the ground if the Israeli regime took any military action against the Islamic Republic," Iran's Expediency Council secretary Mohsen Rezaie said Monday, according to Iran's state-run Tasnim news.
</p>
<p>
 Rezaie also said he will "not give any opportunity for Netanyahu to flee" if an "unwise move" is made against Iran, the semi-official Fars News Agency reported.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
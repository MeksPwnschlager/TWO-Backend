<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Joe Sterling and Amanda Coakley, ('Edition CNN',)
 </author>
 <date>
  2018-02-24T13:34:52+00:00
 </date>
 <article>
<t>
 International Red Cross says 21 staffers paid for sexual services
</t>
<d>
 The International Committee of the Red Cross said 21 staff members have been dismissed or resigned for "paying for sexual services" since 2015.
</d>
<p>
 The revelation comes as other aid organizations have been hit by allegations of sexual harassment and exploitation by aid workers.
</p>
<p>
 Daccord said staffers are "contractually bound by the ICRC's code of conduct" that bans the purchase of sexual services.
</p>
<p>
 "This ban, in place since 2006, applies worldwide and at all times, including in locations where prostitution is legal, as the ICRC believes that staff paying for sex is incompatible with the values and mission of the organization."
</p>
<p>
 The ICRC -- which has more than 17,000 staff members worldwide -- is concerned that some incidents have gone unreported while others have been reported but not dealt with correctly.
</p>
<p>
 Daccord said he has "contacted other humanitarian organizations with the aim of addressing issues that require a collective effort," including stopping offenders from transferring from one agency to another.
</p>
<p>
 "I am committed to fostering an ICRC culture that encourages staff to prevent, detect and report misconduct. All allegations are investigated. People must feel safe and empowered to raise concerns, and we have encouraged staff to make use of a dedicated, confidential email address to do so," he said.
</p>
<p>
 "It is so important that the silence that has surrounded this issue has been shattered. This is a watershed moment for the humanitarian sector as a whole. We owe it to the people we serve to behave with absolute integrity."
</p>
<p>
 <h3>
  'It's a large-scale problem'
 </h3>
</p>
<p>
 "We have to recognize that this is not the occasional bad apple but a structural sectorwide problem," Watkins told the House of Commons International Development Committee. "This is a real problem; it is systemic, it's a large-scale problem, and we have to fix it."
</p>
<p>
 Other aid groups are grappling with sexual misconduct allegations in their ranks and have fired and disciplined staff.
</p>
<p>
 The United Nations also has been hit with allegations of abuse. In 2016, the global organization said it had received 145 allegations of sexual exploitation and abuse -- 80 of which were associated with uniformed peacekeepers and 65 with civilian personnel.
</p>
<p>
 A 2017 UN report on the issue said sexual exploitation has been a problem for years, compounded by weakly enforced hiring standards and lack of a screening system of candidates for a prior history of related misconduct.
</p>
<p>
 <h3>
  Register for aid workers urged
 </h3>
</p>
<p>
 Oxfam's embattled chief executive, Mark Goldring, apologized to British lawmakers for his organization's conduct in the aftermath of the 2010 Haiti earthquake.
</p>
<p>
 He said Tuesday that about 7,000 people have stopped making regular donations to Oxfam since the Times of London newspaper first reported on the allegations. Goldring also said the charity has received around 26 fresh accusations of sexual abuse and exploitation since the scandal broke.
</p>
<p>
 "It was common knowledge that this was going on across the sector, and no one knew how to deal with it," said Pauline Latham, a Conservative member of Parliament.
</p>
<p>
 Latham urged the establishment of an international register for aid workers.
</p>
<p>
 Haiti, which has criticized the UK charity for not notifying it of the findings, is now conducting its own investigation.
</p>
<p>
 Winnie Byanyima, Oxfam International's executive director, said that women often end up being punished in countries such as Haiti where prostitution is illegal if authorities are notified.
</p>
<p>
 An additional two staff members suspected of sexual misconduct didn't have their contracts renewed, Yves Daccord, the ICRC's director-general, said in a statement Friday.
</p>
<p>
 "This behavior is a betrayal of the people and the communities we are there to serve. It is against human dignity and we should have been more vigilant in preventing this," Daccord said.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Ashley Strickland, ('Edition CNN',)
 </author>
 <date>
  2018-05-16T14:02:16+00:00
 </date>
 <article>
<t>
 Treasure trove reveals origins of 800-year-old shipwreck
</t>
<d>
 The discovery of a shipwreck, thousands of luxury items and the equivalent of a centuries-old "Made in China" label has the makings of a mystery. Now, researchers have combined intriguing evidence to learn more about the cargo and where it came from.
</d>
<p>
 In 1996, when the wreck was recovered by archaeologists, they thought it might have been from the mid- to late 13th century, based on the dating of a single resin sample. It was most likely sailing from Quanzhou in southern China to Tuban on the island of Java.
</p>
<p>
 In the late 1990s, more than 7,500 pieces -- half the cargo -- was donated to the Field Museum. In 2014, an archaeologist with the museum, Lisa Niziolek, began corresponding with ceramic experts in China and Japan and discovered that some of the Java wreck ceramics were more similar to pieces made in the 11th and 12th century. That, combined with inscriptions suggesting that some of the pieces were "Made in Jianning Fu," brought up the question of more accurate dating.
</p>
<p>
 Niziolek and her colleagues Gary Feinman, Jun Kimura, Amanda Respess and Lu Zhang decided to submit more samples from the collection for a more precise method of radiometric dating called accelerated mass spectrometry.
</p>
<p>
 "Our findings place the sinking of the Java Sea Wreck vessel about 100 years earlier than initially thought -- closer to the second half of the twelfth century instead of the later thirteenth century," Niziolek and Feinman wrote in an email.
</p>
<p>
 Why is the difference of a hundred years so significant?
</p>
<p>
 During the 12th century, maritime trade was increasing and changing to more open economic trade, she said.
</p>
<p>
 "Consequently, the Southern Song dynasty (1127-1279 CE) court encouraged Chinese traders to go abroad instead of relying on foreign missions traveling to China," Niziolek said. "This is also a time when competition between maritime societies of Southeast Asia heightened.  The great empire of Srivijaya, which once controlled much of the maritime trade in the region, had fallen, leaving a vacuum for other polities to fill."
</p>
<p>
 The inclusion of those "Made in China"-esque inscriptions was key, she said.
</p>
<p>
 "Our new dataset also included research based on an inscription found on two ceramic box bases," Niziolek and Feinman said. "This inscription provides a place name, Jianning Fu, which was only assigned that name by the Song government from 1162 until 1278 CE, when it was changed to Jianning Lu by the Yuan dynasty."
</p>
<p>
 <h3>
  An underwater mystery
 </h3>
</p>
<p>
 Piecing together the truth about a shipwreck can be difficult for many reasons. The salinity of the ocean, as well as sea creatures, can degrade the condition and integrity of artifacts. But looting is also a big issue. In order for a research institution to safeguard a wreck site, it must to be able to document it quickly after discovery and partner with local communities. But they're often limited by funding and other challenges that take time to overcome, allowing looters to reach the wreck first.
</p>
<p>
 The less complete a wreck site is, the more questions will remain.
</p>
<p>
 These factors encouraged Niziolek and her colleagues to test multiple artifacts. Two resin samples, one ivory sample and the inscriptions on the ceramic boxes and jars from the wreck were included in the analysis.
</p>
<p>
 The resin and ivory samples were badly damaged, and when tested, they returned dates ranging from 889 to 1261. Amazingly, once the cork-like growth was removed from the resin, it was still glassy and sweet-smelling.
</p>
<p>
 Taken alone at face value, the earliest dates from the organic ivory and resin materials would have thrown off accurate dating for the wreck as a whole. Organic material is easily affected by the ocean, and this wide date range suggests it affected the dating, too.
</p>
<p>
 "What surprised us the most were the early dates obtained through the radiocarbon dating of the resin and the elephant tusk samples," Niziolek and Feinman said.  "These were sometimes much older than the earliest date the ship could have sailed based on the Jianning Fu inscription (1162 CE). This study explicitly illustrates how important it is to look at multiple lines of evidence when trying to answer archaeological questions."
</p>
<p>
 This is why the team focused on a combination of ceramic analysis based on styles and forms, accelerator mass spectrometry and inscriptions found on some of the ceramic vessels.
</p>
<p>
 These inscriptions are not the earliest discovered. Markings on ceramics can be dated back to the Han Dynasty, which lasted from 206 BC to 220 AD. Most marks on ceramics at the time were family names, numbers, or inscriptions that identified the function of the vessel or were marks of felicitation, Niziolek said.
</p>
<p>
 <h3>
  Piecing together the puzzle
 </h3>
</p>
<p>
 Accurate dating isn't just important for the wreck itself. Being able to link similar materials from a shipwreck to a place can knit historical gaps together.
</p>
<p>
 "Other archaeologists could use this material to date kiln sites where ceramics were produced, ports where merchants lived, and domestic and religious sites where similar pieces were used," Niziolek and Feinman said. "Furthermore, the number of Chinese ceramics recovered at the Java Sea Shipwreck site in 1996 (more than 12,000) is evidence of the scale and intensity of mass production in China at the time.  One estimate puts the original number of ceramic vessels on board at 100,000 (or 30 tons).  This is a huge number of trade items and this is just from a single trading ship. This is also evidence of the high demand for Chinese ceramics abroad for use in houses, temples, palaces, and government buildings and as trade goods within local systems."
</p>
<p>
 This study also shows the important of re-evaluating artifacts with new technology -- not something that often happens.
</p>
<p>
 The Field Museum is collaborating with university researchers to determine the source of the resin, discover kiln sites for the ceramics and determine the origin of the ivory tusks.
</p>
<p>
 The Breaker Shoal Shipwreck in the Philippines from about the same time period had a cargo that is amazingly similar to that of the Java Sea Shipwreck, Niziolek said.
</p>
<p>
 "In conjunction with collaborators from China and other nations, we hope to incorporate some of that material into our project, as well as material from other archaeological sites in East and Southeast Asia and the Indian Ocean World, to investigate long-distance trade networks and processes associated with globalization 800 years ago," Niziolek and Feinman said.
</p>
<p>
 Now, researchers at the Field Museum of Natural History in Chicago have combined evidence to learn more about the ship's cargo and where it came from. Their study detailing the findings was published Wednesday in the Journal of Archaeological Science: Reports.
</p>
<p>
 Fishermen found the wreck in the 1980s. A cargo including thousands of ceramic pieces, cast iron and luxury trade goods, like elephant tusks and resin used for incense, is all that remains of the wreck after the wooden hull disintegrated.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
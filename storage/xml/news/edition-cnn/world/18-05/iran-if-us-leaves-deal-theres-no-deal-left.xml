<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Azadeh Moshiri, ('Edition CNN',)
 </author>
 <date>
  2018-05-02T20:20:50+00:00
 </date>
 <article>
<t>
 Iran: If US leaves deal, there's 'no deal left'
</t>
<d>
 In the first major interview by a representative of the Iranian government since Israeli Prime Minister Benjamin Netanyahu's broadside on the Iran nuclear deal, Iran's Ambassador to the UK told CNN that if the United States pulls out of the agreement, "it means that there is no deal left."
</d>
<p>
 US President Donald Trump is facing a May 12 deadline to decide whether to continue waiving sanctions on Iran -- in essence, to decide whether the United States should remain in the agreement.
</p>
<p>
 Mike Pompeo, the new US Secretary of State, said Tuesday that the Administration is "deciding on the next steps for the flawed [deal]."
</p>
<p>
 Trump has suggested that the deal -- formally known as the JCPOA, or Joint Comprehensive Plan of Action -- needs to be renegotiated. Even French President Emmanuel Macron, a defender of the deal, said in Sydney on Wednesday that it was "not sufficient."
</p>
<p>
 But Baeidinejad ruled out that possibility.
</p>
<p>
 It is "totally unacceptable," he said, for the deal's implementation to be conditional on new agreements.
</p>
<p>
 "JCPOA was negotiated on its own merits, and still it's working and it should be continued to be enforced."
</p>
<p>
 <h3>
  Allegations by Israel
 </h3>
</p>
<p>
 Netanyahu claimed earlier this week that Israel has evidence Iranian officials were "brazenly lying" when they said the country was not pursuing nuclear weapons, and said that the Islamic Republic is storing an "atomic archive" at a secret compound. He suggested that this means the Iran nuclear deal is "completely flawed."
</p>
<p>
 Reacting to the accusations, the ambassador pointed to the IAEA's own investigations.
</p>
<p>
 "There have been some allegations against conducting of such activities in Iran, but never was there ever any proof presented to Iran," he said.
</p>
<p>
 "The board of governors of IAEA closed this file permanently. So that was based on the realities on the ground."
</p>
<p>
 <h3>
  Europe's charm offensive
 </h3>
</p>
<p>
 Several American allies in Europe are desperately trying to salvage the agreement ahead of that May 12 deadline.
</p>
<p>
 French President Emmanuel Macron and German President Angela Merkel both pressed their cases with Trump in Washington last week.
</p>
<p>
 But Baeidinejad accused those countries of simply appeasing Trump and "giving him more concessions."
</p>
<p>
 "The reality is" that they have not been able to convince the American President, he said.
</p>
<p>
 "We should be very clear to the United States that we have a deal, that we want to stay in the deal, and this deal should be effectively implemented."
</p>
<p>
 "The consequence would be that Iran would in fact be ready to go back to the previous situation," Hamid Baeidinejad told Christiane Amanpour in London on Wednesday.
</p>
<p>
 "It could be enriching uranium, it could be redefining our cooperation with the agency [IAEA], and some other activities that are under consideration."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
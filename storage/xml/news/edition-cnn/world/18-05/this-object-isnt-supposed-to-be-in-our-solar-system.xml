<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Ashley Strickland, ('Edition CNN',)
 </author>
 <date>
  2018-05-21T12:21:01+00:00
 </date>
 <article>
<t>
 This object isn't supposed to be in our solar system
</t>
<d>
 For billions of years, it lived in our solar system without us even knowing it was there. But this object couldn't remain hidden around Jupiter forever.
</d>
<p>
 The latest research of the object was published Monday in the Monthly Notices of the Royal Astronomical Society: Letters.
</p>
<p>
 Like 'Oumuamua, the exo-asteroid was spotted by the Pan-STARRS 1 telescope in Hawaii. And its orbit was the main reason researchers noticed it.
</p>
<p>
 "The object was the first observational example of the type of orbits we were studying and we wanted to understand what was its origin," Helena Morais, study author and professor of statistics at Sao Paulo State University in Brazil, said in an email.
</p>
<p>
 At first glance, 2015 BZ509 is just one of many objects orbiting the gas giant Jupiter in a stable configuration called a resonance. Though all of the planets and most of the objects in our solar system orbit the sun by moving in the same direction, the exo-asteroid is going its own way. 2015 BZ509 moves in the opposite direction in a retrograde orbit.
</p>
<p>
 "The asteroid and Jupiter take the same amount of time to complete one orbit around the Sun but one moves clockwise and the other counter-clockwise so they pass by each other twice per each full orbit," Morais wrote. "This pattern is repeated forever -- it is a stable configuration -- in a simplified model with only the Sun, Jupiter and the asteroid. We saw that when we include the other planets it is still very stable, over the solar system's age."
</p>
<p>
 That orbit is the same path the object has always followed, meaning it could not have formed in our solar system. If it were "native" to our solar system, it would have inherited the direction from the gas and dust that formed all of the other planets and objects.
</p>
<p>
 But how did it get here in the first place?
</p>
<p>
 "Stars form in packed groups called  stellar nurseries and then later disperse as they move around the galaxy center," Morais said. "Stars in these nurseries are so close to each other  that they can exchange material amongst them by mutual gravitational interactions. Capture of 2015 BZ509 must have happened in the early stages of the solar system, about 4.5 billion years ago."
</p>
<p>
 The exo-asteroid serves as a warning for objects like 'Oumuamua that may enter our solar system.
</p>
<p>
 "'Oumuamua is a visitor to the solar system," Morais said. "That was a nice and important confirmation that interstellar objects can pass by. If they pass by then they may also be captured in a stable orbit as it is the case of  2015 BZ509."
</p>
<p>
 'Oumuamua loosely means "a messenger that reaches out from the distant past." 2015 BZ509 will have to wait on a catchy name; asteroids are named by  the International Astronomical Union.
</p>
<p>
 Ground- and space-based telescopes, like Hubble and Spitzer, are continuing to track 'Oumuamua for as long as they can. 'Oumuamua will pass Jupiter in May, go beyond Saturn's orbit in January and then leave our solar system, bound for the Pegasus constellation. It is not expected to be captured and take up residence in our solar system.
</p>
<p>
 Morais said researchers would be able to learn more about 2015 BZ509's parent star if they could observe the exo-asteroid and identify its composition.
</p>
<p>
 In 2017, the first observed interstellar visitor, an asteroid named 'Oumuamua, was found traveling through our solar system. Now, for the first time, astronomers have discovered a permanent resident that moved in during the early stages of our solar system's development, about 4.5 billion years ago.
</p>
<p>
 The researchers call this exo-asteroid, known as 2015 BZ509, an "interstellar immigrant." It's known as an exo-asteroid because it originated outside our solar system.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
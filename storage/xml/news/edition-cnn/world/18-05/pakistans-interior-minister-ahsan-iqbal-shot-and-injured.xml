<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Sophia Saifi and Adeel Raja, ('Edition CNN',)
 </author>
 <date>
  2018-05-06T14:41:21+00:00
 </date>
 <article>
<t>
 Pakistan's Interior Minister Ahsan Iqbal shot and injured
</t>
<d>
 Pakistan's Interior Minister, Ahsan Iqbal, was shot and wounded in his shoulder while attending a provincial assembly meeting in Narowal, Punjab province, according to Imran Kishwar, Narowal district police.
</d>
<p>
 A police source in Pakistan's Narowal district of Punjab said initial investigations suggest the motive for the shooting is linked to the issue that spawned violent anti-blasphemy demonstrations in Pakistan and was spearheaded by the hardline Islamist movement Tehreek-e Labbaik.
</p>
<p>
 CNN does not know if the gunman is a member of the group. The police source went on to say that a report will be submitted to the Punjab district government and more details will be shared on Monday.
</p>
<p>
 Last year, Tehreek-e Labbaik organized so-called anti-blasphemy demonstrations across Pakistan. The protesters demanded the resignation of Pakistan's Law Minister, Zahid Hamid, for what they considered blasphemy after parliamentary bills were amended, weakening rules that require lawmakers to reference the Prophet Mohammed when taking their oaths.
</p>
<p>
 The protests turned violent after the Pakistan army was called in to restore order, and hundreds of people were reported injured, with at least two people dead. The government had stated that the issue was a misunderstanding and they never planned to change the blasphemy laws.
</p>
<p>
 Prime Minister Shahid Khaqan Abbasi has "strongly condemned" the attack on Mr. Ahsan Iqbal and has called for an immediate report on the incident from the Inspector General of Punjab Police, according to a statement from his office.
</p>
<p>
 "Those who indulged in this heinous act will be brought to justice,"  he said, adding that he had spoken to Iqbal and he was in "high spirits."
</p>
<p>
 He also warned that his party, the Pakistan Muslim League, "will not be browbeaten into submission."
</p>
<p>
 "As he got out of a car, a young man shot him. The assailant has been apprehended," Kishwar said.
</p>
<p>
 Police identified the shooter as Abid Hussain, a 21-year-old from Neelum village in Narowal, Punjab.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Richard Roth and Elizabeth Joseph, ('Edition CNN',)
 </author>
 <date>
  2018-05-05T00:18:54+00:00
 </date>
 <article>
<t>
 Trump pick for UN migration job says he is sorry for anti-Muslim tweets
</t>
<d>
 A Trump administration nominee to lead the United Nations migration agency faced an onslaught of questions from reporters Friday about his anti-Muslim tweets and the sharing of others.
</d>
<p>
 Isaacs is in a three-way race to lead the International Organization for Migration, based in Geneva. US Ambassador to the UN Nikki Haley hosted a reception this week for Isaacs in New York so that he could meet some of the people who may decide if he is elected.
</p>
<p>
 Isaacs told reporters he met with representatives of 90 countries in the last two days. But the tweets can't be dodged, especially inside the UN, with dozens of Muslim countries as members.
</p>
<p>
 Isaacs said his online comments and retweets sometimes were made at home and when he had no idea that they would come under scrutiny, as they have since his nomination. He said his Internet bio says at the top that "tweets aren't endorsements" and that a lot of retweets are to "stimulate conversation."
</p>
<p>
 The man who once tweeted Austria and Switzerland should consider building a wall in the Alps to "control their borders from refugees," said, "What I apologized for was that I did not mean to hurt anyone's feelings. That's not in my nature to hurt people."
</p>
<p>
 He said much of what he tweeted was taken out of context. "I will have to say that Twitter, 140 characters, is not a very good way to make comments, but it's also not a good way to capture the context of what was said ... Would I tweet again? No, I wouldn't. But if I'm elected the director general or if I'm not, I believe in the human rights of the individuals. I believe every individual is unique, has a valuable life, and they all deserve equal and fair treatment."
</p>
<p>
 The election is June 29 in Geneva. Isaacs' competitors are the current deputy secretary-general of the International Organization for Migration, Laura Thompson of Costa Rica, and Antonio Vitorino, a former deputy prime minister of Portugal.
</p>
<p>
 If he wins, Isaacs vows to be in the field during crises
</p>
<p>
 "You probably will not see me at a lot of diplomatic meetings, but you will see me at every disaster in the world. You will see me on the front lines where migration is going on. You will see me on the front lines where immigration and human suffering is going on," said Isaacs, who is vice president for programs and government relations for Samaritan's Purse, a worldwide humanitarian relief organization.
</p>
<p>
 CNN's KFile has reported it reviewed more than 140 previously unreported tweets from Isaacs before he was nominated. Isaacs on Friday there were only 15 that were controversial.
</p>
<p>
 Toward the end of the press conference, Isaacs said he would not take any more questions about his Twitter account. Asked whether he had advice for younger political or humanitarian hopefuls. Isaacs said: "You better be careful on social media."
</p>
<p>
 Isaacs told reporters at the United Nations Correspondents Association event: "There's nothing that I can say to change what I said. I've apologized for the hurt that I've caused. I have hundreds of Muslim friends around the world, and I've had them for years. So I do not believe that Islam is a violent religion, and I have no distinction, no discrimination against anybody of any religion or no religion."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
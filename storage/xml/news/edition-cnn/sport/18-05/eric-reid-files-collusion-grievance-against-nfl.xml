<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Jill Martin, ('Edition CNN',)
 </author>
 <date>
  2018-05-02T18:59:31+00:00
 </date>
 <article>
<t>
 Eric Reid files collusion grievance against NFL
</t>
<d>
 Eric Reid, who joined Colin Kaepernick in kneeling during the National Anthem when the two were San Francisco 49ers teammates, has filed a grievance against the NFL, alleging that teams are colluding to deny him a job for the upcoming season.
</d>
<p>
 The NFL Players Association released a statement Wednesday saying it was aware that Reid's legal representation filed the claim, "which will be heard through the arbitration process as spelled out in our collective bargaining agreement."
</p>
<p>
 "Our union supports Eric and we are considering other legal options to pursue," the NFLPA said.
</p>
<p>
 The NFL, citing the confidentiality provision of the Collective Bargaining Agreement, declined to comment.
</p>
<p>
 <a>
  Report: Eric Reid Asked About National Anthem Protests During Bengals Meeting
 </a>
</p>
<p>
 In March, Reid posted tweets suggesting his social activism is hurting him in the free-agent market.
</p>
<p>
 "The notion that I can be a great signing for your team for cheap, not because of my skill set but because I've protested systemic oppression, is ludicrous," Reid wrote. "If you think is, then your mindset is part of the problem too."
</p>
<p>
 In a response to a tweet, Reid said, "GMs aren't the hold up broski. It's ownership. People who know football know who can play. People who know me, know my character."
</p>
<p>
 "It's ironic that the stand Colin and I took was not to stand at all, but it was to take a knee," Reid said at the event last month. "Colin didn't kneel in protest of a song or a symbolic piece of fabric, but he knelt to bring awareness to the human rights still being denied to people of color.
</p>
<p>
 "He didn't kneel because he is anti-America, but because he believes America should be held to the standard that it has written on paper, that we are all created equal."
</p>
<p>
 "We chose to kneel because it's a respectful gesture," Reid wrote. "I remember thinking our posture was like a flag flown at half-mast to mark a tragedy.
</p>
<p>
 "It baffles me that our protest is still being misconstrued as disrespectful to the country, flag and military personnel. We chose it because it's exactly the opposite. It has always been my understanding that the brave men and women who fought and died for our country did so to ensure that we could live in a fair and free society, which includes the right to speak out in protest.
</p>
<p>
 "It should go without saying that I love my country and I'm proud to be an American. But, to quote James Baldwin, 'exactly for this reason, I insist on the right to criticize her perpetually.'"
</p>
<p>
 Reid, a safety, is currently a free agent after playing for the 49ers for five seasons. He was a first-round NFL draft pick in 2013 and was named that season to the Pro Bowl and the NFL All-Rookie team. Reid played in 13 games last season, starting 12.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
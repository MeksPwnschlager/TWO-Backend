<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Danielle Rossingh, ('Edition CNN',)
 </author>
 <date>
  2018-02-11T10:01:35+00:00
 </date>
 <article>
<t>
 Winter Olympics: Teen Red Gerard wins first Team USA gold
</t>
<d>
 Red Gerard, 17, pulls off a shock win in the men's slopestyle to win Team USA's first gold medal at the Winter Olympics.
</d>
<p>
 <a>
  READ: Winter Olympics Day 2 as it happened
 </a>
</p>
<p>
 <a>
  READ: Best photos from PyeongChang 2018
 </a>
</p>
<p>
 The diminutive Gerard, the second-youngest of seven siblings who grew up in Cleveland, Ohio before moving to Colorado, seemed stunned as he became the youngest Olympic snowboarding champion ever.
</p>
<p>
 "I was surprised to make it even to the finals of the Olympics and to get first is above me, I don't even know what's going on to be honest," Gerard told the British Broadcasting Corporation.
</p>
<p>
 "I cannot believe what has just happened - it is insane."
</p>
<p>
 <a>
  READ: Learn your slopestyle from your moguls -- sport-by-sport guide
 </a>
</p>
<p>
</p>
<p>
 Parrot put down a near-flawless run as the last rider to go down, but it wasn't good enough to knock Gerard off the top spot.
</p>
<p>
 McMorris, who had been in the lead after two rounds, took his second straight Olympic slopestyle bronze less than a year after crashing into a tree, suffering a collapsed lung, ruptured spleen, fractured jaw, ribs, pelvis and left arm.
</p>
<p>
 "It feels pretty special to stand on this podium again after everything," McMorris told reporters. "I need to pinch myself because I should have some permanent damage from what my accident entailed."
</p>
<p>
</p>
<p>
 The US has not had to wait until the second day of an Olympic Games -- Summer or Winter -- to win its first gold medal since 1998.
</p>
<p>
 He was a child prodigy, who could walk at nine months, started snowboarding at the age of two and managed to do a standing backflip by the time he was six years old, according to the Washington Post. He joined the American national team just four years ago.
</p>
<p>
 His Olympic journey is set to continue in the men's big air competition, which will be making its debut in an Olympic Games on Feb. 21.
</p>
<p>
 <h3>
  Historic luge silver
 </h3>
</p>
<p>
 Later Sunday, Chris Mazdzer added another medal for Team USA and the first men's luge medal for the US when he took silver behind Austria's David Gleirscher.
</p>
<p>
 The 23-year-old Gleirscher, who hadn't even won a World Cup event before the Games, claimed Austria's first luge gold in 50 years after the leader and last man down, defending champion Felix Loch of Germany, made a big mistake on his final run to finish fifth.  Germany's Johannes Ludwig took the bronze.
</p>
<p>
 Meanwhile, Perrine Laffont became the first Frenchwoman to win the Olympic moguls title with victory in Pyeongchang.
</p>
<p>
 The 19-year-old beat defending champion Justine Dufour-Lapointe of Canada, with Yulia Galysheva of Kazakhstan in third.
</p>
<p>
 Dutch speed skater Sven Kramer set a new world record to clinch a third consecutive 5,000m gold.
</p>
<p>
 The 31-year-old beat Canada's Ted-Jan Bloemen into second, with Norway's Sverre Lunde Pedersen in third.
</p>
<p>
 <a>
  READ: The speed skater who gets paid in cryptocurrency
 </a>
</p>
<p>
 In the cross-country arena, Simen Hegstad Krueger led a Norwegian cleansweep in the men's 15km + 15km skiathlon, while Germany's Arnd Peiffer won the men's biathlon 10km sprint.
</p>
<p>
 An emotional Evgenia Medvedeva smashed her own world record of 80.85 with a score of 81.06 in her opening performance in the figure skating short program.
</p>
<p>
 The 18-year-old, who has never been beaten in competition, scored 10 points for the Olympic Athletes from Russia (OAR) team and was well ahead of the next best performer, Italy's Carolina Kostner who scored 75.10.
</p>
<p>
 The 17-year-old crashed on both of his first two runs amid high winds at Pheonix Park, but pulled off a spectacular final effort that no one could match to become the youngest American man to win an Olympic winter gold medal since 1928.
</p>
<p>
 Sitting in 11th place after two runs, Gerard wowed the judges with his descent through a series of rails, ramps and huge jumps to beat Canadian riders Max Parrot and Mark McMorris to the silver and bronze respectively.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Sarah Faidell, Taehoon Lee and Jo Shelley, ('Edition CNN',)
 </author>
 <date>
  2018-02-24T22:16:15+00:00
 </date>
 <article>
<t>
 David Duncan, Canadian skier, arrested and accused of stealing car at Olympics
</t>
<d>
 Canadian skier David Duncan, his wife, Maja Margrethe Duncan, and trainer William Ryan Raine spent Friday night behind bars, accused of stealing a car during the Winter Olympics in Pyeongchang, South Korea.
</d>
<p>
 A South Korean police source told CNN that Raine, the driver, had a blood alcohol level of 0.162 when tested one hour after stealing the car. That's more than three times South Korea's legal blood alcohol limit of 0.05%.
</p>
<p>
 All three Canadians were arrested for car theft, with Raine also charged with drunken driving, according to the police source.
</p>
<p>
 The PyeongChang Organizing Committee for the Olympic Games acknowledged the incident and said those involved cooperated with authorities.
</p>
<p>
 The Canadian Olympic Committee sent apologies from the three on Saturday.
</p>
<p>
 "We are deeply sorry. We engaged in behavior that demonstrated poor judgment and was not up to the standards expected of us as members of the Canadian Olympic Team or as Canadians," the statement from David and Maja Margrethe Duncan read.
</p>
<p>
 William Ryan Raine, the ski cross high-performance director, called his actions "inexcusable" and apologized to the owner of the involved vehicle in his statement.
</p>
<p>
 "Words are not enough to express how sorry I am. I have let my teammates, friends and my family down," Raine said.
</p>
<p>
 The Canadians were released and Korean police concluded their investigation the next day, according to the apology statements, which were released on Saturday by Chris Overholt, the CEO and secretary general of the Canadian Olympic Committee.
</p>
<p>
 "We expect our athletes and team members to conduct themselves responsibly and in keeping with our Canadian and Olympic values. We are deeply disappointed in the behaviors of these individuals," Overholt said.
</p>
<p>
 The frigid Pyeongchang weather proved too much for the three, who said they took a vehicle they found unattended with the engine running because it was too cold outside, according to the South Korean police source, who was not authorized to speak to the media.
</p>
<p>
 The three were pulled over while driving the stolen vehicle, a pink Hummer, from downtown Pyeongchang to the Olympic Village, a distance of less than 2 miles.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Henry Young, ('Edition CNN',)
 </author>
 <date>
  2018-02-14T10:18:30+00:00
 </date>
 <article>
<t>
 PyeongChang Winter Olympics: Simi Adeagbo slides for Nigeria
</t>
<d>
 She touched a sled for the first time in September 2017. By January 2018, she had qualified for the Winter Olympics.
</d>
<p>
 "I thought I would be a summer Olympian but a second chance came about through the sport of skeleton," Adeagbo tells CNN.
</p>
<p>
 "I'm so glad it did because it's taught me a lot. I can make history for my country doing this."
</p>
<p>
 Born in Canada, Adeagbo spent her formative years in Nigeria with her parents before moving to the US aged six.
</p>
<p>
 It was there she became a four-time NCAA All American and triple-jump record holder for the University of Kentucky.
</p>
<p>
 Her goal was initially to make the US Track and Field team -- an ambition she trained for since high school.
</p>
<p>
 But Adeagbo came just inches short in trials for the Beijing 2008 Olympics, despite securing a personal best of 13.99 meters.
</p>
<p>
 That distance, recorded just weeks before the action commenced, was considerably further than any American leapt at the Games that year.
</p>
<p>
 It was scant consolation. Forced to watch on at home, Adeagbo hung up her spikes and drew a line in the sand.
</p>
<p>
 It was time to lead a normal life and leave that Olympic dream behind. Or so she thought.
</p>
<p>
 A full decade later, in the icy cold of PyeongChang, Adeagbo will once again run for 30m before launching herself into the air.
</p>
<p>
 This time she will do so onto a brakeless 62-pound stainless steel sled with all of Nigeria behind her.
</p>
<p>
 <h3>
  Transferable skills
 </h3>
</p>
<p>
 The story of three women and their "audacious" goal to become Africa's first ever entrants in the sport captivated the retired track and field athlete.
</p>
<p>
 Presuming bobsled to be a four-person sport -- which left one spot open -- Adeagbo got in contact with the team through social media.
</p>
<p>
 What she didn't know was women's bobsled is a two-person sport, meaning they already had their team, plus an alternate.
</p>
<p>
 However, through her correspondence she learned the Nigerian Bobsled and Skeleton Federation were holding general tryouts in Texas.
</p>
<p>
 Adeagbo flew from Johannesburg to Houston full of hope and took to her new sport immediately.
</p>
<p>
 Without a hint of ice in sight, she underwent a series of tests, including 45m sprints and standing long jumps.
</p>
<p>
 "You need to be strong, powerful and fast," Adeagbo explains.
</p>
<p>
 "I already had those tools from over 10 years of track and field background, and I was able to transfer those skills into a new sport, skeleton.
</p>
<p>
 "I think that's really fast-tracked my learning. Each day, I've committed myself to learning the sport, and here I am."
</p>
<p>
 <h3>
  'Making history together'
 </h3>
</p>
<p>
 Now, having qualified as Africa's sole female representative in the skeleton, Adeagbo and the Nigerian bobsled team will compete in Pyeongchang.
</p>
<p>
</p>
<p>
 "It's so awesome as female athletes to be breaking this barrier in sport. It's amazing.
</p>
<p>
 "My teammates and I have worked really hard and we're very proud of our accomplishment."
</p>
<p>
 <h3>
  'Pandemonium'
 </h3>
</p>
<p>
 "I've learned that in life, as in skeleton, you have to take the hits and keep pushing," says Adeagbo. "Because on the other side of that is victory."
</p>
<p>
 At January's North American Cup -- staged in Lake Placid, New York -- Adeagbo secured consecutive top-three finishes, edging out competitors from Canada and the US.
</p>
<p>
 If she were to replicate the feat in February, she would become the first African to make a Winter Olympic podium in the history of the Games.
</p>
<p>
 Whatever the result in snowy Pyeongchang, Adeagbo is conscious she has the chance to leave a lasting footprint.
</p>
<p>
 "We hope we can inspire future generations of athletes through this accomplishment," she says, adding her presence is going to cause "pandemonium" back home.
</p>
<p>
 "Maybe, through what we're doing, there is somebody in Nigeria right now who never considered a winter sport as an option that's changing their mind."
</p>
<p>
 She is Simidele Adeagbo, Africa's first ever female Olympic skeleton athlete.
</p>
<p>
 The last few months have been a "whirlwind" for the 36-year-old Nigerian, but her place at PyeongChang 2018 is the product of a "lifelong dream."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
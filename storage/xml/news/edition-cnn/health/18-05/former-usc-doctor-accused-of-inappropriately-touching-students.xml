<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Jessica Ravitz, ('Edition CNN',)
 </author>
 <date>
  2018-05-17T00:39:06+00:00
 </date>
 <article>
<t>
 Former USC doctor accused of inappropriately touching students
</t>
<d>
 Complaints about Dr. George Tyndall, a gynecologist for students at the University of Southern California, went back decades. Now, the university is acknowledging them.
</d>
<p>
 "As the parent of two daughters who were undergraduates and graduate students at USC, I understand how vital it is for the university to do everything it can to care for the students who put their trust in us," Nikias wrote. "While we have no evidence of criminal conduct, we have no doubt that Dr. Tyndall's behavior was completely unacceptable. It was a clear violation of our Principles of Community, and a shameful betrayal of our values."
</p>
<p>
 Though Tyndall, 71, insisted in conversations with the Los Angeles Times that he'd "done nothing wrong," more than 20 former and current USC employees interviewed by the paper offered a different story. They included nurses and medical assistants who'd served as chaperones and been in the room while Tyndall did exams. A number of them called his behavior "creepy."
</p>
<p>
 They told the paper that he had young women lie on the table fully naked to look over their bodies. He commented on their "perky breasts" and complimented their "creamy," "beautiful" and "flawless" skin.
</p>
<p>
 He moved his fingers into and out of the students at the beginning of pelvic exams, when common practice is to insert a speculum.
</p>
<p>
 "My, what a tight muscle you have," a chaperone remembered him saying time and time again to patients, according to the Times report. "You must be a runner."
</p>
<p>
 After telling students their hymens were still intact, he'd reportedly add, "Don't worry about it, your boyfriend's gonna love it."
</p>
<p>
 Patients, many of them Asian international students, stayed quiet, witnesses reported.
</p>
<p>
 "Some of them had never had a gynecological exam before," one chaperone told the Times. "They are so innocent, a lot of them."
</p>
<p>
 The paper reported that Tyndall wanted details about a student's first sexual experience. He asked a patient whether he could keep her intrauterine device after he removed it. A box containing photographs of students' genitals, taken years earlier, was found in his office.
</p>
<p>
 A number of complaints filed in 2013 by chaperones prompted an investigation by the university's Office of Equity and Diversity, which monitors discrimination and sexual misconduct. The office interviewed seven employees and a patient, according to USC, the Los Angeles Times reported, before determining that there was "no violation of school policy."
</p>
<p>
 Files kept by Neinstein, who is now deceased but served as the center's director from 1995 to 2014, were reviewed during an investigation in 2016, the USC president said in his letter. In them were accounts in which students said Tyndall made them "uncomfortable," "gave me the skeevies" and was "unprofessional."
</p>
<p>
 "Several of the complaints were concerning enough that it is not clear today why the former health center director permitted Tyndall to remain in his position," Nikias said. "Rather than elevate these complaints for proper investigation," he said, Neinstein addressed the gynecologist's behavior independently.
</p>
<p>
 The 2016 investigation began after a "frustrated" nurse visited the campus crisis rape center to seek guidance, the Times reported. Tyndall was suspended with pay. In June 2017, with a separation agreement including severance pay, he agreed to retire.
</p>
<p>
 The university only filed a complaint with the Medical Board of California in March, after Tyndall wrote a letter requesting his reinstatement at USC.
</p>
<p>
 "In hindsight, we should have made this report eight months earlier when he separated from the university," Nikias said in his letter.
</p>
<p>
 Carlos Villatoro, a spokesman for the medical board, could not comment on Tyndall's case, explaining that the investigation and complaint process is confidential.
</p>
<p>
 "I can't confirm there's an investigation taking place, but I can tell you we're looking closely at this story," he said.
</p>
<p>
 In broad terms, though, Villatoro explained that if a complaint comes in, an expert reviewer in the same specialty is assigned to review the case, study medical records and issue an opinion. If further investigation is warranted, the complaint is passed along to an investigations team to conduct interviews with witnesses and more. If the evidence in a complaint grows, it then lands on the attorney general's desk. And if the attorney general determines it's appropriate, charging documents will be filed.
</p>
<p>
 Before Tyndall stopped responding to questions from the Los Angeles Times, he told the paper he planned to keep working into his 80s. He renewed his medical license in January.
</p>
<p>
 "When I am on my deathbed," he told the paper, "I want to think there are thousands and thousands of Trojan women out there whose health I made a difference in."
</p>
<p>
 The phone number CNN found for Tyndall on Wednesday was disconnected, and an email seeking comment wasn't answered.
</p>
<p>
 USC is encouraging former students and community members to call a dedicated line with concerns and additional information about Tyndall's history at the school.
</p>
<p>
 "We understand that any unacceptable behavior by a health professional is a profound breach of trust," Nikias said. "On behalf of the university, I sincerely apologize to any student who may have visited the student health center and did not receive the respectful care each individual deserves."
</p>
<p>
 But the university didn't publicly acknowledge the history or reveal a report about the former physician's misconduct at the school's student health center until after it was contacted by the Los Angeles Times last week.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
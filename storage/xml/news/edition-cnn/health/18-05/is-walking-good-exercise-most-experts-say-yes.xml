<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Alexandra Hansen, The Conversation, ('Edition CNN',)
 </author>
 <date>
  2018-05-14T07:43:02+00:00
 </date>
 <article>
<t>
 Is walking good exercise? Most experts say yes
</t>
<d>
 We humans need to exercise in order to stay healthy. Exercise protects against disease and early death, and keeps us mobile and able to perform daily tasks.
</d>
<p>
 <st>
  Jackson Fyfe, lecturer in applied sport science, Deakin University
 </st>
</p>
<p>
 Walking alone is simply not sufficient for most people, although it may provide a platform to more specific, intense exercise. So moderate- to high-intensity aerobic and strength training should also be incorporated into regular exercise programs. Of course, this does not mean walking does not have benefits, but there are aspects of the health-promoting effects of exercise that walking alone cannot provide.
</p>
<p>
 <a>
  3 research-based tactics for your weight loss effort
 </a>
</p>
<p>
 <st>
  Carol Maher, National Heart Foundation senior research fellow in physical activity, sedentary behaviour and sleep, University of South Australia
 </st>
</p>
<p>
 <st>
  Julie Netto, lecturer, Curtin University
 </st>
</p>
<p>
 <a>
  Kids' fitness is improving -- but they still aren't as fit as their parents were
 </a>
</p>
<p>
 <st>
  Kevin Netto, associate professor, School of Physiotherapy and Exercise Science, Curtin University
 </st>
</p>
<p>
 Walking in challenging environments can be difficult, with pollution and climate being factors that detract from participation. A treadmill may suffice but who likes walking in one spot! Investigate walking groups that use shopping centres or other indoor areas in the early morning in situations where it's too hot or wet to walk outdoors. Most importantly, enjoy the experience ... exercise can be the best medicine you ever take.
</p>
<p>
 <a>
  The ideal female body type is getting even harder to attain
 </a>
</p>
<p>
 <st>
  Tim Olds, professor of Health Sciences, University of South Australia
 </st>
</p>
<p>
 A moderate walk requires about three times your resting metabolic rate, running and sport require much more -- typically about seven times. Both walking and vigorous sport will reduce your risk of dying prematurely at any age. But you have to spend much more time walking: one minute of vigorous sport is worth 3.5 minutes of walking. To reduce your risk of dying by 20%, for example, you would need to walk for 56 minutes a day. You'd get the same benefit by running for 16 minutes.
</p>
<p>
 We humans need to exercise in order to stay healthy. Exercise protects against disease and early death, and keeps us mobile and able to perform daily tasks.
</p>
<p>
 Walking is an easy, free and enjoyable form of exercise. But is a nice stroll enough to confer the life-saving benefits we know come from exercise?
</p>
<p>
 We posed this question to five specialists in the field.
</p>
 </article>
 <annotations>
  b'gANjZ29vZ2xlLmNsb3VkLmxhbmd1YWdlX3YxLnR5cGVzCkFubm90YXRlVGV4dFJlc3BvbnNlCnEAKVJxAX1xAlgKAAAAc2VyaWFsaXplZHEDQsljAAAKLAoeChw8dD5JcyB3YWxraW5nIGdvb2QgZXhlcmNpc2U/EgoVmpmZPh2amZk+CmEKUwpPTW9zdCBleHBlcnRzIHNheSB5ZXM8L3Q+PGQ+V2UgaHVtYW5zIG5lZWQgdG8gZXhlcmNpc2UgaW4gb3JkZXIgdG8gc3RheSBoZWFsdGh5LhAdEgoVmpmZPh2amZk+CtICCsMCCr4CRXhlcmNpc2UgcHJvdGVjdHMgYWdhaW5zdCBkaXNlYXNlIGFuZCBlYXJseSBkZWF0aCwgYW5kIGtlZXBzIHVzIG1vYmlsZSBhbmQgYWJsZSB0byBwZXJmb3JtIGRhaWx5IHRhc2tzLjwvZD48cD48c3Q+SmFja3NvbiBGeWZlLCBsZWN0dXJlciBpbiBhcHBsaWVkIHNwb3J0IHNjaWVuY2UsIERlYWtpbiBVbml2ZXJzaXR5PC9zdD48L3A+PHA+V2Fsa2luZyBhbG9uZSBpcyBzaW1wbHkgbm90IHN1ZmZpY2llbnQgZm9yIG1vc3QgcGVvcGxlLCBhbHRob3VnaCBpdCBtYXkgcHJvdmlkZSBhIHBsYXRmb3JtIHRvIG1vcmUgc3BlY2lmaWMsIGludGVuc2UgZXhlcmNpc2UuEG0SChWamZk+HZqZmT4KiwEKfQp4U28gbW9kZXJhdGUtIHRvIGhpZ2gtaW50ZW5zaXR5IGFlcm9iaWMgYW5kIHN0cmVuZ3RoIHRyYWluaW5nIHNob3VsZCBhbHNvIGJlIGluY29ycG9yYXRlZCBpbnRvIHJlZ3VsYXIgZXhlcmNpc2UgcHJvZ3JhbXMuEKwDEgoVmpkZPx2amRk/Cp4GCpkGCpMGT2YgY291cnNlLCB0aGlzIGRvZXMgbm90IG1lYW4gd2Fsa2luZyBkb2VzIG5vdCBoYXZlIGJlbmVmaXRzLCBidXQgdGhlcmUgYXJlIGFzcGVjdHMgb2YgdGhlIGhlYWx0aC1wcm9tb3RpbmcgZWZmZWN0cyBvZiBleGVyY2lzZSB0aGF0IHdhbGtpbmcgYWxvbmUgY2Fubm90IHByb3ZpZGUuPC9wPjxwPjxhPjMgcmVzZWFyY2gtYmFzZWQgdGFjdGljcyBmb3IgeW91ciB3ZWlnaHQgbG9zcyBlZmZvcnQ8L2E+PC9wPjxwPjxzdD5DYXJvbCBNYWhlciwgTmF0aW9uYWwgSGVhcnQgRm91bmRhdGlvbiBzZW5pb3IgcmVzZWFyY2ggZmVsbG93IGluIHBoeXNpY2FsIGFjdGl2aXR5LCBzZWRlbnRhcnkgYmVoYXZpb3VyIGFuZCBzbGVlcCwgVW5pdmVyc2l0eSBvZiBTb3V0aCBBdXN0cmFsaWE8L3N0PjwvcD48cD48c3Q+SnVsaWUgTmV0dG8sIGxlY3R1cmVyLCBDdXJ0aW4gVW5pdmVyc2l0eSA8L3N0PjwvcD48cD48YT5LaWRzJyBmaXRuZXNzIGlzIGltcHJvdmluZyAtLSBidXQgdGhleSBzdGlsbCBhcmVuJ3QgYXMgZml0IGFzIHRoZWlyIHBhcmVudHMgd2VyZTwvYT48L3A+PHA+PHN0PktldmluIE5ldHRvLCBhc3NvY2lhdGUgcHJvZmVzc29yLCBTY2hvb2wgb2YgUGh5c2lvdGhlcmFweSBhbmQgRXhlcmNpc2UgU2NpZW5jZSwgQ3VydGluIFVuaXZlcnNpdHkgPC9zdD48L3A+PHA+V2Fsa2luZyBpbiBjaGFsbGVuZ2luZyBlbnZpcm9ubWVudHMgY2FuIGJlIGRpZmZpY3VsdCwgd2l0aCBwb2xsdXRpb24gYW5kIGNsaW1hdGUgYmVpbmcgZmFjdG9ycyB0aGF0IGRldHJhY3QgZnJvbSBwYXJ0aWNpcGF0aW9uLhClBBIACk0KPwo6QSB0cmVhZG1pbGwgbWF5IHN1ZmZpY2UgYnV0IHdobyBsaWtlcyB3YWxraW5nIGluIG9uZSBzcG90IRC5ChIKFQAAAD8dAAAAPwqkAQqfAQqZAUludmVzdGlnYXRlIHdhbGtpbmcgZ3JvdXBzIHRoYXQgdXNlIHNob3BwaW5nIGNlbnRyZXMgb3Igb3RoZXIgaW5kb29yIGFyZWFzIGluIHRoZSBlYXJseSBtb3JuaW5nIGluIHNpdHVhdGlvbnMgd2hlcmUgaXQncyB0b28gaG90IG9yIHdldCB0byB3YWxrIG91dGRvb3JzLhD0ChIACj0KLwoqTW9zdCBpbXBvcnRhbnRseSwgZW5qb3kgdGhlIGV4cGVyaWVuY2UgLi4uEI4MEgoVZmZmPx1mZmY/CvYCCucCCuECZXhlcmNpc2UgY2FuIGJlIHRoZSBiZXN0IG1lZGljaW5lIHlvdSBldmVyIHRha2UuPC9wPjxwPjxhPlRoZSBpZGVhbCBmZW1hbGUgYm9keSB0eXBlIGlzIGdldHRpbmcgZXZlbiBoYXJkZXIgdG8gYXR0YWluPC9hPjwvcD48cD48c3Q+VGltIE9sZHMsIHByb2Zlc3NvciBvZiBIZWFsdGggU2NpZW5jZXMsIFVuaXZlcnNpdHkgb2YgU291dGggQXVzdHJhbGlhIDwvc3Q+PC9wPjxwPkEgbW9kZXJhdGUgd2FsayByZXF1aXJlcyBhYm91dCB0aHJlZSB0aW1lcyB5b3VyIHJlc3RpbmcgbWV0YWJvbGljIHJhdGUsIHJ1bm5pbmcgYW5kIHNwb3J0IHJlcXVpcmUgbXVjaCBtb3JlIC0tIHR5cGljYWxseSBhYm91dCBzZXZlbiB0aW1lcy4QuQwSChUAAAA/HQAAAD8KaQpbClZCb3RoIHdhbGtpbmcgYW5kIHZpZ29yb3VzIHNwb3J0IHdpbGwgcmVkdWNlIHlvdXIgcmlzayBvZiBkeWluZyBwcmVtYXR1cmVseSBhdCBhbnkgYWdlLhCbDxIKFZqZmT4dmpmZvgp+CnAKa0J1dCB5b3UgaGF2ZSB0byBzcGVuZCBtdWNoIG1vcmUgdGltZSB3YWxraW5nOiBvbmUgbWludXRlIG9mIHZpZ29yb3VzIHNwb3J0IGlzIHdvcnRoIDMuNSBtaW51dGVzIG9mIHdhbGtpbmcuEPIPEgoVzczMPR3NzMw9CnEKYwpeVG8gcmVkdWNlIHlvdXIgcmlzayBvZiBkeWluZyBieSAyMCUsIGZvciBleGFtcGxlLCB5b3Ugd291bGQgbmVlZCB0byB3YWxrIGZvciA1NiBtaW51dGVzIGEgZGF5LhDeEBIKFZqZmT4dmpmZvgqDAQp1CnBZb3UnZCBnZXQgdGhlIHNhbWUgYmVuZWZpdCBieSBydW5uaW5nIGZvciAxNiBtaW51dGVzLjwvcD48cD5XZSBodW1hbnMgbmVlZCB0byBleGVyY2lzZSBpbiBvcmRlciB0byBzdGF5IGhlYWx0aHkuEL0REgoVmpmZPh2amZm+CrsBCqwBCqYBRXhlcmNp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dGluIFVuaXZlcnNpdHkQAxo9Cg13aWtpcGVkaWFfdXJsEixodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DdXJ0aW5fQ29sbGVnZRoQCgNtaWQSCS9tLzAyMGYwbCVmIv47KhoKFgoRQ3VydGluIFVuaXZlcnNpdHkQywcQASoaChYKEUN1cnRpbiBVbml2ZXJzaXR5EJsJEAEaJAoIcGxhdGZvcm0QByXH7uI7KhEKDQoIcGxhdGZvcm0Q/wIQAhoiCgdiZW5lZml0EAcluTbcOyoQCgwKB2JlbmVmaXQQ0BEQAhoiCgd3YWxraW5nEAQlHF3OOyoQCgwKB3dhbGtpbmcQ1RAQAhooCgpleHBlcmllbmNlEAclDpHMOyoTCg8KCmV4cGVyaWVuY2UQqgwQAhoiCgdmaXRuZXNzEAclL+PJOyoQCgwKB2ZpdG5lc3MQ8gcQAhosCgxlbnZpcm9ubWVudHMQByUv48k7KhUKEQoMZW52aXJvbm1lbnRzENAJEAIaIgoHY2xpbWF0ZRAHJS/jyTsqEAoMCgdjbGltYXRlEIIKEAIaJAoIYWN0aXZpdHkQByWEa8c7KhEKDQoIYWN0aXZpdHkQ3gYQAhomCgliZWhhdmlvdXIQByWEa8c7KhIKDgoJYmVoYXZpb3VyEPIGEAIaHgoFc2xlZXAQByWEa8c7Kg4KCgoFc2xlZXAQgAcQAhoiCgd0YWN0aWNzEAclhGvHOyoQCgwKB3RhY3RpY3MQ4gUQAho4ChJ3ZWlnaHQgbG9zcyBlZmZvcnQQByWEa8c7KhsKFwoSd2VpZ2h0IGxvc3MgZWZmb3J0EPMFEAIaLgoNcGFydGljaXBhdGlvbhAHJSA8uTsqFgoSCg1wYXJ0aWNpcGF0aW9uEKoKEAIaHAoEc3BvdBAHJenRuDsqDQoJCgRzcG90EO4KEAIaNAoQc2hvcHBpbmcgY2VudHJlcxACJUt4uDsqGQoVChBzaG9wcGluZyBjZW50cmVzEJgLEAIaHgoFYXJlYXMQAiVLeLg7Kg4KCgoFYXJlYXMQuQsQAhrWAQodVW5pdmVyc2l0eSBvZiBTb3V0aCBBdXN0cmFsaWEQAxpMCg13aWtpcGVkaWFfdXJsEjtodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Vbml2ZXJzaXR5X29mX1NvdXRoX0F1c3RyYWxpYRoQCgNtaWQSCS9tLzAxeGZkeCXcHLQ7KiYKIgodVW5pdmVyc2l0eSBvZiBTb3V0aCBBdXN0cmFsaWEQhwcQASomCiIKHVVuaXZlcnNpdHkgb2YgU291dGggQXVzdHJhbGlhEOUNEAEaHAoEd2FsaxAEJanrqTsqDQoJCgR3YWxrEJoOEAIaJAoIRXhlcmNpc2UQBCWcbKY7KhEKDQoIRXhlcmNpc2UQrhIQAhokCghleGVyY2lzZRAHJZxspjsqEQoNCghleGVyY2lzZRDLExACGiQKCGV4ZXJjaXNlEAcleEimOyoRCg0KCGV4ZXJjaXNlEKYUEAIaJgoJcG9sbHV0aW9uEAcl6cujOyoSCg4KCXBvbGx1dGlvbhD0CRACGiAKBmh1bWFucxABJaYPnTsqDwoLCgZodW1hbnMQ/BEQAhoeCgVvcmRlchAHJaYPnTsqDgoKCgVvcmRlchCXEhACGh4KBXNwb3J0EAclg5WYOyoOCgoKBXNwb3J0EOMOEAIaIgoHd2Fsa2luZxAHJRQ5lDsqEAoMCgd3YWxraW5nEKAPEAIaIgoHV2Fsa2luZxAHJdwFkDsqEAoMCgdXYWxraW5nEJwTEAIaJAoIYmVuZWZpdHMQByUj7o47KhEKDQoIYmVuZWZpdHMQixQQAhoaCgNhZ2UQByUMZ4o7KgwKCAoDYWdlEO0PEAIaIgoHZXhhbXBsZRAHJagXijsqEAoMCgdleGFtcGxlEIcREAIaOAoIVGltIE9sZHMQASX1hYg7KhEKDQoIVGltIE9sZHMQvQ0QASoSCg4KCXByb2Zlc3NvchDHDRACGhwKBGZvcm0QByWew3Y7Kg0KCQoEZm9ybRDDExACGiAKBnN0cm9sbBAEJQKOdjsqDwoLCgZzdHJvbGwQ4xMQAhpsCixTY2hvb2wgb2YgUGh5c2lvdGhlcmFweSBhbmQgRXhlcmNpc2UgU2NpZW5jZRADJdetbjsqNQoxCixTY2hvb2wgb2YgUGh5c2lvdGhlcmFweSBhbmQgRXhlcmNpc2UgU2NpZW5jZRDtCBABGkYKGU5hdGlvbmFsIEhlYXJ0IEZvdW5kYXRpb24QAyWLwms7KiIKHgoZTmF0aW9uYWwgSGVhcnQgRm91bmRhdGlvbhChBhABGiIKB2Rpc2Vhc2UQByXmpls7KhAKDAoHZGlzZWFzZRDIEhACGh4KBWRlYXRoEAQl5qZbOyoOCgoKBWRlYXRoENoSEAIaHgoFZmllbGQQAiW+wkA7Kg4KCgoFZmllbGQQ6BQQAhokCghxdWVzdGlvbhAHJb7CQDsqEQoNCghxdWVzdGlvbhDEFBACGioKC3NwZWNpYWxpc3RzEAElvsJAOyoUChAKC3NwZWNpYWxpc3RzENUUEAIaIgoHcGFyZW50cxABJXBBMzsqEAoMCgdwYXJlbnRzELAIEAIaHgoFdGltZXMQByUBsBc7Kg4KCgoFdGltZXMQlA8QAhoyCg9IZWFsdGggU2NpZW5jZXMQByUBsBc7KhgKFAoPSGVhbHRoIFNjaWVuY2VzENQNEAIaIgoHcnVubmluZxAHJZMC8zoqEAoMCgdydW5uaW5nENcOEAIaKgoLS2V2aW4gTmV0dG8QASV0M/E6KhQKEAoLS2V2aW4gTmV0dG8QywgQARocCgRtb3JlEAcl8HeHOioNCgkKBG1vcmUQ9g4QAhocCgRyYXRlEAclVvNtOioNCgkKBHJhdGUQ0Q4QAiIKFWZm1kAdzcxMPioCZW5xBHNiLg=='
 </annotations>
</document>
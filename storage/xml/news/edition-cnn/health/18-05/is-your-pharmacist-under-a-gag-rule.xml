<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Sandee LaMotte, ('Edition CNN',)
 </author>
 <date>
  2018-05-11T23:53:04+00:00
 </date>
 <article>
<t>
 Is your pharmacist under a 'gag rule'?
</t>
<d>
 "Gag rules" may be keeping your pharmacist from telling you about cheaper drug prices. Over 20 states have banned such rules; President Trump plans to tackle them on a federal level.
</d>
<p>
 Invisible to consumers, these benefit managers are the nation's middle men in the drug delivery process, hired by health plans, employers, unions and government programs such as Medicare Part D to administer prescription drug benefits. The managers process and pay your claims, help create the list of medications your plan will cover, set the amount of copays for those drugs and are supposed to save the system money by encouraging the use of lower-cost medications.
</p>
<p>
 Pharmaceutical benefit managers negotiate prices with drug companies on behalf of insurance companies and other payers, and then communicate those prices to retail pharmacies. They also negotiate rebates from manufacturers and discounts from drugstores.
</p>
<p>
 "Our plan bans the pharmacists gag rule, which punished pharmacists for telling patients how to save money," Trump said.
</p>
<p>
 After the speech, the Pharmaceutical Care Management Association issued a statement that said, "We support the patient always paying the lowest cost at the pharmacy counter, whether it's the cash price or the copay. We would oppose contracting that prohibits drugstores from sharing with patients the cash price they charge for each drug."
</p>
<p>
 "A letter was sent to all PBMs that states the practice of gag clauses may be a deceptive practice that violates the city's deceptive marketing act," said Chicago's chief of policy, Chris Wheat. "There was over 150 million prescriptions filled in Illinois retail pharmacies last year, totaling nearly $19 billion, so it's a huge issue."
</p>
<p>
 Independent pharmacist Jim Kolar, who has run a pharmacy and compounding business in the Lakeview area of Chicago for 25 years, believes that the system is in desperate need of a fix. He's watched one independent pharmacy after another go under, leaving a "pharmacy desert."
</p>
<p>
 "We're finding the PBMs are driving up prices," Kolar said. "None of it's transparent; no one is seeing where the money goes. The only reason I've been able to stay afloat is because of my compounding business, which isn't covered by insurance. It's all cash."
</p>
<p>
 The gag rule was a clause in his contract with one of the pharmaceutical benefit managers, also known as PBMs, that manage most of our nation's prescription drug programs.
</p>
<p>
 "We're not supposed to be in violation of the contract, or they can cut you off," Katz said. "I did it. I don't give a damn what the PBMs say. I did it. It's a travesty."
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Mark Lieber, ('Edition CNN',)
 </author>
 <date>
  2018-05-14T15:00:52+00:00
 </date>
 <article>
<t>
 US stillbirths and newborn deaths down 11.5%, study says
</t>
<d>
 A recent drop in stillbirths and newborn deaths in the United States might be linked to an increase in term or near-term births, a new study suggests.
</d>
<p>
 The researchers found that the overall number of stillbirths and neonatal deaths decreased from 37,813 deaths in 2007 to 33,457 in 2015, an 11.5% drop.
</p>
<p>
 "These data are really encouraging ... But we still need to continue to work in order to reduce the overall burden of infant deaths and morbidity associated with preterm births in the US," Ananth said.
</p>
<p>
 In addition to perinatal deaths, the study also looked at changes in the average gestational age at birth between 2007 and 2015. Specifically, women were classified as extremely preterm (20-27 weeks), very preterm (28-31 weeks), moderately preterm (32-33 weeks), late preterm (34-36 weeks), early term (37-38 weeks), full term (39-40 weeks), late term (41 weeks) or post-term (42-44 weeks).
</p>
<p>
 The researchers found that birth rates decreased among all gestational age groups except one: the 39- to 40-week group. The percentage of women in this group rose from 54.5% in 2007 to 60.2% 2015.
</p>
<p>
 "So it's not surprising to see the number of deliveries during this time period increase."
</p>
<p>
 "It became clear that early elective delivery prior to 39 weeks was associated with higher neonatal morbidity and mortality. As such, quality initiatives around early elective delivery were discouraged and hospitals adapted guidelines that discouraged elective delivery prior to 39 weeks," Brown said.
</p>
<p>
 "Other risk factors include older age and obesity," Brown added. "Clearly, the increase in obesity rates in pregnant women poses a greater risk for stillbirth."
</p>
<p>
 "African American women are known to have a higher risk for stillbirth at or near term, especially if comorbidities such as obesity, diabetes and hypertension are present," Brown said.
</p>
<p>
 But the new study did not look at differences in stillbirths or neonatal mortality between different racial or ethnic groups -- one of the study's main limitations, according to Ananth.
</p>
<p>
 "We did not look at race-specific trends in this paper, although we did recognize race and ethnicity as a potential confounder," Ananth said. "That would be a topic worthy of investigation in the next set of studies."
</p>
<p>
 But the results still suggest that -- assuming that the mother and fetus are in good health -- pregnancies should not be delivered earlier than 39 completed weeks, and doing so would lead to a decrease in overall perinatal mortality rates, according to Ananth.
</p>
<p>
 "Preterm delivery rates have declined between 2005 and 2014 in the US and in several European countries," Ananth said. "So reducing the burden of early deliveries, and in turn improving perinatal survival, will be of tremendous benefit to society."
</p>
<p>
 The study, published Monday in the journal JAMA Pediatrics, looked at more than 99% of US live births and stillbirths between 2007 and 2015 using data from the National Center for Health Statistics of the US Centers for Disease Control and Prevention. The data included approximately 34 million live births and 200,000 stillbirths. Full-term births take place in the 39th or 40th week of pregnancy.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Susan Scutti and Debra Goldschmidt, ('Edition CNN',)
 </author>
 <date>
  2018-05-08T16:56:35+00:00
 </date>
 <article>
<t>
 Ebola outbreak declared in Democratic Republic of Congo
</t>
<d>
 The government of the Democratic Republic of Congo declared a new outbreak of Ebola hemorrhagic fever, a rare and deadly disease, the World Health Organization reported.
</d>
<p>
 "We will gather more samples, conduct contact tracing, engage the communities with messages on prevention and control, and put in place methods for improving data collection and sharing," said Dr. Matshidiso Moeti, the WHO's regional director for Africa. "WHO will work closely with health authorities and partners to support the national response."
</p>
<p>
 Ebola is endemic to the Democratic Republic of Congo, and this is its ninth outbreak of Ebola virus disease since the discovery of the virus in the country in 1976. The last outbreak occurred there in 2017 in the northern Bas Uele province. That outbreak was quickly contained due to joint efforts by the government, the WHO and other partners.
</p>
<p>
 A local team from the Ministry of Health is working in Bikoro, managing the cases and conducting research. On Wednesday a team of experts will travel from Kinshasa to Bikoro with equipment necessary to facilitate a field response.
</p>
<p>
 Speaking on behalf of the Democratic Republic of Congo Minister of Health, Lambert Matuku, the Minister of State and Labor, said, it is "a worrisome sanitary situation."
</p>
<p>
 The WHO said it is again working closely with the government to rapidly scale up its operations and mobilize health partners, including Médecins Sans Fronti��res (Doctors Without Borders), using its model of a successful response to the Ebola outbreak of 2017.
</p>
<p>
 Upon learning of the confirmed cases, the WHO alerted neighboring countries and set up its Incident Management System to fully dedicate staff and resources to the response.
</p>
<p>
 Hoping to stop the spread of Ebola to surrounding provinces and countries, the WHO also released $1 million from a contingency fund to support its activities for the next three months.
</p>
<p>
 Ebola virus disease, which most commonly affects people and nonhuman primates (monkeys, gorillas and chimpanzees), is caused by one of five Ebola viruses. The virus is transmitted to people from wild animals and spreads in the human population through human-to-human transmission. The average case fatality rate is around 50%.
</p>
<p>
 A government statement released Tuesday states that the Ministry of Health has "taken all necessary measures to respond promptly and effectively to this new epidemic of Ebola in the DRC's national territory".
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>
<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Manveena Suri, ('Edition CNN',)
 </author>
 <date>
  2018-05-21T15:38:35+00:00
 </date>
 <article>
<t>
 Nipah virus claims three lives in India
</t>
<d>
 Three people in the southern Indian state of Kerala have died from the Nipah virus and 41 people who came into contact with them are being tested.
</d>
<p>
 Fluid samples have been taken from 14 people who visited the deceased in the hospital, along with 27 members of hospital staff who had come into contact with them during their treatment, according to Reena.
</p>
<p>
 She added that deaths in other districts where people presented with the symptoms of the Nipah are also being tested, Reena said.
</p>
<p>
 <h3>
  Government reassurances
 </h3>
</p>
<p>
 India's Health Ministry has deployed a response team to Kerala.
</p>
<p>
 The country's union minister of health and family welfare, JP Nadda, said in a statement that his department was "closely monitoring the situation" and has "dispatched a Central team to assist the State government and initiate required steps."
</p>
<p>
 The state government has made assurances that the "health department is doing everything possible to save the lives of the infected and prevent the advance of virus."
</p>
<p>
 A subsequent tweet urged private hospitals to "not deny treatment for anyone suffering from fever."
</p>
<p>
 <h3>
  About Nipah virus
 </h3>
</p>
<p>
 There is no vaccine against Nipah and the only treatment option is supportive care, according to WHO.
</p>
<p>
 Two brothers in their late 20s and their aunt, 50, died from the virus in Kozikhode district, according to Dr. Reena KJ, the state's assistant director of public health.
</p>
<p>
 The father of the two men, 56, is currently on life support and in a "delirious state," said Reena.
</p>
 </article>
 <annotations>
  b'gANjZ29vZ2xlLmNsb3VkLmxhbmd1YWdlX3YxLnR5cGVzCkFubm90YXRlVGV4dFJlc3BvbnNlCnEAKVJxAX1xAlgKAAAAc2VyaWFsaXplZHEDQmc/AAAKzggKvwgKvAg8dD5OaXBhaCB2aXJ1cyBjbGFpbXMgdGhyZWUgbGl2ZXMgaW4gSW5kaWE8L3Q+PGQ+VGhyZWUgcGVvcGxlIGluIHRoZSBzb3V0aGVybiBJbmRpYW4gc3RhdGUgb2YgS2VyYWxhIGhhdmUgZGllZCBmcm9tIHRoZSBOaXBhaCB2aXJ1cyBhbmQgNDEgcGVvcGxlIHdobyBjYW1lIGludG8gY29udGFjdCB3aXRoIHRoZW0gYXJlIGJlaW5nIHRlc3RlZC48L2Q+PHA+Rmx1aWQgc2FtcGxlcyBoYXZlIGJlZW4gdGFrZW4gZnJvbSAxNCBwZW9wbGUgd2hvIHZpc2l0ZWQgdGhlIGRlY2Vhc2VkIGluIHRoZSBob3NwaXRhbCwgYWxvbmcgd2l0aCAyNyBtZW1iZXJzIG9mIGhvc3BpdGFsIHN0YWZmIHdobyBoYWQgY29tZSBpbnRvIGNvbnRhY3Qgd2l0aCB0aGVtIGR1cmluZyB0aGVpciB0cmVhdG1lbnQsIGFjY29yZGluZyB0byBSZWVuYS48L3A+PHA+U2hlIGFkZGVkIHRoYXQgZGVhdGhzIGluIG90aGVyIGRpc3RyaWN0cyB3aGVyZSBwZW9wbGUgcHJlc2VudGVkIHdpdGggdGhlIHN5bXB0b21zIG9mIHRoZSBOaXBhaCBhcmUgYWxzbyBiZWluZyB0ZXN0ZWQsIFJlZW5hIHNhaWQuPC9wPjxwPjxoMz5Hb3Zlcm5tZW50IHJlYXNzdXJhbmNlczwvaDM+PC9wPjxwPkluZGlhJ3MgSGVhbHRoIE1pbmlzdHJ5IGhhcyBkZXBsb3llZCBhIHJlc3BvbnNlIHRlYW0gdG8gS2VyYWxhLjwvcD48cD5UaGUgY291bnRyeSdzIHVuaW9uIG1pbmlzdGVyIG9mIGhlYWx0aCBhbmQgZmFtaWx5IHdlbGZhcmUsIEpQIE5hZGRhLCBzYWlkIGluIGEgc3RhdGVtZW50IHRoYXQgaGlzIGRlcGFydG1lbnQgd2FzICJjbG9zZWx5IG1vbml0b3JpbmcgdGhlIHNpdHVhdGlvbiIgYW5kIGhhcyAiZGlzcGF0Y2hlZCBhIENlbnRyYWwgdGVhbSB0byBhc3Npc3QgdGhlIFN0YXRlIGdvdmVybm1lbnQgYW5kIGluaXRpYXRlIHJlcXVpcmVkIHN0ZXBzLiI8L3A+PHA+VGhlIHN0YXRlIGdvdmVybm1lbnQgaGFzIG1hZGUgYXNzdXJhbmNlcyB0aGF0IHRoZSAiaGVhbHRoIGRlcGFydG1lbnQgaXMgZG9pbmcgZXZlcnl0aGluZyBwb3NzaWJsZSB0byBzYXZlIHRoZSBsaXZlcyBvZiB0aGUgaW5mZWN0ZWQgYW5kIHByZXZlbnQgdGhlIGFkdmFuY2Ugb2YgdmlydXMuIjwvcD48cD5BEgoVmpmZPh2amZm+CqEECpIECowEc3Vic2VxdWVudCB0d2VldCB1cmdlZCBwcml2YXRlIGhvc3BpdGFscyB0byAibm90IGRlbnkgdHJlYXRtZW50IGZvciBhbnlvbmUgc3VmZmVyaW5nIGZyb20gZmV2ZXIuIjwvcD48cD48aDM+QWJvdXQgTmlwYWggdmlydXM8L2gzPjwvcD48cD5UaGVyZSBpcyBubyB2YWNjaW5lIGFnYWluc3QgTmlwYWggYW5kIHRoZSBvbmx5IHRyZWF0bWVudCBvcHRpb24gaXMgc3VwcG9ydGl2ZSBjYXJlLCBhY2NvcmRpbmcgdG8gV0hPLjwvcD48cD5Ud28gYnJvdGhlcnMgaW4gdGhlaXIgbGF0ZSAyMHMgYW5kIHRoZWlyIGF1bnQsIDUwLCBkaWVkIGZyb20gdGhlIHZpcnVzIGluIEtvemlraG9kZSBkaXN0cmljdCwgYWNjb3JkaW5nIHRvIERyLiBSZWVuYSBLSiwgdGhlIHN0YXRlJ3MgYXNzaXN0YW50IGRpcmVjdG9yIG9mIHB1YmxpYyBoZWFsdGguPC9wPjxwPlRoZSBmYXRoZXIgb2YgdGhlIHR3byBtZW4sIDU2LCBpcyBjdXJyZW50bHkgb24gbGlmZSBzdXBwb3J0IGFuZCBpbiBhICJkZWxpcmlvdXMgc3RhdGUsIiBzYWlkIFJlZW5hLjwvcD4QvQgSChWamRk/HZqZGb8SEgoDCgE8EgIIChoECAUQICIBPBIWCgUKAXQQARIECAY4ARoECAQQGiIBdBIUCgUKAT4QAhICCAoaBAgEECAiAT4SIAoJCgVOaXBhaBADEgYIBjgBSAEaBAgEEBoiBU5pcGFoEh4KCQoFdmlydXMQCRIECAY4ARoECAUQHCIFdmlydXMSJgoKCgZjbGFpbXMQDxIKCAswAzgCQANYBBoFCPkBEA8iBWNsYWltEhwKCQoFdGhyZWUQFhICCAcaBAgHEB4iBXRocmVlEh0KCQoFbGl2ZXMQHBIECAY4AhoECCoQHCIEbGlmZRIWCgYKAmluECISAggCGgQIBxArIgJpbhIgCgkKBUluZGlhECUSBggGOAFIARoECAgQJCIFSW5kaWESFAoFCgE8ECoSAggKGgQIDBAgIgE8EhQKBQoBLxArEgIIDBoECAwQICIBLxIWCgUKAXQQLBIECAY4ARoECAcQDyIBdBIUCgUKAT4QLRICCAoaBAgMECAiAT4SFAoFCgE8EC4SAggKGgQIDxAgIgE8EhYKBQoBZBAvEgQIBjgBGgQIBxAPIgFkEhQKBQoBPhAwEgIIChoECA8QICIBPhIcCgkKBVRocmVlEDESAggHGgQIEhAeIgVUaHJlZRIgCgoKBnBlb3BsZRA3EgQIBjgCGgQIGxAcIgZwZXJzb24SFgoGCgJpbhA+EgIIAhoECBIQKyICaW4SGAoHCgN0aGUQQRICCAUaBAgXEBAiA3RoZRIiCgwKCHNvdXRoZXJuEEUSAggBGgQIFxAFIghzb3V0aGVybhIeCgoKBkluZGlhbhBOEgIIARoECBcQBSIGSW5kaWFuEh4KCQoFc3RhdGUQVRIECAY4ARoECBMQJCIFc3RhdGUSFgoGCgJvZhBbEgIIAhoECBcQKyICb2YSIgoKCgZLZXJhbGEQXhIGCAY4AUgBGgQIGBAkIgZLZXJhbGESHgoICgRoYXZlEGUSBggLMANYBBoECBsQCCIEaGF2ZRIbCggKBGRpZWQQahIECAtYAxoECAcQMCIDZGllEhoKCAoEZnJvbRBvEgIIAhoECBsQKyIEZnJvbRIYCgcKA3RoZRB0EgIIBRoECB8QECIDdGhlEiAKCQoFTmlwYWgQeBIGCAY4AUgBGgQIHxAaIgVOaXBhaBIeCgkKBXZpcnVzEH4SBAgGOAEaBAgcECQiBXZpcnVzEhkKCAoDYW5kEIQBEgIIBBoECB8QCiIDYW5kEhcKBwoCNDEQiAESAggHGgQIIhAeIgI0MRIhCgsKBnBlb3BsZRCLARIECAY4AhoECB8QDCIGcGVyc29uEhsKCAoDd2hvEJIBEgQICEADGgQIJBAcIgN3aG8SHwoJCgRjYW1lEJYBEgYICzADWAMaBAgiEDAiBGNvbWUSGwoJCgRpbnRvEJsBEgIIAhoECCQQKyIEaW50bxIjCgwKB2NvbnRhY3QQoAESBAgGOAEaBAglECQiB2NvbnRhY3QSGwoJCgR3aXRoEKgBEgIIAhoECCYQKyIEd2l0aBIhCgkKBHRoZW0QrQESCAgIGAE4AkADGgQIJxAkIgR0aGVtEhwKCAoDYXJlELIBEgYICzADWAQaBAgqEAgiAmJlEhoKCgoFYmVpbmcQtgESAggLGgQIBRALIgJiZRIjCgwKB3Rlc3RlZC4QvAESBAgGOAEaBAgqEAciB3Rlc3RlZC4SFQoGCgE8EMMBEgIIChoECC4QICIBPBIVCgYKAS8QxAESAggMGgQILhAgIgEvEhcKBgoBZBDFARIECAY4ARoECCsQBiIBZBIVCgYKAT4QxgESAggKGgQILhAgIgE+EhUKBgoBPBDHARICCAoaBAg3ECAiATwSFwoGCgFwEMgBEgQIBjgBGgQINBAaIgFwEhUKBgoBPhDJARICCAoaBAg0ECAiAT4SHwoKCgVGbHVpZBDKARIECAY4ARoECDQQGiIFRmx1aWQSIgoMCgdzYW1wbGVzENABEgQIBjgCGgQINxAdIgZzYW1wbGUSHwoJCgRoYXZlENgBEgYICzADWAQaBAg3EAgiBGhhdmUSGwoJCgRiZWVuEN0BEgQIC1gDGgQINxAJIgJiZRIgCgoKBXRha2VuEOIBEgYIC1gDYAMaBAgFEA8iBHRha2USGwoJCgRmcm9tEOgBEgIIAhoECDcQKyIEZnJvbRIXCgcKAjE0EO0BEgIIBxoECDoQHiICMTQSIQoLCgZwZW9wbGUQ8AESBAgGOAIaBAg4ECQiBnBlcnNvbhIbCggKA3dobxD3ARIECAhAAxoECDwQHCIDd2hvEiMKDAoHdmlzaXRlZBD7ARIGCAswA1gDGgQIOhAwIgV2aXNpdBIZCggKA3RoZRCDAhICCAUaBAg+EBAiA3RoZRIjCg0KCGRlY2Vhc2VkEIcCEgIIARoECDwQEiIIZGVjZWFzZWQSFwoHCgJpbhCQAhICCAIaBAg8ECsiAmluEhkKCAoDdGhlEJMCEgIIBRoECEEQECIDdGhlEiUKDQoIaG9zcGl0YWwQlwISBAgGOAEaBAg/ECQiCGhvc3BpdGFsEhUKBgoBLBCfAhICCAoaBAg8ECAiASwSHQoKCgVhbG9uZxChAhICCAIaBAg8ECsiBWFsb25nEhsKCQoEd2l0aBCnAhICCAIaBAhDECMiBHdpdGgSFwoHCgIyNxCsAhICCAcaBAhGEB4iAjI3EiIKDAoHbWVtYmVycxCvAhIECAY4AhoECEQQJCIGbWVtYmVyEhcKBwoCb2YQtwISAggCGgQIRhArIgJvZhIlCg0KCGhvc3BpdGFsELoCEgQIBjgBGgQISRAaIghob3NwaXRhbBIfCgoKBXN0YWZmEMMCEgQIBjgBGgQIRxAkIgVzdGFmZhIbCggKA3dobxDJAhIECAhAAxoECEwQHCIDd2hvEh4KCAoDaGFkEM0CEgYICzADWAMaBAhMEAgiBGhhdmUSHQoJCgRjb21lENECEgQIC1gDGgQIRhAwIgRjb21lEhsKCQoEaW50bxDWAhICCAIaBAhMECsiBGludG8SIwoMCgdjb250YWN0ENsCEgQIBjgBGgQITRAkIgdjb250YWN0EhsKCQoEd2l0aBDjAhICCAIaBAhOECsiBHdpdGgSIQoJCgR0aGVtEOgCEggICBgBOAJAAxoECE8QJCIEdGhlbRIfCgsKBmR1cmluZxDtAhICCAIaBAhMECsiBmR1cmluZxIjCgoKBXRoZWlyEPQCEggICBgFOAJAAxoECFMQJSIFdGhlaXISJwoOCgl0cmVhdG1lbnQQ+gISBAgGOAEaBAhRECQiCXRyZWF0bWVudBIVCgYKASwQgwMSAggKGgQINxAgIgEsEiIKDgoJYWNjb3JkaW5nEIUDEgIICxoECDcQKyIGYWNjb3JkEhcKBwoCdG8QjwMSAggCGgQIVRAjIgJ0bxIjCgsKBlJlZW5hLhCSAxIGCAY4AUgBGgQIVhAkIgZSZWVuYS4SFQoGCgE8EJgDEgIIChoECFoQICIBPBIVCgYKAS8QmQMSAggMGgQIWhAgIgEvEhcKBgoBcBCaAxIECAY4ARoECFcQBiIBcBIVCgYKAT4QmwMSAggKGgQIWhAgIgE+EhUKBgoBPBCcAxICCAoaBAheECAiATwSFwoGCgFwEJ0DEgQIBjgBGgQIXhAPIgFwEhUKBgoBPhCeAxICCAoaBAg3ECAiAT4SIQoICgNTaGUQnwMSCggIGAgoATgBQAMaBAhgEBwiA1NoZRIfCgoKBWFkZGVkEKMDEgYICzADWAMaBAgFECEiA2FkZBIbCgkKBHRoYXQQqQMSAggCGgQIdRAWIgR0aGF0EiAKCwoGZGVhdGhzEK4DEgQIBjgCGgQIdRAcIgVkZWF0aBIXCgcKAmluELUDEgIIAhoECGIQKyICaW4SHQoKCgVvdGhlchC4AxICCAEaBAhlEAUiBW90aGVyEiYKDgoJZGlzdHJpY3RzEL4DEgQIBjgBGgQIYxAkIghkaXN0cmljdBIdCgoKBXdoZXJlEMgDEgIIAxoECHIQBCIFd2hlcmUSIQoLCgZwZW9wbGUQzgMSBAgGOAIaBAhyEB0iBnBlcnNvbhInCg4KCXByZXNlbnRlZBDVAxIGCAswA1gDGgQIZxA7IgdwcmVzZW50EhsKCQoEd2l0aBDfAxICCAIaBAhoECsiBHdpdGgSGQoICgN0aGUQ5AMSAggFGgQIaxAQIgN0aGUSJAoNCghzeW1wdG9tcxDoAxIECAY4AhoECGkQJCIHc3ltcHRvbRIXCgcKAm9mEPEDEgIIAhoECGsQKyICb2YSGQoICgN0aGUQ9AMSAggFGgQIbhAQIgN0aGUSIQoKCgVOaXBhaBD4AxIGCAY4AUgBGgQIbBAkIgVOaXBhaBIcCggKA2FyZRD+AxIGCAswA1gEGgQIchAJIgJiZRIbCgkKBGFsc28QggQSAggDGgQIchAEIgRhbHNvEhoKCgoFYmVpbmcQhwQSAggLGgQIchAJIgJiZRIhCgsKBnRlc3RlZBCNBBIGCAtYA2ADGgQIZRAwIgR0ZXN0EhUKBgoBLBCTBBICCAoaBAh1ECAiASwSIQoKCgVSZWVuYRCVBBIGCAY4AUgBGgQIdRAcIgVSZWVuYRIjCgoKBXNhaWQuEJsEEggICzADOAFYAxoECGAQCyIFc2FpZC4SFQoGCgE8EKAEEgIIChoECHgQICIBPBIVCgYKAS8QoQQSAggMGgQIeBAgIgEvEhcKBgoBcBCiBBIECAY4ARoECHUQEiIBcBIVCgYKAT4QowQSAggKGgQIeBAgIgE+EhUKBgoBPBCkBBICCAoaBAh7ECAiATwSFwoGCgFwEKUEEgQIBjgBGgQIeBAPIgFwEhUKBgoBPhCmBBICCAoaBAh7ECAiAT4SFgoGCgE8EKcEEgIIChoFCJIBECAiATwSGgoHCgJoMxCoBBIECAY4ARoFCIEBEBoiAmgzEhYKBgoBPhCqBBICCAoaBQiBARAgIgE+EiwKDwoKR292ZXJubWVudBCrBBIGCAY4AUgBGgUIgQEQGiIKR292ZXJubWVudBItChEKDHJlYXNzdXJhbmNlcxC2BBIECAY4ARoFCJIBEBwiC3JlYXNzdXJhbmNlEhYKBgoBPBDCBBICCAoaBQiEARAgIgE8EhYKBgoBLxDDBBICCAwaBQiEARAgIgEvEhoKBwoCaDMQxAQSBAgGOAEaBQiBARAGIgJoMxIWCgYKAT4QxgQSAggKGgUIhAEQICIBPhIWCgYKATwQxwQSAggKGgUIiAEQICIBPBIWCgYKAS8QyAQSAggMGgUIiAEQICIBLxIYCgYKAXAQyQQSBAgGOAEaBQiSARAPIgFwEhYKBgoBPhDKBBICCAoaBQiIARAgIgE+EhYKBgoBPBDLBBICCAoaBQiSARAgIgE8EhgKBgoBcBDMBBIECAY4ARoFCJABEBoiAXASFgoGCgE+EM0EEgIIChoFCJABECAiAT4SIgoKCgVJbmRpYRDOBBIGCAY4AUgBGgUIkAEQJSIFSW5kaWESGAoHCgIncxDTBBICCAkaBQiNARAuIgIncxIkCgsKBkhlYWx0aBDWBBIGCAY4AUgBGgUIkAEQGiIGSGVhbHRoEigKDQoITWluaXN0cnkQ3QQSBggGOAFIARoFCJIBEBwiCE1pbmlzdHJ5EiMKCAoDaGFzEOYEEgoICzADOAFAA1gEGgUIkgEQCCIEaGF2ZRIjCg0KCGRlcGxveWVkEOoEEgQIC1gDGgQIeBAPIgZkZXBsb3kSFgoGCgFhEPMEEgIIBRoFCJUBEBAiAWESJgoNCghyZXNwb25zZRD1BBIECAY4ARoFCJUBEBoiCHJlc3BvbnNlEh4KCQoEdGVhbRD+BBIECAY4ARoFCJIBEBIiBHRlYW0SGAoHCgJ0bxCDBRICCAIaBQiSARArIgJ0bxImCgwKB0tlcmFsYS4QhgUSBggGOAFIARoFCJYBECQiB0tlcmFsYS4SFgoGCgE8EI0FEgIIChoFCJoBECAiATwSFgoGCgEvEI4FEgIIDBoFCJoBECAiAS8SGAoGCgFwEI8FEgQIBjgBGgUIkgEQDyIBcBIWCgYKAT4QkAUSAggKGgUImgEQICIBPhIWCgYKATwQkQUSAggKGgUInQEQICIBPBIXCgYKAXAQkgUSBAgGOAEaBAh4EA8iAXASFgoGCgE+EJMFEgIIChoFCJ0BECAiAT4SGgoICgNUaGUQlAUSAggFGgUIoAEQECIDVGhlEiQKDAoHY291bnRyeRCYBRIECAY4ARoFCKMBECUiB2NvdW50cnkSGAoHCgIncxCfBRICCAkaBQigARAuIgIncxIgCgoKBXVuaW9uEKIFEgQIBjgBGgUIowEQGiIFdW5pb24SJgoNCghtaW5pc3RlchCoBRIECAY4ARoFCK0BEBwiCG1pbmlzdGVyEhgKBwoCb2YQsQUSAggCGgUIowEQKyICb2YSIgoLCgZoZWFsdGgQtAUSBAgGOAEaBQioARAaIgZoZWFsdGgSGgoICgNhbmQQuwUSAggEGgUIpQEQCiIDYW5kEiIKCwoGZmFtaWx5EL8FEgQIBjgBGgUIpQEQDCIGZmFtaWx5EiQKDAoHd2VsZmFyZRDGBRIECAY4ARoFCKQBECQiB3dlbGZhcmUSFgoGCgEsEM0FEgIIChoFCKMBECAiASwSHAoHCgJKUBDPBRIGCAY4AUgBGgUIqwEQGiICSlASIgoKCgVOYWRkYRDSBRIGCAY4AUgBGgUIowEQBiIFTmFkZGESFgoGCgEsENcFEgIIChoFCKMBECAiASwSHgoJCgRzYWlkENkFEgYICzADWAMaBAh4EDAiA3NheRIYCgcKAmluEN4FEgIIAhoFCK0BECsiAmluEhYKBgoBYRDhBRICCAUaBQiwARAQIgFhEigKDgoJc3RhdGVtZW50EOMFEgQIBjgBGgUIrgEQJCIJc3RhdGVtZW50EhwKCQoEdGhhdBDtBRICCAIaBQi3ARAWIgR0aGF0EiIKCAoDaGlzEPIFEgoICBgFKAI4AUADGgUIswEQJSIDaGlzEioKDwoKZGVwYXJ0bWVudBD2BRIECAY4ARoFCLcBEBwiCmRlcGFydG1lbnQSIQoICgN3YXMQgQYSCggLMAM4AUADWAMaBQi3ARAIIgJiZRIWCgYKASIQhQYSAggKGgUItwEQICIBIhIiCgwKB2Nsb3NlbHkQhgYSAggDGgUItwEQBCIHY2xvc2VseRIoCg8KCm1vbml0b3JpbmcQjgYSBAgLOAEaBQitARALIghtb25pdG9yZRIaCggKA3RoZRCZBhICCAUaBQi5ARAQIgN0aGUSKAoOCglzaXR1YXRpb24QnQYSBAgGOAEaBQi3ARASIglzaXR1YXRpb24SFgoGCgEiEKYGEgIIChoFCLcBECAiASISGgoICgNhbmQQqAYSAggEGgUItwEQCiIDYW5kEiMKCAoDaGFzEKwGEgoICzADOAFAA1gEGgUIvgEQCCIEaGF2ZRIWCgYKASIQsAYSAggKGgUIvgEQICIBIhIoCg8KCmRpc3BhdGNoZWQQsQYSBAgLWAMaBQi3ARAMIghkaXNwYXRjaBIWCgYKAWEQvAYSAggFGgUIwQEQECIBYRIkCgwKB0NlbnRyYWwQvgYSBAgBOAEaBQjBARAFIgdDZW50cmFsEh4KCQoEdGVhbRDGBhIECAY4ARoFCL4BEBIiBHRlYW0SGAoHCgJ0bxDLBhICCAkaBQjDARAIIgJ0bxIgCgsKBmFzc2lzdBDOBhICCAsaBQi+ARA9IgZhc3Npc3QSGgoICgN0aGUQ1QYSAggFGgUIxgEQECIDdGhlEiIKCgoFU3RhdGUQ2QYSBggGOAFIARoFCMYBEBoiBVN0YXRlEioKDwoKZ292ZXJubWVudBDfBhIECAY4ARoFCMMBEBIiCmdvdmVybm1lbnQSGgoICgNhbmQQ6gYSAggEGgUIwwEQCiIDYW5kEiQKDQoIaW5pdGlhdGUQ7gYSAggLGgUIwwEQDCIIaW5pdGlhdGUSJQoNCghyZXF1aXJlZBD3BhIECAtYAxoFCMoBEAUiB3JlcXVpcmUSHwoKCgVzdGVwcxCABxIECAY4AhoFCMgBEBIiBHN0ZXASFQoGCgEuEIUHEgIIChoECAUQICIBLhIVCgYKASIQhgcSAggKGgQIBRAgIgEiEhUKBgoBPBCHBxICCAoaBAgFECAiATwSFQoGCgEvEIgHEgIIDBoECAUQICIBLxIXCgYKAXAQiQcSBAgGOAEaBAgFEA8iAXASFQoGCgE+EIoHEgIIChoECAUQICIBPhIWCgYKATwQiwcSAggKGgUI0gEQICIBPBIXCgYKAXAQjAcSBAgGOAEaBAgFEA8iAXASFgoGCgE+EI0HEgIIChoFCNIBECAiAT4SGgoICgNUaGUQjgcSAggFGgUI1gEQECIDVGhlEiAKCgoFc3RhdGUQkgcSBAgGOAEaBQjWARAaIgVzdGF0ZRIqCg8KCmdvdmVybm1lbnQQmAcSBAgGOAEaBQjYARAcIgpnb3Zlcm5tZW50EiMKCAoDaGFzEKMHEgoICzADOAFAA1gEGgUI2AEQCCIEaGF2ZRIdCgkKBG1hZGUQpwcSBAgLWAMaBAgFECEiBG1ha2USKQoPCgphc3N1cmFuY2VzEKwHEgQIBjgBGgUI2AEQEiIJYXNzdXJhbmNlEhwKCQoEdGhhdBC3BxICCAIaBQjgARAWIgR0aGF0EhoKCAoDdGhlELwHEgIIBRoFCN4BEBAiA3RoZRIWCgYKASIQwAcSAggKGgUI3gEQICIBIhIiCgsKBmhlYWx0aBDBBxIECAY4ARoFCN4BEBoiBmhlYWx0aBIqCg8KCmRlcGFydG1lbnQQyAcSBAgGOAEaBQjgARAcIgpkZXBhcnRtZW50EiAKBwoCaXMQ0wcSCggLMAM4AUADWAQaBQjgARAIIgJiZRIdCgoKBWRvaW5nENYHEgQIC1gEGgUI2QEQCyICZG8SKgoPCgpldmVyeXRoaW5nENwHEgQIBjgBGgUI4AEQEiIKZXZlcnl0aGluZxIkCg0KCHBvc3NpYmxlEOcHEgIIARoFCOEBEAUiCHBvc3NpYmxlEhgKBwoCdG8Q8AcSAggJGgUI5AEQCCICdG8SHAoJCgRzYXZlEPMHEgIICxoFCOABED0iBHNhdmUSGgoICgN0aGUQ+AcSAggFGgUI5gEQECIDdGhlEh8KCgoFbGl2ZXMQ/AcSBAgGOAIaBQjkARASIgRsaWZlEhgKBwoCb2YQgggSAggCGgUI5gEQKyICb2YSGgoICgN0aGUQhQgSAggFGgUI6QEQECIDdGhlEiYKDQoIaW5mZWN0ZWQQiQgSBAgBWAMaBQjnARAkIghpbmZlY3RlZBIaCggKA2FuZBCSCBICCAQaBQjkARAKIgNhbmQSIgoMCgdwcmV2ZW50EJYIEgIICxoFCOQBEAwiB3ByZXZlbnQSGgoICgN0aGUQnggSAggFGgUI7QEQECIDdGhlEiQKDAoHYWR2YW5jZRCiCBIECAY4ARoFCOsBEBIiB2FkdmFuY2USGAoHCgJvZhCqCBICCAIaBQjtARArIgJvZhIgCgoKBXZpcnVzEK0IEgQIBjgBGgUI7gEQJCIFdmlydXMSFQoGCgEuELIIEgIIChoECAUQICIBLhIVCgYKASIQswgSAggKGgQIBRAgIgEiEhUKBgoBPBC0CBICCAoaBAgFECAiATwSFQoGCgEvELUIEgIIDBoECAUQICIBLxIXCgYKAXAQtggSBAgGOAEaBAgFEA8iAXASFQoGCgE+ELcIEgIIChoECAUQICIBPhIWCgYKATwQuAgSAggKGgUI+QEQICIBPBIYCgYKAXAQuQgSBAgGOAEaBQj5ARAaIgFwEhYKBgoBPhC6CBICCAoaBQj5ARAgIgE+EhgKBgoBQRC7CBIECAY4ARoFCPkBEDYiAUESKAoPCgpzdWJzZXF1ZW50EL0IEgIIARoFCPsBEAUiCnN1YnNlcXVlbnQSIAoKCgV0d2VldBDICBIECAY4ARoFCPwBEBwiBXR3ZWV0EiEKCgoFdXJnZWQQzggSBggLMANYAxoFCPsCEAsiBHVyZ2USIgoMCgdwcml2YXRlENQIEgIIARoFCP4BEAUiB3ByaXZhdGUSJwoOCglob3NwaXRhbHMQ3AgSBAgGOAIaBQj8ARASIghob3NwaXRhbBIYCgcKAnRvEOYIEgIICRoFCIICEAgiAnRvEhYKBgoBIhDpCBICCAoaBQiCAhAgIgEiEhoKCAoDbm90EOoIEgIIAxoFCIICEBkiA25vdBIcCgkKBGRlbnkQ7ggSAggLGgUI/AEQPSIEZGVueRIoCg4KCXRyZWF0bWVudBDzCBIECAY4ARoFCIICEBIiCXRyZWF0bWVudBIaCggKA2ZvchD9CBICCAIaBQiDAhArIgNmb3ISIgoLCgZhbnlvbmUQgQkSBAgGOAEaBQiEAhAkIgZhbnlvbmUSIwoOCglzdWZmZXJpbmcQiAkSAggLGgUIhQIQOyIGc3VmZmVyEhwKCQoEZnJvbRCSCRICCAIaBQiGAhArIgRmcm9tEiAKCgoFZmV2ZXIQlwkSBAgGOAEaBQiHAhAkIgVmZXZlchIWCgYKAS4QnAkSAggKGgUI/AEQICIBLhIWCgYKASIQnQkSAggKGgUI/AEQICIBIhIWCgYKATwQngkSAggKGgUIjQIQICIBPBIWCgYKAS8QnwkSAggMGgUIjQIQICIBLxIYCgYKAXAQoAkSBAgGOAEaBQj8ARAPIgFwEhYKBgoBPhChCRICCAoaBQiNAhAgIgE+EhYKBgoBPBCiCRICCAoaBQiQAhAgIgE8EhgKBgoBcBCjCRIECAY4ARoFCI0CEA8iAXASFgoGCgE+EKQJEgIIChoFCJACECAiAT4SFgoGCgE8EKUJEgIIChoFCJMCECAiATwSGgoHCgJoMxCmCRIECAY4ARoFCI0CEA8iAmgzEhYKBgoBPhCoCRICCAoaBQiTAhAgIgE+Eh4KCgoFQWJvdXQQqQkSAggCGgUIjQIQKyIFQWJvdXQSIgoKCgVOaXBhaBCvCRIGCAY4AUgBGgUIlwIQGiIFTmlwYWgSIAoKCgV2aXJ1cxC1CRIECAY4ARoFCJUCECQiBXZpcnVzEhYKBgoBPBC6CRICCAoaBQiaAhAgIgE8EhYKBgoBLxC7CRICCAwaBQiaAhAgIgEvEhoKBwoCaDMQvAkSBAgGOAEaBQiXAhAGIgJoMxIWCgYKAT4QvgkSAggKGgUImgIQICIBPhIWCgYKATwQvwkSAggKGgUIngIQICIBPBIWCgYKAS8QwAkSAggMGgUIngIQICIBLxIYCgYKAXAQwQkSBAgGOAEaBQiXAhAGIgFwEhYKBgoBPhDCCRICCAoaBQieAhAgIgE+EhYKBgoBPBDDCRICCAoaBQiNAhAgIgE8EhgKBgoBcBDECRIECAY4ARoFCI0CEAYiAXASFgoGCgE+EMUJEgIIChoFCI0CECAiAT4SHgoKCgVUaGVyZRDGCRICCAUaBQikAhATIgVUaGVyZRIgCgcKAmlzEMwJEgoICzADOAFAA1gEGgUI/AEQCyICYmUSGAoHCgJubxDPCRICCAUaBQimAhAZIgJubxIkCgwKB3ZhY2NpbmUQ0gkSBAgGOAEaBQikAhAcIgd2YWNjaW5lEiIKDAoHYWdhaW5zdBDaCRICCAIaBQimAhArIgdhZ2FpbnN0EiIKCgoFTmlwYWgQ4gkSBggGOAFIARoFCKcCECQiBU5pcGFoEhoKCAoDYW5kEOgJEgIIBBoFCKQCEAoiA2FuZBIaCggKA3RoZRDsCRICCAUaBQitAhAQIgN0aGUSHAoJCgRvbmx5EPAJEgIIARoFCK0CEAUiBG9ubHkSKAoOCgl0cmVhdG1lbnQQ9QkSBAgGOAEaBQitAhAaIgl0cmVhdG1lbnQSIgoLCgZvcHRpb24Q/wkSBAgGOAEaBQiuAhAcIgZvcHRpb24SIAoHCgJpcxCGChIKCAswAzgBQANYBBoFCKQCEAwiAmJlEigKDwoKc3VwcG9ydGl2ZRCJChICCAEaBQiwAhAFIgpzdXBwb3J0aXZlEh4KCQoEY2FyZRCUChIECAY4ARoFCK4CEAciBGNhcmUSFgoGCgEsEJgKEgIIChoFCK4CECAiASwSIwoOCglhY2NvcmRpbmcQmgoSAggLGgUIyAIQKyIGYWNjb3JkEhgKBwoCdG8QpAoSAggCGgUIsgIQIyICdG8SIAoJCgRXSE8uEKcKEgYIBjgBSAEaBQizAhAkIgRXSE8uEhYKBgoBPBCrChICCAoaBQi3AhAgIgE8EhYKBgoBLxCsChICCAwaBQi3AhAgIgEvEhgKBgoBcBCtChIECAY4ARoFCLQCEAYiAXASFgoGCgE+EK4KEgIIChoFCLcCECAiAT4SFgoGCgE8EK8KEgIIChoFCLoCECAiATwSGAoGCgFwELAKEgQIBjgBGgUItAIQDyIBcBIWCgYKAT4QsQoSAggKGgUIugIQICIBPhIaCggKA1R3bxCyChICCAcaBQi9AhAeIgNUd28SJQoNCghicm90aGVycxC2ChIECAY4AhoFCLQCEA8iB2Jyb3RoZXISGAoHCgJpbhC/ChICCAIaBQi9AhArIgJpbhIkCgoKBXRoZWlyEMIKEggICBgFOAJAAxoFCMECECUiBXRoZWlyEhwKCQoEbGF0ZRDIChICCAEaBQjBAhAFIgRsYXRlEhsKCAoDMjBzEM0KEgQIBjgCGgUIvgIQJCICMjASGgoICgNhbmQQ0QoSAggEGgUItAIQCiIDYW5kEiQKCgoFdGhlaXIQ1QoSCAgIGAU4AkADGgUIxAIQJSIFdGhlaXISHgoJCgRhdW50ENsKEgQIBjgBGgUItAIQDCIEYXVudBIWCgYKASwQ3woSAggKGgUIxAIQICIBLBIYCgcKAjUwEOEKEgIIBxoFCMQCEAYiAjUwEhYKBgoBLBDjChICCAoaBQjEAhAgIgEsEh8KCQoEZGllZBDlChIGCAswA1gDGgUIrgIQCyIDZGllEhwKCQoEZnJvbRDqChICCAIaBQjIAhArIgRmcm9tEhoKCAoDdGhlEO8KEgIIBRoFCMsCEBAiA3RoZRIgCgoKBXZpcnVzEPMKEgQIBjgBGgUIyQIQJCIFdmlydXMSGAoHCgJpbhD5ChICCAIaBQjLAhArIgJpbhIqCg4KCUtvemlraG9kZRD8ChIGCAY4AUgBGgUIzgIQGiIJS296aWtob2RlEiYKDQoIZGlzdHJpY3QQhgsSBAgGOAEaBQjMAhAkIghkaXN0cmljdBIWCgYKASwQjgsSAggKGgUIyAIQICIBLBIjCg4KCWFjY29yZGluZxCQCxICCAsaBQjuAhArIgZhY2NvcmQSGAoHCgJ0bxCaCxICCAIaBQjQAhAjIgJ0bxIeCggKA0RyLhCdCxIGCAY4AUgBGgUI1AIQPyIDRHIuEiIKCgoFUmVlbmEQoQsSBggGOAFIARoFCNQCEBoiBVJlZW5hEhwKBwoCS0oQpwsSBggGOAFIARoFCNECECQiAktKEhYKBgoBLBCpCxICCAoaBQjUAhAgIgEsEhoKCAoDdGhlEKsLEgIIBRoFCNcCEBAiA3RoZRIgCgoKBXN0YXRlEK8LEgQIBjgBGgUI2gIQJSIFc3RhdGUSGAoHCgIncxC0CxICCAkaBQjXAhAuIgIncxIoCg4KCWFzc2lzdGFudBC3CxIECAY4ARoFCNoCEBoiCWFzc2lzdGFudBImCg0KCGRpcmVjdG9yEMELEgQIBjgBGgUI1AIQBiIIZGlyZWN0b3ISGAoHCgJvZhDKCxICCAIaBQjaAhArIgJvZhIgCgsKBnB1YmxpYxDNCxICCAEaBQjdAhAFIgZwdWJsaWMSJAoMCgdoZWFsdGguENQLEgQIBjgBGgUI2wIQJCIHaGVhbHRoLhIWCgYKATwQ2wsSAggKGgUI4AIQICIBPBIWCgYKAS8Q3AsSAggMGgUI4AIQICIBLxIYCgYKAXAQ3QsSBAgGOAEaBQjdAhAGIgFwEhYKBgoBPhDeCxICCAoaBQjgAhAgIgE+EhYKBgoBPBDfCxICCAoaBQjjAhAgIgE8EhgKBgoBcBDgCxIECAY4ARoFCN0CEAYiAXASFgoGCgE+EOELEgIIChoFCOMCECAiAT4SGgoICgNUaGUQ4gsSAggFGgUI5gIQECIDVGhlEiIKCwoGZmF0aGVyEOYLEgQIBjgBGgUI3QIQBiIGZmF0aGVyEhgKBwoCb2YQ7QsSAggCGgUI5gIQKyICb2YSGgoICgN0aGUQ8AsSAggFGgUI6gIQECIDdGhlEhoKCAoDdHdvEPQLEgIIBxoFCOoCEB4iA3R3bxIcCggKA21lbhD4CxIECAY4AhoFCOcCECQiA21hbhIWCgYKASwQ+wsSAggKGgUI6gIQICIBLBIYCgcKAjU2EP0LEgIIBxoFCOoCEAYiAjU2EhYKBgoBLBD/CxICCAoaBQjUAhAgIgEsEiAKBwoCaXMQgQwSCggLMAM4AUADWAQaBQjIAhALIgJiZRImCg4KCWN1cnJlbnRseRCEDBICCAMaBQjuAhAEIgljdXJyZW50bHkSGAoHCgJvbhCODBICCAIaBQjuAhArIgJvbhIeCgkKBGxpZmUQkQwSBAgGOAEaBQjyAhAaIgRsaWZlEiQKDAoHc3VwcG9ydBCWDBIECAY4ARoFCPACECQiB3N1cHBvcnQSGgoICgNhbmQQngwSAggEGgUI8AIQCiIDYW5kEhgKBwoCaW4QogwSAggCGgUI8AIQDCICaW4SFgoGCgFhEKUMEgIIBRoFCPgCEBAiAWESFgoGCgEiEKcMEgIIChoFCPgCECAiASISJgoOCglkZWxpcmlvdXMQqAwSAggBGgUI+AIQBSIJZGVsaXJpb3VzEiAKCgoFc3RhdGUQsgwSBAgGOAEaBQj0AhAkIgVzdGF0ZRIWCgYKASwQtwwSAggKGgUI+wIQICIBLBIWCgYKASIQuAwSAggKGgUI+wIQICIBIhIfCgkKBHNhaWQQugwSBggLMANYAxoFCPsCEDYiA3NheRIkCgsKBlJlZW5hLhC/DBIGCAY4AUgBGgUI/wIQGiIGUmVlbmEuEhYKBgoBPBDFDBICCAoaBQj/AhAgIgE8EhYKBgoBLxDGDBICCAwaBQj/AhAgIgEvEhgKBgoBcBDHDBIECAY4ARoFCPsCEBwiAXASFgoGCgE+EMgMEgIIChoFCPsCECAiAT4aIAoGcGVvcGxlEAElJoElPioPCgsKBnBlb3BsZRCLARACGiIKB21lbWJlcnMQASVrLYU9KhAKDAoHbWVtYmVycxCvAhACGl8KCFJlZW5hIEtKEAElTVZrPSoOCgoKBVJlZW5hEJUEEAEqEQoNCghSZWVuYSBLShChCxABKgwKCAoDRHIuEJ0LEAIqGwoXChJhc3Npc3RhbnQgZGlyZWN0b3IQtwsQAhogCgZwZW9wbGUQASU9SEU9Kg8KCwoGcGVvcGxlEPABEAIaJAoIZGVjZWFzZWQQASWbUys9KhEKDQoIZGVjZWFzZWQQhwIQAhodCgVzdGF0ZRACJf5FHj0qDQoJCgVzdGF0ZRBVEAIaHQoFdmlydXMQByUmQh49Kg0KCQoFdmlydXMQCRACGh0KBXZpcnVzEAclhNgWPSoNCgkKBXZpcnVzEH4QAhofCgZwZW9wbGUQASWHfw49Kg4KCgoGcGVvcGxlEDcQAhoiCgdjb250YWN0EAclkuDyPCoQCgwKB2NvbnRhY3QQoAEQAhodCgVsaXZlcxAHJb7DxTwqDQoJCgVsaXZlcxAcEAIaiwEKBU5pcGFoEAcaOgoNd2lraXBlZGlhX3VybBIpaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSGVuaXBhdmlydXMaEAoDbWlkEgkvbS8wMXg1bnol0IvDPCoNCgkKBU5pcGFoEHgQASoOCgoKBU5pcGFoEPgDEAEqDgoKCgVOaXBhaBDiCRABGnsKCEpQIE5hZGRhEAEaQgoNd2lraXBlZGlhX3VybBIxaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSmFnYXRfUHJha2FzaF9OYWRkYRoRCgNtaWQSCi9tLzBfOHNoeXklob6oPCoRCg0KCEpQIE5hZGRhEM8FEAEaJgoJZGlzdHJpY3RzEAIlS1efPCoSCg4KCWRpc3RyaWN0cxC+AxACGmgKBktlcmFsYRACGjUKDXdpa2lwZWRpYV91cmwSJGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0tlcmFsYRoQCgNtaWQSCS9tLzBieWg4aiXHspA8Kg4KCgoGS2VyYWxhEF4QARoxCgZSZWVuYS4QASXGHYo8Kg8KCwoGUmVlbmEuEJIDEAEqDwoLCgZSZWVuYS4QvwwQARqEAQoFSW5kaWEQAho0Cg13aWtpcGVkaWFfdXJsEiNodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JbmRpYRoPCgNtaWQSCC9tLzAzcmswJR7DcDwqDQoJCgVJbmRpYRAlEAEqDgoKCgVJbmRpYRDOBBABKg4KCgoGSW5kaWFuEE4QARokCghob3NwaXRhbBACJVvCSzwqEQoNCghob3NwaXRhbBCXAhACGiYKCXRyZWF0bWVudBAEJVvCSzwqEgoOCgl0cmVhdG1lbnQQ+gIQAhpDChB0cmVhdG1lbnQgb3B0aW9uEAcl90FBPCoZChUKEHRyZWF0bWVudCBvcHRpb24Q9QkQAioNCgkKBGNhcmUQlAoQ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'
 </annotations>
</document>
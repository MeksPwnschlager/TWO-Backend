<?xml version="1.0" encoding="utf-8"?>
<document>
 <author>
  Meera Senthilingam, ('Edition CNN',)
 </author>
 <date>
  2018-02-16T11:05:18+00:00
 </date>
 <article>
<t>
 How 3-year-olds are helping people live longer
</t>
<d>
 The healing power of 3-year-olds is being harnessed in one of the UK's largest elderly care homes to reduce loneliness and keep people mobile, happy and living longer.
</d>
<p>
 Their guests of honor are late.
</p>
<p>
 "You can't help but feel the infection," said 90-year-old Fay Garcia, who was waiting patiently. It's like someone comes in and turns the light on, she said.
</p>
<p>
 The infection -- and light -- comes in the form of a class full of children 2 to 3 years old who frequent the physical therapy session -- and many other parts of the daily lives of the residents at the Jewish care home.
</p>
<p>
 In September, Nightingale House opened the doors to its on-site nursery, Apples and Honey Nightingale, the first co-located nursery in the UK. Children and elderly residents have access to a program filled with activities that include baking, gardening and art, as well as exercise. Residents can also access the nursery to spend time with the kids.
</p>
<p>
 "The children work with and play with the residents every single day," said Ali Somers, co-founder of Apples and Honey Nightingale, who also heads evaluation and impact for this program.
</p>
<p>
 The premise is intergenerational care, providing wisdom to the young and relationships -- and, in turn, longevity -- to the old.
</p>
<p>
 <h3>
  'Good things are happening'
 </h3>
</p>
<p>
 "When we bring children and residents together, the elderly together, you can see right away that good things are happening," Somers said.
</p>
<p>
 These "good things" are evident to any observer.
</p>
<p>
 More than 10 children make their way along the garden paths into the lounge where the residents are stretching their arms and shaking their legs. Most faces in the room are smiling, and a few residents reach out to encourage the kids to come toward them specifically.
</p>
<p>
 As small children roam about, trying the exercises themselves, cuddling up to residents and in some cases performing headstands, the rest of the room comes alive.
</p>
<p>
 "They're responding to an external stimulus, which is a toddler with an adorable grin fumbling towards them, carrying a toy, trying to interact," Somers said.
</p>
<p>
 The benefits in terms of health are also clear to see.
</p>
<p>
 Residents "very often forget their own physical limitations, and they find that they are encouraged; they stretch themselves; they will lean up out of their chair, extend a hand, engage in conversation," she added.
</p>
<p>
 The average age of residents in the home is over 90, with 10% of them over 100, meaning issues regarding mobility and frailty are a priority, as well as loneliness.
</p>
<p>
 If residents are more engaged, "they're encouraged to walk from the home down to the nursery. They're going outside more. They want to opt in to working with and spending time with and playing with the residents," Somers said.
</p>
<p>
 <h3>
  'Adopted grandchildren'
 </h3>
</p>
<p>
 At first, "I couldn't see the connection between early years and old age," said Garcia, who moved into the home a little over three years ago, having lived in New York for most of her adult life.
</p>
<p>
 The idea of intergenerational care didn't mean much to her, she said, as she had never had children of her own. But once she was informed about the benefits and began spending time with the children, she soon changed her perspective.
</p>
<p>
 "When the children come in, they recognize you after some time, and now I have all these adopted grandchildren and great-grandchildren," Garcia said.
</p>
<p>
 "It's a whole new beginning for me," she said.
</p>
<p>
 The team at Nightingale has seen the change in Garcia and most of the home's residents -- both physical and psychological.
</p>
<p>
 She has been going to the mother and toddler groups and visiting the nursery, walking around and just having  fun with the little ones, said Simon Pedzisi, director of care services at Nightingale House. His daughter attends the nursery and spends a lot of time with Garcia.
</p>
<p>
 "I see (Garcia) move round and round the building walking, going to different places," he said. "That's physical exercise with a purpose, because she's got somewhere to go, and she's got something that she's doing, which is different from trying to motivate herself."
</p>
<p>
 <h3>
  Ending age apartheid
 </h3>
</p>
<p>
 The idea of intergenerational care is new to the UK, but the idea stems from similar centers in the United States and other parts of the world.
</p>
<p>
 "People are becoming more and more aware of the age apartheid that we live with," said Judith Horowitz, who co-founded the nursery with Somers.
</p>
<p>
 Horowitz highlighted the fractured society that is increasingly dominant, "where people actually don't mix, where you often don't have extended family that are living close to you."
</p>
<p>
 "We're not learning from each other," she said. "Very small children are very nonjudgmental. They're very accepting, and they're also very interested and very creative. They see things often from rather quirky directions."
</p>
<p>
 Any significant differences made by the program are yet to be calculated, as the nursery has been in operation for only a few months. But a baby and toddler group preceded the creation of the nursery in January 2017, from which Somers is already seeing results -- and expects to see more.
</p>
<p>
 "The residents enjoy watching the children and observing them," Somers said. "They engage different parts of their brains."
</p>
<p>
 Somers believes the days of institutionalizing -- and separating -- child care and later life care are coming to an end.
</p>
<p>
 Sarah Harper, professor of gerontology at the University of Oxford, agreed, adding that today, people go to school and work and often then live with people of a similar age.
</p>
<p>
 The consequence? As partners, siblings, cousins and other lateral generations die, people "may find themselves very isolated and alone," said Harper, who is not involved in the Nightingale project.
</p>
<p>
 "In the old days, people used to live together in households ... (or) with different generations just down the road," she said. "In a way, it's very sad that we have to set up intergenerational programs. It should be actually very natural thing for the generations to live together."
</p>
<p>
 While programs are typically set up to benefit the elderly, Harper believes they end up equally benefiting the younger ages: Both young children and teenagers having older people as role models.
</p>
<p>
 "Love and relationships and getting into the world it isn't new for (the older) generation. I think that can be really comforting and reassuring," she said. "We should naturally try to get the generations to live together."
</p>
<p>
 It's Tuesday morning, and more than 20 residents are seated around a room flooded with natural light, holding weights and performing moderate physical therapy exercises with an instructor.
</p>
<p>
 The mood is calm, and people are engaged, yet there is excitement in the air. Every few minutes, residents glance toward the door in anticipation.
</p>
 </article>
 <annotations>
  b''
 </annotations>
</document>